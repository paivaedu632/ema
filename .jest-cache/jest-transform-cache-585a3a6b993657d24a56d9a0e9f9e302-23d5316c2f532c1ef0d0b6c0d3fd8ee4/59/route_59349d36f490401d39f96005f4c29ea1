62d68e2e4e0b8af69e2385c2dc0b2f70
/* istanbul ignore next */
function cov_109mdwngu8() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\market\\route.ts";
  var hash = "5b228e77ed56c58c2a313563e76796baeab2e270";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\market\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 76
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "3": {
        start: {
          line: 14,
          column: 80
        },
        end: {
          line: 14,
          column: 95
        }
      },
      "4": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "5": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "7": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "9": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 86
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "11": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 79
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 56
        }
      },
      "13": {
        start: {
          line: 38,
          column: 22
        },
        end: {
          line: 38,
          column: 33
        }
      },
      "14": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "15": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 85
        }
      },
      "16": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 77
        }
      }
    },
    fnMap: {
      "0": {
        name: "marketOrderHandler",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 33
          }
        },
        loc: {
          start: {
            line: 7,
            column: 49
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 55
          },
          end: {
            line: 14,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 71
          },
          end: {
            line: 14,
            column: 75
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 60
          },
          end: {
            line: 27,
            column: 66
          }
        }, {
          start: {
            line: 27,
            column: 69
          },
          end: {
            line: 27,
            column: 96
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 40
          }
        }, {
          start: {
            line: 27,
            column: 44
          },
          end: {
            line: 27,
            column: 57
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 60
          },
          end: {
            line: 30,
            column: 66
          }
        }, {
          start: {
            line: 30,
            column: 69
          },
          end: {
            line: 30,
            column: 92
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 40
          }
        }, {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 57
          }
        }],
        line: 30
      },
      "9": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "10": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 60
          },
          end: {
            line: 33,
            column: 66
          }
        }, {
          start: {
            line: 33,
            column: 69
          },
          end: {
            line: 33,
            column: 93
          }
        }],
        line: 33
      },
      "11": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 40
          }
        }, {
          start: {
            line: 33,
            column: 44
          },
          end: {
            line: 33,
            column: 57
          }
        }],
        line: 33
      },
      "12": {
        loc: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 62
          },
          end: {
            line: 40,
            column: 68
          }
        }, {
          start: {
            line: 40,
            column: 71
          },
          end: {
            line: 40,
            column: 83
          }
        }],
        line: 40
      },
      "13": {
        loc: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 35
          }
        }, {
          start: {
            line: 40,
            column: 39
          },
          end: {
            line: 40,
            column: 59
          }
        }],
        line: 40
      },
      "14": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 68
          },
          end: {
            line: 48,
            column: 74
          }
        }, {
          start: {
            line: 48,
            column: 77
          },
          end: {
            line: 48,
            column: 101
          }
        }],
        line: 48
      },
      "15": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 41
          }
        }, {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 65
          }
        }],
        line: 48
      },
      "16": {
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 69
          },
          end: {
            line: 49,
            column: 75
          }
        }, {
          start: {
            line: 49,
            column: 78
          },
          end: {
            line: 49,
            column: 103
          }
        }],
        line: 49
      },
      "17": {
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 42
          }
        }, {
          start: {
            line: 49,
            column: 46
          },
          end: {
            line: 49,
            column: 66
          }
        }],
        line: 49
      },
      "18": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 87
          }
        }, {
          start: {
            line: 50,
            column: 92
          },
          end: {
            line: 50,
            column: 100
          }
        }],
        line: 50
      },
      "19": {
        loc: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 62
          },
          end: {
            line: 50,
            column: 68
          }
        }, {
          start: {
            line: 50,
            column: 71
          },
          end: {
            line: 50,
            column: 87
          }
        }],
        line: 50
      },
      "20": {
        loc: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 35
          }
        }, {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 59
          }
        }],
        line: 50
      },
      "21": {
        loc: {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 51,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 94
          }
        }, {
          start: {
            line: 51,
            column: 99
          },
          end: {
            line: 51,
            column: 123
          }
        }],
        line: 51
      },
      "22": {
        loc: {
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 65
          },
          end: {
            line: 51,
            column: 71
          }
        }, {
          start: {
            line: 51,
            column: 74
          },
          end: {
            line: 51,
            column: 94
          }
        }],
        line: 51
      },
      "23": {
        loc: {
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 38
          }
        }, {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 51,
            column: 62
          }
        }],
        line: 51
      },
      "24": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 96
          }
        }, {
          start: {
            line: 52,
            column: 101
          },
          end: {
            line: 52,
            column: 125
          }
        }],
        line: 52
      },
      "25": {
        loc: {
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 66
          },
          end: {
            line: 52,
            column: 72
          }
        }, {
          start: {
            line: 52,
            column: 75
          },
          end: {
            line: 52,
            column: 96
          }
        }],
        line: 52
      },
      "26": {
        loc: {
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 39
          }
        }, {
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 52,
            column: 63
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\market\\route.ts",
      mappings: "AACA,OAAO,EAAE,QAAQ,EAAqB,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAE9D,KAAK,UAAU,kBAAkB,CAAC,OAAoB,EAAE,IAAuB;;IAC7E,wBAAwB;IACxB,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IACzE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,GAAG,IAAI,EAAE,GAAG,UAAU,CAAC,IAAK,CAAC;IAE7F,uBAAuB;IACvB,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC;QACtC,OAAO,EAAE,IAAI,CAAC,MAAM;QACpB,UAAU,EAAE,QAAQ;QACpB,IAAI;QACJ,aAAa,EAAE,YAAY;QAC3B,cAAc,EAAE,aAAa;QAC7B,MAAM;QACN,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,8BAA8B;QAC9B,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAE,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;YAC3C,OAAO,cAAc,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,OAAO,cAAc,CAAC,WAAW,CAAC,sCAAsC,CAAC,CAAC;QAC5E,CAAC;QACD,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAE,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;YACxC,OAAO,cAAc,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAC;QACrE,CAAC;QAED,OAAO,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,SAAS,GAAG,MAAM,CAAC,IAAkJ,CAAC;IAE5K,MAAM,YAAY,GAAG;QACnB,OAAO,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,EAAE;QACtB,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,SAAS,EAAE,QAAiB;QAC5B,IAAI;QACJ,YAAY;QACZ,aAAa;QACb,MAAM;QACN,aAAa;QACb,aAAa,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,cAAc;QACxC,cAAc,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,eAAe;QAC1C,MAAM,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,KAAI,QAAQ;QACrC,SAAS,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,UAAU,KAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QAC5D,UAAU,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,WAAW,KAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QAC9D,YAAY,EAAE,SAAS;KACxB,CAAC;IAEF,OAAO,qBAAqB,CAAC,YAAY,EAAE,oCAAoC,CAAC,CAAC;AACnF,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\market\\route.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateRequestBody } from '@/lib/validation/helpers';\nimport { marketOrderSchema } from '@/lib/validation/schemas';\nimport { executeMarketOrder } from '@/lib/database/functions';\n\nasync function marketOrderHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate request body\n  const validation = await validateRequestBody(request, marketOrderSchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { side, amount, baseCurrency, quoteCurrency, slippageLimit = 0.05 } = validation.data!;\n\n  // Execute market order\n  const result = await executeMarketOrder({\n    user_id: user.userId,\n    order_type: 'market',\n    side,\n    base_currency: baseCurrency,\n    quote_currency: quoteCurrency,\n    amount,\n    slippage_limit: slippageLimit\n  });\n\n  if (!result.success) {\n    // Handle specific error cases\n    if (result.error?.includes('insufficient')) {\n      return ErrorResponses.insufficientBalance(result.error);\n    }\n    if (result.error?.includes('slippage')) {\n      return ErrorResponses.orderFailed('Order rejected due to slippage limit');\n    }\n    if (result.error?.includes('liquidity')) {\n      return ErrorResponses.orderFailed('Insufficient market liquidity');\n    }\n\n    return ErrorResponses.orderFailed(result.error);\n  }\n\n  const orderData = result.data as { id?: string; executed_price?: number; executed_amount?: number; status?: string; created_at?: string; executed_at?: string } | undefined;\n\n  const responseData = {\n    orderId: orderData?.id,\n    userId: user.userId,\n    orderType: 'market' as const,\n    side,\n    baseCurrency,\n    quoteCurrency,\n    amount,\n    slippageLimit,\n    executedPrice: orderData?.executed_price,\n    executedAmount: orderData?.executed_amount,\n    status: orderData?.status || 'filled',\n    createdAt: orderData?.created_at || new Date().toISOString(),\n    executedAt: orderData?.executed_at || new Date().toISOString(),\n    orderDetails: orderData\n  };\n\n  return createSuccessResponse(responseData, 'Market order executed successfully');\n}\n\nexport const POST = withCors(withErrorHandling(withAuth(marketOrderHandler)));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5b228e77ed56c58c2a313563e76796baeab2e270"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_109mdwngu8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_109mdwngu8();
import { withAuth } from '@/lib/auth/middleware';
import { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';
import { withCors } from '@/lib/api/cors';
import { validateRequestBody } from '@/lib/validation/helpers';
import { marketOrderSchema } from '@/lib/validation/schemas';
import { executeMarketOrder } from '@/lib/database/functions';
async function marketOrderHandler(request, user) {
  /* istanbul ignore next */
  cov_109mdwngu8().f[0]++;
  var _a, _b, _c;
  // Validate request body
  const validation =
  /* istanbul ignore next */
  (cov_109mdwngu8().s[0]++, await validateRequestBody(request, marketOrderSchema));
  /* istanbul ignore next */
  cov_109mdwngu8().s[1]++;
  if (!validation.success) {
    /* istanbul ignore next */
    cov_109mdwngu8().b[0][0]++;
    cov_109mdwngu8().s[2]++;
    return ErrorResponses.validationError(validation.error);
  } else
  /* istanbul ignore next */
  {
    cov_109mdwngu8().b[0][1]++;
  }
  const {
    side,
    amount,
    baseCurrency,
    quoteCurrency,
    slippageLimit =
    /* istanbul ignore next */
    (cov_109mdwngu8().b[1][0]++, 0.05)
  } =
  /* istanbul ignore next */
  (cov_109mdwngu8().s[3]++, validation.data);
  // Execute market order
  const result =
  /* istanbul ignore next */
  (cov_109mdwngu8().s[4]++, await executeMarketOrder({
    user_id: user.userId,
    order_type: 'market',
    side,
    base_currency: baseCurrency,
    quote_currency: quoteCurrency,
    amount,
    slippage_limit: slippageLimit
  }));
  /* istanbul ignore next */
  cov_109mdwngu8().s[5]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_109mdwngu8().b[2][0]++;
    cov_109mdwngu8().s[6]++;
    // Handle specific error cases
    if (
    /* istanbul ignore next */
    (cov_109mdwngu8().b[5][0]++, (_a = result.error) === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[5][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[4][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[4][1]++, _a.includes('insufficient'))) {
      /* istanbul ignore next */
      cov_109mdwngu8().b[3][0]++;
      cov_109mdwngu8().s[7]++;
      return ErrorResponses.insufficientBalance(result.error);
    } else
    /* istanbul ignore next */
    {
      cov_109mdwngu8().b[3][1]++;
    }
    cov_109mdwngu8().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_109mdwngu8().b[8][0]++, (_b = result.error) === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[8][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[7][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[7][1]++, _b.includes('slippage'))) {
      /* istanbul ignore next */
      cov_109mdwngu8().b[6][0]++;
      cov_109mdwngu8().s[9]++;
      return ErrorResponses.orderFailed('Order rejected due to slippage limit');
    } else
    /* istanbul ignore next */
    {
      cov_109mdwngu8().b[6][1]++;
    }
    cov_109mdwngu8().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_109mdwngu8().b[11][0]++, (_c = result.error) === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[11][1]++, _c === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[10][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[10][1]++, _c.includes('liquidity'))) {
      /* istanbul ignore next */
      cov_109mdwngu8().b[9][0]++;
      cov_109mdwngu8().s[11]++;
      return ErrorResponses.orderFailed('Insufficient market liquidity');
    } else
    /* istanbul ignore next */
    {
      cov_109mdwngu8().b[9][1]++;
    }
    cov_109mdwngu8().s[12]++;
    return ErrorResponses.orderFailed(result.error);
  } else
  /* istanbul ignore next */
  {
    cov_109mdwngu8().b[2][1]++;
  }
  const orderData =
  /* istanbul ignore next */
  (cov_109mdwngu8().s[13]++, result.data);
  const responseData =
  /* istanbul ignore next */
  (cov_109mdwngu8().s[14]++, {
    orderId:
    /* istanbul ignore next */
    (cov_109mdwngu8().b[13][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[13][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[12][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[12][1]++, orderData.id),
    userId: user.userId,
    orderType: 'market',
    side,
    baseCurrency,
    quoteCurrency,
    amount,
    slippageLimit,
    executedPrice:
    /* istanbul ignore next */
    (cov_109mdwngu8().b[15][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[15][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[14][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[14][1]++, orderData.executed_price),
    executedAmount:
    /* istanbul ignore next */
    (cov_109mdwngu8().b[17][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[17][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[16][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[16][1]++, orderData.executed_amount),
    status:
    /* istanbul ignore next */
    (cov_109mdwngu8().b[18][0]++,
    /* istanbul ignore next */
    (cov_109mdwngu8().b[20][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[20][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[19][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[19][1]++, orderData.status)) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[18][1]++, 'filled'),
    createdAt:
    /* istanbul ignore next */
    (cov_109mdwngu8().b[21][0]++,
    /* istanbul ignore next */
    (cov_109mdwngu8().b[23][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[23][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[22][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[22][1]++, orderData.created_at)) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[21][1]++, new Date().toISOString()),
    executedAt:
    /* istanbul ignore next */
    (cov_109mdwngu8().b[24][0]++,
    /* istanbul ignore next */
    (cov_109mdwngu8().b[26][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[26][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_109mdwngu8().b[25][0]++, void 0) :
    /* istanbul ignore next */
    (cov_109mdwngu8().b[25][1]++, orderData.executed_at)) ||
    /* istanbul ignore next */
    (cov_109mdwngu8().b[24][1]++, new Date().toISOString()),
    orderDetails: orderData
  });
  /* istanbul ignore next */
  cov_109mdwngu8().s[15]++;
  return createSuccessResponse(responseData, 'Market order executed successfully');
}
export const POST =
/* istanbul ignore next */
(cov_109mdwngu8().s[16]++, withCors(withErrorHandling(withAuth(marketOrderHandler))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,