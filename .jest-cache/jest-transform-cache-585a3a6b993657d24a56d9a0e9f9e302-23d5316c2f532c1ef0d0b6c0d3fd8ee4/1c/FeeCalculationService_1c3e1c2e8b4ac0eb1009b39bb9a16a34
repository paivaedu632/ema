2fba40eb8dbb7fc5ec54fe91883a3b65
/* istanbul ignore next */
function cov_ie0p0kn52() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\services\\FeeCalculationService.ts";
  var hash = "9056a1a454308a3be51b683a1808c642160d0285";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\services\\FeeCalculationService.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "1": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "2": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 83
        }
      },
      "3": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "4": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 104
        }
      },
      "5": {
        start: {
          line: 23,
          column: 34
        },
        end: {
          line: 23,
          column: 77
        }
      },
      "6": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "7": {
        start: {
          line: 27,
          column: 33
        },
        end: {
          line: 27,
          column: 81
        }
      },
      "8": {
        start: {
          line: 28,
          column: 36
        },
        end: {
          line: 28,
          column: 94
        }
      },
      "9": {
        start: {
          line: 30,
          column: 39
        },
        end: {
          line: 30,
          column: 78
        }
      },
      "10": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 45
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "12": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "13": {
        start: {
          line: 36,
          column: 13
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "14": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "15": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "17": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 69
        }
      },
      "18": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "19": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 47
        }
      },
      "20": {
        start: {
          line: 68,
          column: 36
        },
        end: {
          line: 68,
          column: 80
        }
      },
      "21": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 44
        }
      },
      "22": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 71
        }
      },
      "23": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 76,
          column: 76
        }
      },
      "24": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "25": {
        start: {
          line: 86,
          column: 29
        },
        end: {
          line: 86,
          column: 83
        }
      },
      "26": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 88,
          column: 25
        }
      },
      "27": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 25
        }
      },
      "28": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 89,
          column: 72
        }
      },
      "29": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 84
        }
      },
      "30": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 96,
          column: 57
        }
      },
      "31": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 43
        }
      },
      "32": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "33": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "34": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "35": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 166
        }
      },
      "36": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 28
        }
      },
      "37": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 46
        }
      },
      "38": {
        start: {
          line: 117,
          column: 26
        },
        end: {
          line: 117,
          column: 53
        }
      },
      "39": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "40": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "41": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 25
        }
      },
      "42": {
        start: {
          line: 135,
          column: 28
        },
        end: {
          line: 135,
          column: 42
        }
      },
      "43": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 42
        }
      },
      "44": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "45": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "46": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 162,
          column: 11
        }
      },
      "47": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "48": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "49": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "50": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "51": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 205,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 75
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 69
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 50
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 56
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 85
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 47
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 95
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 43
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 115
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 37
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 134
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 62
          },
          end: {
            line: 63,
            column: 67
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 88,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 88,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "8": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "9": {
        loc: {
          start: {
            line: 123,
            column: 43
          },
          end: {
            line: 123,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 62
          },
          end: {
            line: 123,
            column: 63
          }
        }, {
          start: {
            line: 123,
            column: 66
          },
          end: {
            line: 123,
            column: 70
          }
        }],
        line: 123
      },
      "10": {
        loc: {
          start: {
            line: 125,
            column: 45
          },
          end: {
            line: 125,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 64
          },
          end: {
            line: 125,
            column: 65
          }
        }, {
          start: {
            line: 125,
            column: 68
          },
          end: {
            line: 125,
            column: 72
          }
        }],
        line: 125
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 45
          },
          end: {
            line: 126,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 64
          },
          end: {
            line: 126,
            column: 66
          }
        }, {
          start: {
            line: 126,
            column: 69
          },
          end: {
            line: 126,
            column: 74
          }
        }],
        line: 126
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\services\\FeeCalculationService.ts",
      mappings: "AAAA;;;;;GAKG;AAEH,OAAO,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAA;AAC9C,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAA;AAyBpD,MAAM,OAAO,qBAAqB;IAGhC;QAFiB,kBAAa,GAA8B,IAAI,GAAG,EAAE,CAAA;QAGnE,IAAI,CAAC,8BAA8B,EAAE,CAAA;IACvC,CAAC;IAED;;OAEG;IACH,YAAY,CACV,MAAa,EACb,eAAgC,EAChC,IAAW;QAEX,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAA;QAE3E,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,8BAA8B,eAAe,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;QAC7F,CAAC;QAED,8CAA8C;QAC9C,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;QAErE,gCAAgC;QAChC,MAAM,cAAc,GAAG,iBAAiB,CAAC,QAAQ,CAAA;QAEjD,qCAAqC;QACrC,MAAM,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAA;QACzE,MAAM,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAA;QAEtF,iDAAiD;QACjD,MAAM,sBAAsB,GAAG,cAAc,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;QAEtE,wCAAwC;QACxC,IAAI,QAAQ,GAAG,sBAAsB,CAAA;QACrC,IAAI,QAAQ,CAAC,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,CAAC;YACtD,QAAQ,GAAG,iBAAiB,CAAC,UAAU,CAAA;QACzC,CAAC;aAAM,IAAI,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,CAAC;YAChE,QAAQ,GAAG,iBAAiB,CAAC,UAAU,CAAA;QACzC,CAAC;QAED,uBAAuB;QACvB,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QAE3C,OAAO;YACL,OAAO,EAAE,cAAc;YACvB,aAAa,EAAE,mBAAmB;YAClC,QAAQ;YACR,SAAS;YACT,YAAY,EAAE;gBACZ,cAAc;gBACd,mBAAmB;gBACnB,WAAW,EAAE,iBAAiB,CAAC,aAAa;aAC7C;SACF,CAAA;IACH,CAAC;IAED;;OAEG;IACH,oBAAoB,CAClB,WAAkB,EAClB,YAAmB,EACnB,eAA+B,EAC/B,IAAW;QAEX,6CAA6C;QAC7C,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC,CAAA;IAC9D,CAAC;IAED;;OAEG;IACH,mBAAmB,CACjB,MAAa,EACb,eAAgC,EAChC,aAAsB,KAAK;QAE3B,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;QACpC,CAAC;QAED,4BAA4B;QAC5B,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;QACxE,OAAO,mBAAmB,CAAC,QAAQ,CAAA;IACrC,CAAC;IAED;;OAEG;IACH,cAAc,CACZ,MAAa,EACb,eAAgC,EAChC,IAAW;QAEX,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC,CAAA;QAC/D,MAAM,aAAa,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAA;QAEpE,OAAO;YACL,YAAY,EAAE,MAAM,CAAC,QAAQ;YAC7B,aAAa;SACd,CAAA;IACH,CAAC;IAED;;OAEG;IACH,0BAA0B,CACxB,MAAa,EACb,eAAgC;QAEhC,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAA;QAC3E,IAAI,CAAC,YAAY;YAAE,OAAO,KAAK,CAAA;QAE/B,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,eAAe,CAAC,CAAA;QAChE,OAAO,aAAa,CAAC,QAAQ,CAAC,oBAAoB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;IAC7E,CAAC;IAED;;OAEG;IACK,eAAe,CACrB,eAAgC,EAChC,QAAkB;QAElB,MAAM,GAAG,GAAG,GAAG,eAAe,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAA;QACjD,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACpC,CAAC;IAED;;OAEG;IACK,kBAAkB,CACxB,YAA0B,EAC1B,IAAW;QAEX,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,OAAO,YAAY,CAAA;QACrB,CAAC;QAED,sCAAsC;QACtC,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;YACzB,uCACK,YAAY,KACf,aAAa,EAAE,YAAY,CAAC,aAAa,GAAG,GAAG,EAC/C,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAC9C;QACH,CAAC;QAED,OAAO,YAAY,CAAA;IACrB,CAAC;IAED;;OAEG;IACK,sBAAsB,CAAC,QAAkB;QAC/C,MAAM,GAAG,GAAG,WAAW,QAAQ,CAAC,IAAI,EAAE,CAAA;QACtC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAE7C,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,sBAAsB;YACtB,OAAO;gBACL,eAAe,EAAE,MAAM;gBACvB,QAAQ;gBACR,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,oBAAoB;gBACvF,aAAa,EAAE,CAAC;gBAChB,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC;gBACnE,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC;aACtE,CAAA;QACH,CAAC;QAED,OAAO,SAAS,CAAA;IAClB,CAAC;IAED;;OAEG;IACK,8BAA8B;QACpC,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAA;QAClC,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAA;QAElC,wBAAwB;QACxB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE;YACjC,eAAe,EAAE,MAAM;YACvB,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC;YAC5C,aAAa,EAAE,KAAK,EAAE,OAAO;YAC7B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC;YAC9C,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,CAAC;SAC9C,CAAC,CAAA;QAEF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE;YACjC,eAAe,EAAE,MAAM;YACvB,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC;YAC5C,aAAa,EAAE,KAAK,EAAE,OAAO;YAC7B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC;YAC9C,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC;SACjD,CAAC,CAAA;QAEF,6CAA6C;QAC7C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,EAAE;YAChC,eAAe,EAAE,KAAK;YACtB,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,WAAW,CAAC;YAC1C,aAAa,EAAE,IAAI,EAAE,KAAK;YAC1B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,WAAW,CAAC;YAC5C,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,CAAC;SAC9C,CAAC,CAAA;QAEF,8CAA8C;QAC9C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE;YACjC,eAAe,EAAE,MAAM;YACvB,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC;YAC7C,aAAa,EAAE,IAAI,EAAE,KAAK;YAC1B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC;YAC/C,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC;SACjD,CAAC,CAAA;QAEF,yCAAyC;QACzC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,EAAE;YACpC,eAAe,EAAE,SAAS;YAC1B,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;YACjC,aAAa,EAAE,CAAC;YAChB,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;YACnC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,WAAW,CAAC;SAC7C,CAAC,CAAA;QAEF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,EAAE;YACpC,eAAe,EAAE,SAAS;YAC1B,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;YACjC,aAAa,EAAE,CAAC;YAChB,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;YACnC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC;SAChD,CAAC,CAAA;QAEF,gBAAgB;QAChB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,EAAE;YACrC,eAAe,EAAE,UAAU;YAC3B,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,WAAW,CAAC;YAC1C,aAAa,EAAE,KAAK,EAAE,OAAO;YAC7B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,WAAW,CAAC;YAC5C,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,CAAC;SAC9C,CAAC,CAAA;QAEF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,EAAE;YACrC,eAAe,EAAE,UAAU;YAC3B,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC;YAC7C,aAAa,EAAE,KAAK,EAAE,OAAO;YAC7B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC;YAC/C,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC;SACjD,CAAC,CAAA;IACJ,CAAC;CACF",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\services\\FeeCalculationService.ts"],
      sourcesContent: ["/**\n * Fee Calculation Domain Service\n * \n * Handles fee calculations for different transaction types.\n * Contains business logic for fee structures and calculations.\n */\n\nimport { Money } from '../value-objects/Money'\nimport { Currency } from '../value-objects/Currency'\nimport { TransactionType } from '../entities/Transaction'\nimport { User } from '../entities/User'\n\nexport interface FeeStructure {\n  transactionType: TransactionType\n  currency: Currency\n  fixedFee: Money\n  percentageFee: number // As decimal (0.02 = 2%)\n  minimumFee: Money\n  maximumFee: Money\n}\n\nexport interface FeeCalculationResult {\n  baseFee: Money\n  percentageFee: Money\n  totalFee: Money\n  netAmount: Money\n  feeBreakdown: {\n    fixedComponent: Money\n    percentageComponent: Money\n    appliedRate: number\n  }\n}\n\nexport class FeeCalculationService {\n  private readonly feeStructures: Map<string, FeeStructure> = new Map()\n\n  constructor() {\n    this.initializeDefaultFeeStructures()\n  }\n\n  /**\n   * Calculate fee for a transaction\n   */\n  calculateFee(\n    amount: Money,\n    transactionType: TransactionType,\n    user?: User\n  ): FeeCalculationResult {\n    const feeStructure = this.getFeeStructure(transactionType, amount.currency)\n    \n    if (!feeStructure) {\n      throw new Error(`No fee structure found for ${transactionType} in ${amount.currency.code}`)\n    }\n\n    // Apply user-specific discounts if applicable\n    const adjustedStructure = this.applyUserDiscounts(feeStructure, user)\n\n    // Calculate fixed fee component\n    const fixedComponent = adjustedStructure.fixedFee\n\n    // Calculate percentage fee component\n    const percentageAmount = amount.multiply(adjustedStructure.percentageFee)\n    const percentageComponent = Money.fromNumber(percentageAmount.amount, amount.currency)\n\n    // Calculate total fee before min/max constraints\n    const totalBeforeConstraints = fixedComponent.add(percentageComponent)\n\n    // Apply minimum and maximum constraints\n    let totalFee = totalBeforeConstraints\n    if (totalFee.isLessThan(adjustedStructure.minimumFee)) {\n      totalFee = adjustedStructure.minimumFee\n    } else if (totalFee.isGreaterThan(adjustedStructure.maximumFee)) {\n      totalFee = adjustedStructure.maximumFee\n    }\n\n    // Calculate net amount\n    const netAmount = amount.subtract(totalFee)\n\n    return {\n      baseFee: fixedComponent,\n      percentageFee: percentageComponent,\n      totalFee,\n      netAmount,\n      feeBreakdown: {\n        fixedComponent,\n        percentageComponent,\n        appliedRate: adjustedStructure.percentageFee\n      }\n    }\n  }\n\n  /**\n   * Calculate fee for currency exchange\n   */\n  calculateExchangeFee(\n    inputAmount: Money,\n    outputAmount: Money,\n    transactionType: 'buy' | 'sell',\n    user?: User\n  ): FeeCalculationResult {\n    // Use the input currency for fee calculation\n    return this.calculateFee(inputAmount, transactionType, user)\n  }\n\n  /**\n   * Calculate network/processing fee for external transactions\n   */\n  calculateNetworkFee(\n    amount: Money,\n    transactionType: TransactionType,\n    isExternal: boolean = false\n  ): Money {\n    if (!isExternal) {\n      return Money.zero(amount.currency)\n    }\n\n    // External transaction fees\n    const networkFeeStructure = this.getNetworkFeeStructure(amount.currency)\n    return networkFeeStructure.fixedFee\n  }\n\n  /**\n   * Get fee estimate for display purposes\n   */\n  getFeeEstimate(\n    amount: Money,\n    transactionType: TransactionType,\n    user?: User\n  ): { estimatedFee: Money; feePercentage: number } {\n    const result = this.calculateFee(amount, transactionType, user)\n    const feePercentage = (result.totalFee.amount / amount.amount) * 100\n\n    return {\n      estimatedFee: result.totalFee,\n      feePercentage\n    }\n  }\n\n  /**\n   * Check if transaction amount meets minimum fee requirements\n   */\n  meetsMinimumFeeRequirement(\n    amount: Money,\n    transactionType: TransactionType\n  ): boolean {\n    const feeStructure = this.getFeeStructure(transactionType, amount.currency)\n    if (!feeStructure) return false\n\n    const calculatedFee = this.calculateFee(amount, transactionType)\n    return calculatedFee.totalFee.isGreaterThanOrEqual(feeStructure.minimumFee)\n  }\n\n  /**\n   * Get fee structure for transaction type and currency\n   */\n  private getFeeStructure(\n    transactionType: TransactionType,\n    currency: Currency\n  ): FeeStructure | undefined {\n    const key = `${transactionType}-${currency.code}`\n    return this.feeStructures.get(key)\n  }\n\n  /**\n   * Apply user-specific fee discounts\n   */\n  private applyUserDiscounts(\n    feeStructure: FeeStructure,\n    user?: User\n  ): FeeStructure {\n    if (!user) {\n      return feeStructure\n    }\n\n    // KYC-approved users get reduced fees\n    if (user.isKycApproved()) {\n      return {\n        ...feeStructure,\n        percentageFee: feeStructure.percentageFee * 0.8, // 20% discount\n        fixedFee: feeStructure.fixedFee.multiply(0.8)\n      }\n    }\n\n    return feeStructure\n  }\n\n  /**\n   * Get network fee structure for external transactions\n   */\n  private getNetworkFeeStructure(currency: Currency): FeeStructure {\n    const key = `network-${currency.code}`\n    const structure = this.feeStructures.get(key)\n    \n    if (!structure) {\n      // Default network fee\n      return {\n        transactionType: 'send',\n        currency,\n        fixedFee: Money.fromNumber(currency.isEUR() ? 2 : 2400, currency), // 2 EUR or 2400 AOA\n        percentageFee: 0,\n        minimumFee: Money.fromNumber(currency.isEUR() ? 1 : 1200, currency),\n        maximumFee: Money.fromNumber(currency.isEUR() ? 10 : 12000, currency)\n      }\n    }\n\n    return structure\n  }\n\n  /**\n   * Initialize default fee structures\n   */\n  private initializeDefaultFeeStructures(): void {\n    const eurCurrency = Currency.EUR()\n    const aoaCurrency = Currency.AOA()\n\n    // Send transaction fees\n    this.feeStructures.set('send-EUR', {\n      transactionType: 'send',\n      currency: eurCurrency,\n      fixedFee: Money.fromNumber(0.5, eurCurrency),\n      percentageFee: 0.015, // 1.5%\n      minimumFee: Money.fromNumber(0.5, eurCurrency),\n      maximumFee: Money.fromNumber(25, eurCurrency)\n    })\n\n    this.feeStructures.set('send-AOA', {\n      transactionType: 'send',\n      currency: aoaCurrency,\n      fixedFee: Money.fromNumber(600, aoaCurrency),\n      percentageFee: 0.015, // 1.5%\n      minimumFee: Money.fromNumber(600, aoaCurrency),\n      maximumFee: Money.fromNumber(30000, aoaCurrency)\n    })\n\n    // Buy transaction fees (buying AOA with EUR)\n    this.feeStructures.set('buy-EUR', {\n      transactionType: 'buy',\n      currency: eurCurrency,\n      fixedFee: Money.fromNumber(1, eurCurrency),\n      percentageFee: 0.02, // 2%\n      minimumFee: Money.fromNumber(1, eurCurrency),\n      maximumFee: Money.fromNumber(50, eurCurrency)\n    })\n\n    // Sell transaction fees (selling AOA for EUR)\n    this.feeStructures.set('sell-AOA', {\n      transactionType: 'sell',\n      currency: aoaCurrency,\n      fixedFee: Money.fromNumber(1200, aoaCurrency),\n      percentageFee: 0.02, // 2%\n      minimumFee: Money.fromNumber(1200, aoaCurrency),\n      maximumFee: Money.fromNumber(60000, aoaCurrency)\n    })\n\n    // Deposit fees (usually free or minimal)\n    this.feeStructures.set('deposit-EUR', {\n      transactionType: 'deposit',\n      currency: eurCurrency,\n      fixedFee: Money.zero(eurCurrency),\n      percentageFee: 0,\n      minimumFee: Money.zero(eurCurrency),\n      maximumFee: Money.fromNumber(5, eurCurrency)\n    })\n\n    this.feeStructures.set('deposit-AOA', {\n      transactionType: 'deposit',\n      currency: aoaCurrency,\n      fixedFee: Money.zero(aoaCurrency),\n      percentageFee: 0,\n      minimumFee: Money.zero(aoaCurrency),\n      maximumFee: Money.fromNumber(6000, aoaCurrency)\n    })\n\n    // Withdraw fees\n    this.feeStructures.set('withdraw-EUR', {\n      transactionType: 'withdraw',\n      currency: eurCurrency,\n      fixedFee: Money.fromNumber(2, eurCurrency),\n      percentageFee: 0.005, // 0.5%\n      minimumFee: Money.fromNumber(2, eurCurrency),\n      maximumFee: Money.fromNumber(20, eurCurrency)\n    })\n\n    this.feeStructures.set('withdraw-AOA', {\n      transactionType: 'withdraw',\n      currency: aoaCurrency,\n      fixedFee: Money.fromNumber(2400, aoaCurrency),\n      percentageFee: 0.005, // 0.5%\n      minimumFee: Money.fromNumber(2400, aoaCurrency),\n      maximumFee: Money.fromNumber(24000, aoaCurrency)\n    })\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9056a1a454308a3be51b683a1808c642160d0285"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ie0p0kn52 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ie0p0kn52();
/**
 * Fee Calculation Domain Service
 *
 * Handles fee calculations for different transaction types.
 * Contains business logic for fee structures and calculations.
 */
import { Money } from '../value-objects/Money';
import { Currency } from '../value-objects/Currency';
export class FeeCalculationService {
  constructor() {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[0]++;
    cov_ie0p0kn52().s[0]++;
    this.feeStructures = new Map();
    /* istanbul ignore next */
    cov_ie0p0kn52().s[1]++;
    this.initializeDefaultFeeStructures();
  }
  /**
   * Calculate fee for a transaction
   */
  calculateFee(amount, transactionType, user) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[1]++;
    const feeStructure =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[2]++, this.getFeeStructure(transactionType, amount.currency));
    /* istanbul ignore next */
    cov_ie0p0kn52().s[3]++;
    if (!feeStructure) {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[0][0]++;
      cov_ie0p0kn52().s[4]++;
      throw new Error(`No fee structure found for ${transactionType} in ${amount.currency.code}`);
    } else
    /* istanbul ignore next */
    {
      cov_ie0p0kn52().b[0][1]++;
    }
    // Apply user-specific discounts if applicable
    const adjustedStructure =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[5]++, this.applyUserDiscounts(feeStructure, user));
    // Calculate fixed fee component
    const fixedComponent =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[6]++, adjustedStructure.fixedFee);
    // Calculate percentage fee component
    const percentageAmount =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[7]++, amount.multiply(adjustedStructure.percentageFee));
    const percentageComponent =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[8]++, Money.fromNumber(percentageAmount.amount, amount.currency));
    // Calculate total fee before min/max constraints
    const totalBeforeConstraints =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[9]++, fixedComponent.add(percentageComponent));
    // Apply minimum and maximum constraints
    let totalFee =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[10]++, totalBeforeConstraints);
    /* istanbul ignore next */
    cov_ie0p0kn52().s[11]++;
    if (totalFee.isLessThan(adjustedStructure.minimumFee)) {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[1][0]++;
      cov_ie0p0kn52().s[12]++;
      totalFee = adjustedStructure.minimumFee;
    } else {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[1][1]++;
      cov_ie0p0kn52().s[13]++;
      if (totalFee.isGreaterThan(adjustedStructure.maximumFee)) {
        /* istanbul ignore next */
        cov_ie0p0kn52().b[2][0]++;
        cov_ie0p0kn52().s[14]++;
        totalFee = adjustedStructure.maximumFee;
      } else
      /* istanbul ignore next */
      {
        cov_ie0p0kn52().b[2][1]++;
      }
    }
    // Calculate net amount
    const netAmount =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[15]++, amount.subtract(totalFee));
    /* istanbul ignore next */
    cov_ie0p0kn52().s[16]++;
    return {
      baseFee: fixedComponent,
      percentageFee: percentageComponent,
      totalFee,
      netAmount,
      feeBreakdown: {
        fixedComponent,
        percentageComponent,
        appliedRate: adjustedStructure.percentageFee
      }
    };
  }
  /**
   * Calculate fee for currency exchange
   */
  calculateExchangeFee(inputAmount, outputAmount, transactionType, user) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[2]++;
    cov_ie0p0kn52().s[17]++;
    // Use the input currency for fee calculation
    return this.calculateFee(inputAmount, transactionType, user);
  }
  /**
   * Calculate network/processing fee for external transactions
   */
  calculateNetworkFee(amount, transactionType, isExternal =
  /* istanbul ignore next */
  (cov_ie0p0kn52().b[3][0]++, false)) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[3]++;
    cov_ie0p0kn52().s[18]++;
    if (!isExternal) {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[4][0]++;
      cov_ie0p0kn52().s[19]++;
      return Money.zero(amount.currency);
    } else
    /* istanbul ignore next */
    {
      cov_ie0p0kn52().b[4][1]++;
    }
    // External transaction fees
    const networkFeeStructure =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[20]++, this.getNetworkFeeStructure(amount.currency));
    /* istanbul ignore next */
    cov_ie0p0kn52().s[21]++;
    return networkFeeStructure.fixedFee;
  }
  /**
   * Get fee estimate for display purposes
   */
  getFeeEstimate(amount, transactionType, user) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[4]++;
    const result =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[22]++, this.calculateFee(amount, transactionType, user));
    const feePercentage =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[23]++, result.totalFee.amount / amount.amount * 100);
    /* istanbul ignore next */
    cov_ie0p0kn52().s[24]++;
    return {
      estimatedFee: result.totalFee,
      feePercentage
    };
  }
  /**
   * Check if transaction amount meets minimum fee requirements
   */
  meetsMinimumFeeRequirement(amount, transactionType) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[5]++;
    const feeStructure =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[25]++, this.getFeeStructure(transactionType, amount.currency));
    /* istanbul ignore next */
    cov_ie0p0kn52().s[26]++;
    if (!feeStructure) {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[5][0]++;
      cov_ie0p0kn52().s[27]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_ie0p0kn52().b[5][1]++;
    }
    const calculatedFee =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[28]++, this.calculateFee(amount, transactionType));
    /* istanbul ignore next */
    cov_ie0p0kn52().s[29]++;
    return calculatedFee.totalFee.isGreaterThanOrEqual(feeStructure.minimumFee);
  }
  /**
   * Get fee structure for transaction type and currency
   */
  getFeeStructure(transactionType, currency) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[6]++;
    const key =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[30]++, `${transactionType}-${currency.code}`);
    /* istanbul ignore next */
    cov_ie0p0kn52().s[31]++;
    return this.feeStructures.get(key);
  }
  /**
   * Apply user-specific fee discounts
   */
  applyUserDiscounts(feeStructure, user) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[7]++;
    cov_ie0p0kn52().s[32]++;
    if (!user) {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[6][0]++;
      cov_ie0p0kn52().s[33]++;
      return feeStructure;
    } else
    /* istanbul ignore next */
    {
      cov_ie0p0kn52().b[6][1]++;
    }
    // KYC-approved users get reduced fees
    cov_ie0p0kn52().s[34]++;
    if (user.isKycApproved()) {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[7][0]++;
      cov_ie0p0kn52().s[35]++;
      return Object.assign(Object.assign({}, feeStructure), {
        percentageFee: feeStructure.percentageFee * 0.8,
        fixedFee: feeStructure.fixedFee.multiply(0.8)
      });
    } else
    /* istanbul ignore next */
    {
      cov_ie0p0kn52().b[7][1]++;
    }
    cov_ie0p0kn52().s[36]++;
    return feeStructure;
  }
  /**
   * Get network fee structure for external transactions
   */
  getNetworkFeeStructure(currency) {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[8]++;
    const key =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[37]++, `network-${currency.code}`);
    const structure =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[38]++, this.feeStructures.get(key));
    /* istanbul ignore next */
    cov_ie0p0kn52().s[39]++;
    if (!structure) {
      /* istanbul ignore next */
      cov_ie0p0kn52().b[8][0]++;
      cov_ie0p0kn52().s[40]++;
      // Default network fee
      return {
        transactionType: 'send',
        currency,
        fixedFee: Money.fromNumber(currency.isEUR() ?
        /* istanbul ignore next */
        (cov_ie0p0kn52().b[9][0]++, 2) :
        /* istanbul ignore next */
        (cov_ie0p0kn52().b[9][1]++, 2400), currency),
        // 2 EUR or 2400 AOA
        percentageFee: 0,
        minimumFee: Money.fromNumber(currency.isEUR() ?
        /* istanbul ignore next */
        (cov_ie0p0kn52().b[10][0]++, 1) :
        /* istanbul ignore next */
        (cov_ie0p0kn52().b[10][1]++, 1200), currency),
        maximumFee: Money.fromNumber(currency.isEUR() ?
        /* istanbul ignore next */
        (cov_ie0p0kn52().b[11][0]++, 10) :
        /* istanbul ignore next */
        (cov_ie0p0kn52().b[11][1]++, 12000), currency)
      };
    } else
    /* istanbul ignore next */
    {
      cov_ie0p0kn52().b[8][1]++;
    }
    cov_ie0p0kn52().s[41]++;
    return structure;
  }
  /**
   * Initialize default fee structures
   */
  initializeDefaultFeeStructures() {
    /* istanbul ignore next */
    cov_ie0p0kn52().f[9]++;
    const eurCurrency =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[42]++, Currency.EUR());
    const aoaCurrency =
    /* istanbul ignore next */
    (cov_ie0p0kn52().s[43]++, Currency.AOA());
    // Send transaction fees
    /* istanbul ignore next */
    cov_ie0p0kn52().s[44]++;
    this.feeStructures.set('send-EUR', {
      transactionType: 'send',
      currency: eurCurrency,
      fixedFee: Money.fromNumber(0.5, eurCurrency),
      percentageFee: 0.015,
      // 1.5%
      minimumFee: Money.fromNumber(0.5, eurCurrency),
      maximumFee: Money.fromNumber(25, eurCurrency)
    });
    /* istanbul ignore next */
    cov_ie0p0kn52().s[45]++;
    this.feeStructures.set('send-AOA', {
      transactionType: 'send',
      currency: aoaCurrency,
      fixedFee: Money.fromNumber(600, aoaCurrency),
      percentageFee: 0.015,
      // 1.5%
      minimumFee: Money.fromNumber(600, aoaCurrency),
      maximumFee: Money.fromNumber(30000, aoaCurrency)
    });
    // Buy transaction fees (buying AOA with EUR)
    /* istanbul ignore next */
    cov_ie0p0kn52().s[46]++;
    this.feeStructures.set('buy-EUR', {
      transactionType: 'buy',
      currency: eurCurrency,
      fixedFee: Money.fromNumber(1, eurCurrency),
      percentageFee: 0.02,
      // 2%
      minimumFee: Money.fromNumber(1, eurCurrency),
      maximumFee: Money.fromNumber(50, eurCurrency)
    });
    // Sell transaction fees (selling AOA for EUR)
    /* istanbul ignore next */
    cov_ie0p0kn52().s[47]++;
    this.feeStructures.set('sell-AOA', {
      transactionType: 'sell',
      currency: aoaCurrency,
      fixedFee: Money.fromNumber(1200, aoaCurrency),
      percentageFee: 0.02,
      // 2%
      minimumFee: Money.fromNumber(1200, aoaCurrency),
      maximumFee: Money.fromNumber(60000, aoaCurrency)
    });
    // Deposit fees (usually free or minimal)
    /* istanbul ignore next */
    cov_ie0p0kn52().s[48]++;
    this.feeStructures.set('deposit-EUR', {
      transactionType: 'deposit',
      currency: eurCurrency,
      fixedFee: Money.zero(eurCurrency),
      percentageFee: 0,
      minimumFee: Money.zero(eurCurrency),
      maximumFee: Money.fromNumber(5, eurCurrency)
    });
    /* istanbul ignore next */
    cov_ie0p0kn52().s[49]++;
    this.feeStructures.set('deposit-AOA', {
      transactionType: 'deposit',
      currency: aoaCurrency,
      fixedFee: Money.zero(aoaCurrency),
      percentageFee: 0,
      minimumFee: Money.zero(aoaCurrency),
      maximumFee: Money.fromNumber(6000, aoaCurrency)
    });
    // Withdraw fees
    /* istanbul ignore next */
    cov_ie0p0kn52().s[50]++;
    this.feeStructures.set('withdraw-EUR', {
      transactionType: 'withdraw',
      currency: eurCurrency,
      fixedFee: Money.fromNumber(2, eurCurrency),
      percentageFee: 0.005,
      // 0.5%
      minimumFee: Money.fromNumber(2, eurCurrency),
      maximumFee: Money.fromNumber(20, eurCurrency)
    });
    /* istanbul ignore next */
    cov_ie0p0kn52().s[51]++;
    this.feeStructures.set('withdraw-AOA', {
      transactionType: 'withdraw',
      currency: aoaCurrency,
      fixedFee: Money.fromNumber(2400, aoaCurrency),
      percentageFee: 0.005,
      // 0.5%
      minimumFee: Money.fromNumber(2400, aoaCurrency),
      maximumFee: Money.fromNumber(24000, aoaCurrency)
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,