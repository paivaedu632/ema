b0259617ac495b1b4ba7c57c7608a2ee
"use strict";
/**
 * Test Utilities Index
 * Exports all test utilities for easy importing
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.testUtils = exports.Order = exports.Transfer = exports.WalletBalance = exports.StandardApiResponse = exports.helpers = exports.TestHelpers = exports.ApiRequestOptions = exports.ApiResponse = exports.apiClient = exports.ApiClient = exports.CreateUserOptions = exports.TestUser = exports.userFactory = exports.UserFactory = void 0;
var user_factory_1 = require("./user-factory");
Object.defineProperty(exports, "UserFactory", { enumerable: true, get: function () { return user_factory_1.UserFactory; } });
Object.defineProperty(exports, "userFactory", { enumerable: true, get: function () { return user_factory_1.userFactory; } });
Object.defineProperty(exports, "TestUser", { enumerable: true, get: function () { return user_factory_1.TestUser; } });
Object.defineProperty(exports, "CreateUserOptions", { enumerable: true, get: function () { return user_factory_1.CreateUserOptions; } });
var api_client_1 = require("./api-client");
Object.defineProperty(exports, "ApiClient", { enumerable: true, get: function () { return api_client_1.ApiClient; } });
Object.defineProperty(exports, "apiClient", { enumerable: true, get: function () { return api_client_1.apiClient; } });
Object.defineProperty(exports, "ApiResponse", { enumerable: true, get: function () { return api_client_1.ApiResponse; } });
Object.defineProperty(exports, "ApiRequestOptions", { enumerable: true, get: function () { return api_client_1.ApiRequestOptions; } });
var test_helpers_1 = require("./test-helpers");
Object.defineProperty(exports, "TestHelpers", { enumerable: true, get: function () { return test_helpers_1.TestHelpers; } });
Object.defineProperty(exports, "helpers", { enumerable: true, get: function () { return test_helpers_1.helpers; } });
Object.defineProperty(exports, "StandardApiResponse", { enumerable: true, get: function () { return test_helpers_1.StandardApiResponse; } });
Object.defineProperty(exports, "WalletBalance", { enumerable: true, get: function () { return test_helpers_1.WalletBalance; } });
Object.defineProperty(exports, "Transfer", { enumerable: true, get: function () { return test_helpers_1.Transfer; } });
Object.defineProperty(exports, "Order", { enumerable: true, get: function () { return test_helpers_1.Order; } });
// Import the instances
const user_factory_2 = require("./user-factory");
const api_client_2 = require("./api-client");
// Re-export common test utilities
exports.testUtils = {
    // User management
    createUser: user_factory_2.userFactory.createUser.bind(user_factory_2.userFactory),
    createUsers: user_factory_2.userFactory.createUsers.bind(user_factory_2.userFactory),
    createUserWithBalance: user_factory_2.userFactory.createUserWithBalance.bind(user_factory_2.userFactory),
    refreshUserToken: user_factory_2.userFactory.refreshUserToken.bind(user_factory_2.userFactory),
    deleteUser: user_factory_2.userFactory.deleteUser.bind(user_factory_2.userFactory),
    cleanup: user_factory_2.userFactory.cleanup.bind(user_factory_2.userFactory),
    // API requests
    get: api_client_2.apiClient.get.bind(api_client_2.apiClient),
    post: api_client_2.apiClient.post.bind(api_client_2.apiClient),
    put: api_client_2.apiClient.put.bind(api_client_2.apiClient),
    delete: api_client_2.apiClient.delete.bind(api_client_2.apiClient),
    publicGet: api_client_2.apiClient.publicGet.bind(api_client_2.apiClient),
    testPerformance: api_client_2.apiClient.testPerformance.bind(api_client_2.apiClient),
    testConcurrency: api_client_2.apiClient.testConcurrency.bind(api_client_2.apiClient),
    testWithInvalidToken: api_client_2.apiClient.testWithInvalidToken.bind(api_client_2.apiClient),
    testWithExpiredToken: api_client_2.apiClient.testWithExpiredToken.bind(api_client_2.apiClient),
    // Assertions
    assertSuccessResponse: TestHelpers.assertSuccessResponse,
    assertErrorResponse: TestHelpers.assertErrorResponse,
    assertResponseTime: TestHelpers.assertResponseTime,
    assertValidUserData: TestHelpers.assertValidUserData,
    assertValidWalletBalance: TestHelpers.assertValidWalletBalance,
    assertValidTransfer: TestHelpers.assertValidTransfer,
    assertValidOrder: TestHelpers.assertValidOrder,
    assertValidMarketData: TestHelpers.assertValidMarketData,
    assertValidOrderBook: TestHelpers.assertValidOrderBook,
    // Data generation
    generateTransferData: TestHelpers.generateTransferData,
    generateLimitOrderData: TestHelpers.generateLimitOrderData,
    generateMarketOrderData: TestHelpers.generateMarketOrderData,
    generateTestPin: TestHelpers.generateTestPin,
    // Utilities
    waitFor: TestHelpers.waitFor,
    assertDecimalPrecision: TestHelpers.assertDecimalPrecision,
    assertSortedByDate: TestHelpers.assertSortedByDate
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXEdpdEh1YlxcZW1hXFx0ZXN0c1xcdXRpbHNcXGluZGV4LnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7O0dBR0c7OztBQUVILCtDQUF1RjtBQUE5RSwyR0FBQSxXQUFXLE9BQUE7QUFBRSwyR0FBQSxXQUFXLE9BQUE7QUFBRSx3R0FBQSxRQUFRLE9BQUE7QUFBRSxpSEFBQSxpQkFBaUIsT0FBQTtBQUM5RCwyQ0FBb0Y7QUFBM0UsdUdBQUEsU0FBUyxPQUFBO0FBQUUsdUdBQUEsU0FBUyxPQUFBO0FBQUUseUdBQUEsV0FBVyxPQUFBO0FBQUUsK0dBQUEsaUJBQWlCLE9BQUE7QUFDN0QsK0NBT3dCO0FBTnRCLDJHQUFBLFdBQVcsT0FBQTtBQUNYLHVHQUFBLE9BQU8sT0FBQTtBQUNQLG1IQUFBLG1CQUFtQixPQUFBO0FBQ25CLDZHQUFBLGFBQWEsT0FBQTtBQUNiLHdHQUFBLFFBQVEsT0FBQTtBQUNSLHFHQUFBLEtBQUssT0FBQTtBQUdQLHVCQUF1QjtBQUN2QixpREFBNkM7QUFDN0MsNkNBQXlDO0FBRXpDLGtDQUFrQztBQUNyQixRQUFBLFNBQVMsR0FBRztJQUN2QixrQkFBa0I7SUFDbEIsVUFBVSxFQUFFLDBCQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQywwQkFBVyxDQUFDO0lBQ3BELFdBQVcsRUFBRSwwQkFBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsMEJBQVcsQ0FBQztJQUN0RCxxQkFBcUIsRUFBRSwwQkFBVyxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQywwQkFBVyxDQUFDO0lBQzFFLGdCQUFnQixFQUFFLDBCQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLDBCQUFXLENBQUM7SUFDaEUsVUFBVSxFQUFFLDBCQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQywwQkFBVyxDQUFDO0lBQ3BELE9BQU8sRUFBRSwwQkFBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQVcsQ0FBQztJQUU5QyxlQUFlO0lBQ2YsR0FBRyxFQUFFLHNCQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxzQkFBUyxDQUFDO0lBQ2xDLElBQUksRUFBRSxzQkFBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsc0JBQVMsQ0FBQztJQUNwQyxHQUFHLEVBQUUsc0JBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLHNCQUFTLENBQUM7SUFDbEMsTUFBTSxFQUFFLHNCQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxzQkFBUyxDQUFDO0lBQ3hDLFNBQVMsRUFBRSxzQkFBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsc0JBQVMsQ0FBQztJQUM5QyxlQUFlLEVBQUUsc0JBQVMsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLHNCQUFTLENBQUM7SUFDMUQsZUFBZSxFQUFFLHNCQUFTLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxzQkFBUyxDQUFDO0lBQzFELG9CQUFvQixFQUFFLHNCQUFTLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLHNCQUFTLENBQUM7SUFDcEUsb0JBQW9CLEVBQUUsc0JBQVMsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsc0JBQVMsQ0FBQztJQUVwRSxhQUFhO0lBQ2IscUJBQXFCLEVBQUUsV0FBVyxDQUFDLHFCQUFxQjtJQUN4RCxtQkFBbUIsRUFBRSxXQUFXLENBQUMsbUJBQW1CO0lBQ3BELGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxrQkFBa0I7SUFDbEQsbUJBQW1CLEVBQUUsV0FBVyxDQUFDLG1CQUFtQjtJQUNwRCx3QkFBd0IsRUFBRSxXQUFXLENBQUMsd0JBQXdCO0lBQzlELG1CQUFtQixFQUFFLFdBQVcsQ0FBQyxtQkFBbUI7SUFDcEQsZ0JBQWdCLEVBQUUsV0FBVyxDQUFDLGdCQUFnQjtJQUM5QyxxQkFBcUIsRUFBRSxXQUFXLENBQUMscUJBQXFCO0lBQ3hELG9CQUFvQixFQUFFLFdBQVcsQ0FBQyxvQkFBb0I7SUFFdEQsa0JBQWtCO0lBQ2xCLG9CQUFvQixFQUFFLFdBQVcsQ0FBQyxvQkFBb0I7SUFDdEQsc0JBQXNCLEVBQUUsV0FBVyxDQUFDLHNCQUFzQjtJQUMxRCx1QkFBdUIsRUFBRSxXQUFXLENBQUMsdUJBQXVCO0lBQzVELGVBQWUsRUFBRSxXQUFXLENBQUMsZUFBZTtJQUU1QyxZQUFZO0lBQ1osT0FBTyxFQUFFLFdBQVcsQ0FBQyxPQUFPO0lBQzVCLHNCQUFzQixFQUFFLFdBQVcsQ0FBQyxzQkFBc0I7SUFDMUQsa0JBQWtCLEVBQUUsV0FBVyxDQUFDLGtCQUFrQjtDQUNuRCxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVXNlclxcRG9jdW1lbnRzXFxHaXRIdWJcXGVtYVxcdGVzdHNcXHV0aWxzXFxpbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRlc3QgVXRpbGl0aWVzIEluZGV4XG4gKiBFeHBvcnRzIGFsbCB0ZXN0IHV0aWxpdGllcyBmb3IgZWFzeSBpbXBvcnRpbmdcbiAqL1xuXG5leHBvcnQgeyBVc2VyRmFjdG9yeSwgdXNlckZhY3RvcnksIFRlc3RVc2VyLCBDcmVhdGVVc2VyT3B0aW9ucyB9IGZyb20gJy4vdXNlci1mYWN0b3J5JztcbmV4cG9ydCB7IEFwaUNsaWVudCwgYXBpQ2xpZW50LCBBcGlSZXNwb25zZSwgQXBpUmVxdWVzdE9wdGlvbnMgfSBmcm9tICcuL2FwaS1jbGllbnQnO1xuZXhwb3J0IHtcbiAgVGVzdEhlbHBlcnMsXG4gIGhlbHBlcnMsXG4gIFN0YW5kYXJkQXBpUmVzcG9uc2UsXG4gIFdhbGxldEJhbGFuY2UsXG4gIFRyYW5zZmVyLFxuICBPcmRlclxufSBmcm9tICcuL3Rlc3QtaGVscGVycyc7XG5cbi8vIEltcG9ydCB0aGUgaW5zdGFuY2VzXG5pbXBvcnQgeyB1c2VyRmFjdG9yeSB9IGZyb20gJy4vdXNlci1mYWN0b3J5JztcbmltcG9ydCB7IGFwaUNsaWVudCB9IGZyb20gJy4vYXBpLWNsaWVudCc7XG5cbi8vIFJlLWV4cG9ydCBjb21tb24gdGVzdCB1dGlsaXRpZXNcbmV4cG9ydCBjb25zdCB0ZXN0VXRpbHMgPSB7XG4gIC8vIFVzZXIgbWFuYWdlbWVudFxuICBjcmVhdGVVc2VyOiB1c2VyRmFjdG9yeS5jcmVhdGVVc2VyLmJpbmQodXNlckZhY3RvcnkpLFxuICBjcmVhdGVVc2VyczogdXNlckZhY3RvcnkuY3JlYXRlVXNlcnMuYmluZCh1c2VyRmFjdG9yeSksXG4gIGNyZWF0ZVVzZXJXaXRoQmFsYW5jZTogdXNlckZhY3RvcnkuY3JlYXRlVXNlcldpdGhCYWxhbmNlLmJpbmQodXNlckZhY3RvcnkpLFxuICByZWZyZXNoVXNlclRva2VuOiB1c2VyRmFjdG9yeS5yZWZyZXNoVXNlclRva2VuLmJpbmQodXNlckZhY3RvcnkpLFxuICBkZWxldGVVc2VyOiB1c2VyRmFjdG9yeS5kZWxldGVVc2VyLmJpbmQodXNlckZhY3RvcnkpLFxuICBjbGVhbnVwOiB1c2VyRmFjdG9yeS5jbGVhbnVwLmJpbmQodXNlckZhY3RvcnkpLFxuICBcbiAgLy8gQVBJIHJlcXVlc3RzXG4gIGdldDogYXBpQ2xpZW50LmdldC5iaW5kKGFwaUNsaWVudCksXG4gIHBvc3Q6IGFwaUNsaWVudC5wb3N0LmJpbmQoYXBpQ2xpZW50KSxcbiAgcHV0OiBhcGlDbGllbnQucHV0LmJpbmQoYXBpQ2xpZW50KSxcbiAgZGVsZXRlOiBhcGlDbGllbnQuZGVsZXRlLmJpbmQoYXBpQ2xpZW50KSxcbiAgcHVibGljR2V0OiBhcGlDbGllbnQucHVibGljR2V0LmJpbmQoYXBpQ2xpZW50KSxcbiAgdGVzdFBlcmZvcm1hbmNlOiBhcGlDbGllbnQudGVzdFBlcmZvcm1hbmNlLmJpbmQoYXBpQ2xpZW50KSxcbiAgdGVzdENvbmN1cnJlbmN5OiBhcGlDbGllbnQudGVzdENvbmN1cnJlbmN5LmJpbmQoYXBpQ2xpZW50KSxcbiAgdGVzdFdpdGhJbnZhbGlkVG9rZW46IGFwaUNsaWVudC50ZXN0V2l0aEludmFsaWRUb2tlbi5iaW5kKGFwaUNsaWVudCksXG4gIHRlc3RXaXRoRXhwaXJlZFRva2VuOiBhcGlDbGllbnQudGVzdFdpdGhFeHBpcmVkVG9rZW4uYmluZChhcGlDbGllbnQpLFxuICBcbiAgLy8gQXNzZXJ0aW9uc1xuICBhc3NlcnRTdWNjZXNzUmVzcG9uc2U6IFRlc3RIZWxwZXJzLmFzc2VydFN1Y2Nlc3NSZXNwb25zZSxcbiAgYXNzZXJ0RXJyb3JSZXNwb25zZTogVGVzdEhlbHBlcnMuYXNzZXJ0RXJyb3JSZXNwb25zZSxcbiAgYXNzZXJ0UmVzcG9uc2VUaW1lOiBUZXN0SGVscGVycy5hc3NlcnRSZXNwb25zZVRpbWUsXG4gIGFzc2VydFZhbGlkVXNlckRhdGE6IFRlc3RIZWxwZXJzLmFzc2VydFZhbGlkVXNlckRhdGEsXG4gIGFzc2VydFZhbGlkV2FsbGV0QmFsYW5jZTogVGVzdEhlbHBlcnMuYXNzZXJ0VmFsaWRXYWxsZXRCYWxhbmNlLFxuICBhc3NlcnRWYWxpZFRyYW5zZmVyOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZFRyYW5zZmVyLFxuICBhc3NlcnRWYWxpZE9yZGVyOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZE9yZGVyLFxuICBhc3NlcnRWYWxpZE1hcmtldERhdGE6IFRlc3RIZWxwZXJzLmFzc2VydFZhbGlkTWFya2V0RGF0YSxcbiAgYXNzZXJ0VmFsaWRPcmRlckJvb2s6IFRlc3RIZWxwZXJzLmFzc2VydFZhbGlkT3JkZXJCb29rLFxuICBcbiAgLy8gRGF0YSBnZW5lcmF0aW9uXG4gIGdlbmVyYXRlVHJhbnNmZXJEYXRhOiBUZXN0SGVscGVycy5nZW5lcmF0ZVRyYW5zZmVyRGF0YSxcbiAgZ2VuZXJhdGVMaW1pdE9yZGVyRGF0YTogVGVzdEhlbHBlcnMuZ2VuZXJhdGVMaW1pdE9yZGVyRGF0YSxcbiAgZ2VuZXJhdGVNYXJrZXRPcmRlckRhdGE6IFRlc3RIZWxwZXJzLmdlbmVyYXRlTWFya2V0T3JkZXJEYXRhLFxuICBnZW5lcmF0ZVRlc3RQaW46IFRlc3RIZWxwZXJzLmdlbmVyYXRlVGVzdFBpbixcbiAgXG4gIC8vIFV0aWxpdGllc1xuICB3YWl0Rm9yOiBUZXN0SGVscGVycy53YWl0Rm9yLFxuICBhc3NlcnREZWNpbWFsUHJlY2lzaW9uOiBUZXN0SGVscGVycy5hc3NlcnREZWNpbWFsUHJlY2lzaW9uLFxuICBhc3NlcnRTb3J0ZWRCeURhdGU6IFRlc3RIZWxwZXJzLmFzc2VydFNvcnRlZEJ5RGF0ZVxufTtcbiJdLCJ2ZXJzaW9uIjozfQ==