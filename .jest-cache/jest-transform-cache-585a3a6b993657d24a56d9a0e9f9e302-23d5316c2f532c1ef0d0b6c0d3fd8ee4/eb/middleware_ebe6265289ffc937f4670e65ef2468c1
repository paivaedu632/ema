0e63ef7ad3fb815cf1217f2960b514b5
/* istanbul ignore next */
function cov_25kwwpqtgu() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\middleware.ts";
  var hash = "7374226be811299d5b7f9224a235608a5bf6f38b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 7,
          column: 2
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 15
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 15
        }
      },
      "5": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "8": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 30,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 32
          }
        },
        loc: {
          start: {
            line: 8,
            column: 52
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\middleware.ts",
      mappings: "AAAA,OAAO,EAAE,eAAe,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAE3E,yDAAyD;AACzD,MAAM,aAAa,GAAG,kBAAkB,CAAC;IACvC,GAAG;IACH,YAAY;IACZ,aAAa;CACd,CAAC,CAAC;AAEH,eAAe,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;IACjD,sCAAsC;IACtC,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC;QACvB,OAAO;IACT,CAAC;IAED,oEAAoE;IACpE,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;QAC7C,OAAO;IACT,CAAC;IAED,8DAA8D;IAC9D,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,EAAE,CAAC;IAChC,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,OAAO,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,OAAO,EAAE;QACP,6EAA6E;QAC7E,qHAAqH;QACrH,4BAA4B;QAC5B,iBAAiB;KAClB;CACF,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\middleware.ts"],
      sourcesContent: ["import { clerkMiddleware, createRouteMatcher } from '@clerk/nextjs/server';\n\n// Define public routes that don't require authentication\nconst isPublicRoute = createRouteMatcher([\n  '/',\n  '/login(.*)',\n  '/signup(.*)'\n]);\n\nexport default clerkMiddleware(async (auth, req) => {\n  // Allow public routes to pass through\n  if (isPublicRoute(req)) {\n    return;\n  }\n\n  // For API routes, we'll handle authentication in the route handlers\n  if (req.nextUrl.pathname.startsWith('/api/')) {\n    return;\n  }\n\n  // For protected pages, redirect to login if not authenticated\n  const { userId } = await auth();\n  if (!userId) {\n    return Response.redirect(new URL('/login', req.url));\n  }\n});\n\nexport const config = {\n  matcher: [\n    // Skip Next.js internals and all static files, unless found in search params\n    '/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)',\n    // Always run for API routes\n    '/(api|trpc)(.*)',\n  ],\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7374226be811299d5b7f9224a235608a5bf6f38b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25kwwpqtgu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25kwwpqtgu();
import { clerkMiddleware, createRouteMatcher } from '@clerk/nextjs/server';
// Define public routes that don't require authentication
const isPublicRoute =
/* istanbul ignore next */
(cov_25kwwpqtgu().s[0]++, createRouteMatcher(['/', '/login(.*)', '/signup(.*)']));
export default clerkMiddleware(async (auth, req) => {
  /* istanbul ignore next */
  cov_25kwwpqtgu().f[0]++;
  cov_25kwwpqtgu().s[1]++;
  // Allow public routes to pass through
  if (isPublicRoute(req)) {
    /* istanbul ignore next */
    cov_25kwwpqtgu().b[0][0]++;
    cov_25kwwpqtgu().s[2]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_25kwwpqtgu().b[0][1]++;
  }
  // For API routes, we'll handle authentication in the route handlers
  cov_25kwwpqtgu().s[3]++;
  if (req.nextUrl.pathname.startsWith('/api/')) {
    /* istanbul ignore next */
    cov_25kwwpqtgu().b[1][0]++;
    cov_25kwwpqtgu().s[4]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_25kwwpqtgu().b[1][1]++;
  }
  // For protected pages, redirect to login if not authenticated
  const {
    userId
  } =
  /* istanbul ignore next */
  (cov_25kwwpqtgu().s[5]++, await auth());
  /* istanbul ignore next */
  cov_25kwwpqtgu().s[6]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_25kwwpqtgu().b[2][0]++;
    cov_25kwwpqtgu().s[7]++;
    return Response.redirect(new URL('/login', req.url));
  } else
  /* istanbul ignore next */
  {
    cov_25kwwpqtgu().b[2][1]++;
  }
});
export const config =
/* istanbul ignore next */
(cov_25kwwpqtgu().s[8]++, {
  matcher: [
  // Skip Next.js internals and all static files, unless found in search params
  '/((?!_next|[^?]*\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)',
  // Always run for API routes
  '/(api|trpc)(.*)']
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjVrd3dwcXRndSIsImFjdHVhbENvdmVyYWdlIiwiY2xlcmtNaWRkbGV3YXJlIiwiY3JlYXRlUm91dGVNYXRjaGVyIiwiaXNQdWJsaWNSb3V0ZSIsInMiLCJhdXRoIiwicmVxIiwiZiIsImIiLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwidXNlcklkIiwiUmVzcG9uc2UiLCJyZWRpcmVjdCIsIlVSTCIsInVybCIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVzZXJcXERvY3VtZW50c1xcR2l0SHViXFxlbWFcXHNyY1xcbWlkZGxld2FyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbGVya01pZGRsZXdhcmUsIGNyZWF0ZVJvdXRlTWF0Y2hlciB9IGZyb20gJ0BjbGVyay9uZXh0anMvc2VydmVyJztcblxuLy8gRGVmaW5lIHB1YmxpYyByb3V0ZXMgdGhhdCBkb24ndCByZXF1aXJlIGF1dGhlbnRpY2F0aW9uXG5jb25zdCBpc1B1YmxpY1JvdXRlID0gY3JlYXRlUm91dGVNYXRjaGVyKFtcbiAgJy8nLFxuICAnL2xvZ2luKC4qKScsXG4gICcvc2lnbnVwKC4qKSdcbl0pO1xuXG5leHBvcnQgZGVmYXVsdCBjbGVya01pZGRsZXdhcmUoYXN5bmMgKGF1dGgsIHJlcSkgPT4ge1xuICAvLyBBbGxvdyBwdWJsaWMgcm91dGVzIHRvIHBhc3MgdGhyb3VnaFxuICBpZiAoaXNQdWJsaWNSb3V0ZShyZXEpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yIEFQSSByb3V0ZXMsIHdlJ2xsIGhhbmRsZSBhdXRoZW50aWNhdGlvbiBpbiB0aGUgcm91dGUgaGFuZGxlcnNcbiAgaWYgKHJlcS5uZXh0VXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hcGkvJykpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBGb3IgcHJvdGVjdGVkIHBhZ2VzLCByZWRpcmVjdCB0byBsb2dpbiBpZiBub3QgYXV0aGVudGljYXRlZFxuICBjb25zdCB7IHVzZXJJZCB9ID0gYXdhaXQgYXV0aCgpO1xuICBpZiAoIXVzZXJJZCkge1xuICAgIHJldHVybiBSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvbG9naW4nLCByZXEudXJsKSk7XG4gIH1cbn0pO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBtYXRjaGVyOiBbXG4gICAgLy8gU2tpcCBOZXh0LmpzIGludGVybmFscyBhbmQgYWxsIHN0YXRpYyBmaWxlcywgdW5sZXNzIGZvdW5kIGluIHNlYXJjaCBwYXJhbXNcbiAgICAnLygoPyFfbmV4dHxbXj9dKlxcXFwuKD86aHRtbD98Y3NzfGpzKD8hb24pfGpwZT9nfHdlYnB8cG5nfGdpZnxzdmd8dHRmfHdvZmYyP3xpY298Y3N2fGRvY3g/fHhsc3g/fHppcHx3ZWJtYW5pZmVzdCkpLiopJyxcbiAgICAvLyBBbHdheXMgcnVuIGZvciBBUEkgcm91dGVzXG4gICAgJy8oYXBpfHRycGMpKC4qKScsXG4gIF0sXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWtCRztJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBbEJILFNBQVNFLGVBQWUsRUFBRUMsa0JBQWtCLFFBQVEsc0JBQXNCO0FBRTFFO0FBQ0EsTUFBTUMsYUFBYTtBQUFBO0FBQUEsQ0FBQUosY0FBQSxHQUFBSyxDQUFBLE9BQUdGLGtCQUFrQixDQUFDLENBQ3ZDLEdBQUcsRUFDSCxZQUFZLEVBQ1osYUFBYSxDQUNkLENBQUM7QUFFRixlQUFlRCxlQUFlLENBQUMsT0FBT0ksSUFBSSxFQUFFQyxHQUFHLEtBQUk7RUFBQTtFQUFBUCxjQUFBLEdBQUFRLENBQUE7RUFBQVIsY0FBQSxHQUFBSyxDQUFBO0VBQ2pEO0VBQ0EsSUFBSUQsYUFBYSxDQUFDRyxHQUFHLENBQUMsRUFBRTtJQUFBO0lBQUFQLGNBQUEsR0FBQVMsQ0FBQTtJQUFBVCxjQUFBLEdBQUFLLENBQUE7SUFDdEI7RUFDRixDQUFDO0VBQUE7RUFBQTtJQUFBTCxjQUFBLEdBQUFTLENBQUE7RUFBQTtFQUVEO0VBQUFULGNBQUEsR0FBQUssQ0FBQTtFQUNBLElBQUlFLEdBQUcsQ0FBQ0csT0FBTyxDQUFDQyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRTtJQUFBO0lBQUFaLGNBQUEsR0FBQVMsQ0FBQTtJQUFBVCxjQUFBLEdBQUFLLENBQUE7SUFDNUM7RUFDRixDQUFDO0VBQUE7RUFBQTtJQUFBTCxjQUFBLEdBQUFTLENBQUE7RUFBQTtFQUVEO0VBQ0EsTUFBTTtJQUFFSTtFQUFNLENBQUU7RUFBQTtFQUFBLENBQUFiLGNBQUEsR0FBQUssQ0FBQSxPQUFHLE1BQU1DLElBQUksRUFBRTtFQUFDO0VBQUFOLGNBQUEsR0FBQUssQ0FBQTtFQUNoQyxJQUFJLENBQUNRLE1BQU0sRUFBRTtJQUFBO0lBQUFiLGNBQUEsR0FBQVMsQ0FBQTtJQUFBVCxjQUFBLEdBQUFLLENBQUE7SUFDWCxPQUFPUyxRQUFRLENBQUNDLFFBQVEsQ0FBQyxJQUFJQyxHQUFHLENBQUMsUUFBUSxFQUFFVCxHQUFHLENBQUNVLEdBQUcsQ0FBQyxDQUFDO0VBQ3RELENBQUM7RUFBQTtFQUFBO0lBQUFqQixjQUFBLEdBQUFTLENBQUE7RUFBQTtBQUNILENBQUMsQ0FBQztBQUVGLE9BQU8sTUFBTVMsTUFBTTtBQUFBO0FBQUEsQ0FBQWxCLGNBQUEsR0FBQUssQ0FBQSxPQUFHO0VBQ3BCYyxPQUFPLEVBQUU7RUFDUDtFQUNBLHFIQUFxSDtFQUNySDtFQUNBLGlCQUFpQjtDQUVwQiIsImlnbm9yZUxpc3QiOltdfQ==