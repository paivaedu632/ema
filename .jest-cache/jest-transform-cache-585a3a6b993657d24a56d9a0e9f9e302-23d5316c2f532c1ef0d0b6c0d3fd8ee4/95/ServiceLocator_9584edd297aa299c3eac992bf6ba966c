dea3970980d4eedf9970c1a1718b845e
/* istanbul ignore next */
function cov_27xzn9ptbf() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\infrastructure\\di\\ServiceLocator.ts";
  var hash = "690e6c6ffb1d7701d46c2ef9800709942e01a118";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\infrastructure\\di\\ServiceLocator.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 63
        }
      },
      "1": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "2": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "3": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "4": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 75
        }
      },
      "5": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 71
        }
      },
      "6": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 67
        }
      },
      "7": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "8": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 70
        }
      },
      "9": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 68
        }
      },
      "10": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 60
        }
      },
      "11": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 61
        }
      },
      "12": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 56
        }
      },
      "13": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 58
        }
      },
      "14": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 63
        }
      },
      "15": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 63
        }
      },
      "16": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 61
        }
      },
      "17": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 56
        }
      },
      "18": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "19": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 105,
          column: 6
        }
      },
      "20": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "21": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 132,
          column: 6
        }
      },
      "22": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 131,
          column: 10
        }
      },
      "23": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 31
        }
      },
      "24": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 129,
          column: 19
        }
      },
      "25": {
        start: {
          line: 126,
          column: 31
        },
        end: {
          line: 126,
          column: 66
        }
      },
      "26": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 144,
          column: 6
        }
      },
      "27": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "28": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 140,
          column: 58
        }
      },
      "29": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 31
        }
      },
      "30": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 65
        }
      },
      "31": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 63
        }
      },
      "32": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 64
        }
      },
      "33": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 58
        }
      },
      "34": {
        start: {
          line: 167,
          column: 0
        },
        end: {
          line: 167,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 41
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 45
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 35
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 36
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 31
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 38
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 38
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 72
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 36
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 75
      },
      "15": {
        name: "useService",
        decl: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 26
          }
        },
        loc: {
          start: {
            line: 82,
            column: 49
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 82
      },
      "16": {
        name: "useUseCases",
        decl: {
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 88,
            column: 27
          }
        },
        loc: {
          start: {
            line: 88,
            column: 30
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 88
      },
      "17": {
        name: "useRepositories",
        decl: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 31
          }
        },
        loc: {
          start: {
            line: 100,
            column: 34
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 100
      },
      "18": {
        name: "useDomainServices",
        decl: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 33
          }
        },
        loc: {
          start: {
            line: 110,
            column: 36
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 110
      },
      "19": {
        name: "Injectable",
        decl: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 26
          }
        },
        loc: {
          start: {
            line: 119,
            column: 40
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 119
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 120,
            column: 11
          },
          end: {
            line: 120,
            column: 12
          }
        },
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 120
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        loc: {
          start: {
            line: 122,
            column: 33
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 122
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 26
          }
        },
        loc: {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 126,
            column: 66
          }
        },
        line: 126
      },
      "23": {
        name: "Inject",
        decl: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 22
          }
        },
        loc: {
          start: {
            line: 137,
            column: 36
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 137
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 138,
            column: 11
          },
          end: {
            line: 138,
            column: 12
          }
        },
        loc: {
          start: {
            line: 138,
            column: 42
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 138
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 140,
            column: 17
          },
          end: {
            line: 140,
            column: 18
          }
        },
        loc: {
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 140,
            column: 58
          }
        },
        line: 140
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 150
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 25
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 153
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 156
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 41
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 159
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 35
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 162
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 44
          }
        }, {
          start: {
            line: 16,
            column: 48
          },
          end: {
            line: 16,
            column: 62
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\infrastructure\\di\\ServiceLocator.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\infrastructure\\di\\ServiceLocator.ts"],
      sourcesContent: ["/**\n * Service Locator Pattern\n * \n * Provides a simplified interface for dependency resolution.\n * Useful for components that need to access services without direct injection.\n */\n\nimport { Container, getContainer } from './Container'\nimport {\n  SendMoneyUseCase\n} from '../../application/use-cases/SendMoneyUseCase'\nimport {\n  GetWalletBalanceQueryHandler\n} from '../../application/use-cases/GetWalletBalanceUseCase'\nimport {\n  GetUserWalletsQueryHandler\n} from '../../application/use-cases/GetUserWalletsUseCase'\nimport {\n  BuyCurrencyUseCase\n} from '../../application/use-cases/BuyCurrencyUseCase'\nimport {\n  RegisterUserUseCase\n} from '../../application/use-cases/RegisterUserUseCase'\nimport {\n  UserRepository,\n  WalletRepository,\n  TransactionRepository\n} from '../../domain/repositories'\nimport {\n  FeeCalculationService,\n  ExchangeRateService\n} from '../../domain'\n\n/**\n * Service Locator for easy dependency resolution\n */\nexport class ServiceLocator {\n  private static container: Container\n\n  /**\n   * Initialize the service locator with a container\n   */\n  static initialize(container?: Container): void {\n    ServiceLocator.container = container || getContainer()\n  }\n\n  /**\n   * Get the underlying container\n   */\n  static getContainer(): Container {\n    if (!ServiceLocator.container) {\n      ServiceLocator.initialize()\n    }\n    return ServiceLocator.container\n  }\n\n  /**\n   * Resolve a service by name\n   */\n  static resolve<T>(serviceName: string, scopeId?: string): T {\n    return ServiceLocator.getContainer().resolve<T>(serviceName, scopeId)\n  }\n\n  /**\n   * Check if a service is registered\n   */\n  static isRegistered(serviceName: string): boolean {\n    return ServiceLocator.getContainer().isRegistered(serviceName)\n  }\n\n  /**\n   * Get services by tag\n   */\n  static getServicesByTag(tag: string): string[] {\n    return ServiceLocator.getContainer().getServicesByTag(tag)\n  }\n\n  // Use Cases\n  static getSendMoneyUseCase(): SendMoneyUseCase {\n    return ServiceLocator.resolve<SendMoneyUseCase>('sendMoneyUseCase')\n  }\n\n  static getGetWalletBalanceQueryHandler(): GetWalletBalanceQueryHandler {\n    return ServiceLocator.resolve<GetWalletBalanceQueryHandler>('getWalletBalanceQueryHandler')\n  }\n\n  static getGetUserWalletsQueryHandler(): GetUserWalletsQueryHandler {\n    return ServiceLocator.resolve<GetUserWalletsQueryHandler>('getUserWalletsQueryHandler')\n  }\n\n  static getBuyCurrencyUseCase(): BuyCurrencyUseCase {\n    return ServiceLocator.resolve<BuyCurrencyUseCase>('buyCurrencyUseCase')\n  }\n\n  static getRegisterUserUseCase(): RegisterUserUseCase {\n    return ServiceLocator.resolve<RegisterUserUseCase>('registerUserUseCase')\n  }\n\n  // Repositories\n  static getUserRepository(): UserRepository {\n    return ServiceLocator.resolve<UserRepository>('userRepository')\n  }\n\n  static getWalletRepository(): WalletRepository {\n    return ServiceLocator.resolve<WalletRepository>('walletRepository')\n  }\n\n  static getTransactionRepository(): TransactionRepository {\n    return ServiceLocator.resolve<TransactionRepository>('transactionRepository')\n  }\n\n  // Domain Services\n  static getFeeCalculationService(): FeeCalculationService {\n    return ServiceLocator.resolve<FeeCalculationService>('feeCalculationService')\n  }\n\n  static getExchangeRateService(): ExchangeRateService {\n    return ServiceLocator.resolve<ExchangeRateService>('exchangeRateService')\n  }\n}\n\n/**\n * React Hook for using services in components\n */\nexport function useService<T>(serviceName: string, scopeId?: string): T {\n  return ServiceLocator.resolve<T>(serviceName, scopeId)\n}\n\n/**\n * React Hook for use cases\n */\nexport function useUseCases() {\n  return {\n    sendMoney: ServiceLocator.getSendMoneyUseCase(),\n    getWalletBalance: ServiceLocator.getGetWalletBalanceQueryHandler(),\n    getUserWallets: ServiceLocator.getGetUserWalletsQueryHandler(),\n    buyCurrency: ServiceLocator.getBuyCurrencyUseCase(),\n    registerUser: ServiceLocator.getRegisterUserUseCase()\n  }\n}\n\n/**\n * React Hook for repositories\n */\nexport function useRepositories() {\n  return {\n    users: ServiceLocator.getUserRepository(),\n    wallets: ServiceLocator.getWalletRepository(),\n    transactions: ServiceLocator.getTransactionRepository()\n  }\n}\n\n/**\n * React Hook for domain services\n */\nexport function useDomainServices() {\n  return {\n    feeCalculation: ServiceLocator.getFeeCalculationService(),\n    exchangeRate: ServiceLocator.getExchangeRateService()\n  }\n}\n\n/**\n * Decorator for automatic service injection\n */\nexport function Injectable(serviceName: string) {\n  return function <T extends { new (...args: any[]): {} }>(constructor: T) {\n    return class extends constructor {\n      constructor(...args: any[]) {\n        super(...args)\n        // Inject the service\n        Object.defineProperty(this, serviceName, {\n          get: () => ServiceLocator.resolve(serviceName),\n          enumerable: true,\n          configurable: false\n        })\n      }\n    }\n  }\n}\n\n/**\n * Property decorator for service injection\n */\nexport function Inject(serviceName: string) {\n  return function (target: any, propertyKey: string) {\n    Object.defineProperty(target, propertyKey, {\n      get: () => ServiceLocator.resolve(serviceName),\n      enumerable: true,\n      configurable: false\n    })\n  }\n}\n\n/**\n * Scoped service manager for request-scoped services\n */\nexport class ScopedServiceManager {\n  private scopeId: string\n\n  constructor(scopeId: string) {\n    this.scopeId = scopeId\n  }\n\n  resolve<T>(serviceName: string): T {\n    return ServiceLocator.resolve<T>(serviceName, this.scopeId)\n  }\n\n  clearScope(): void {\n    ServiceLocator.getContainer().clearScope(this.scopeId)\n  }\n\n  static createRequestScope(requestId: string): ScopedServiceManager {\n    return new ScopedServiceManager(`request_${requestId}`)\n  }\n\n  static createUserScope(userId: string): ScopedServiceManager {\n    return new ScopedServiceManager(`user_${userId}`)\n  }\n}\n\n// Initialize service locator on module load\nServiceLocator.initialize()\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "690e6c6ffb1d7701d46c2ef9800709942e01a118"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27xzn9ptbf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27xzn9ptbf();
/**
 * Service Locator Pattern
 *
 * Provides a simplified interface for dependency resolution.
 * Useful for components that need to access services without direct injection.
 */
import { getContainer } from './Container';
/**
 * Service Locator for easy dependency resolution
 */
export class ServiceLocator {
  /**
   * Initialize the service locator with a container
   */
  static initialize(container) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[0]++;
    cov_27xzn9ptbf().s[0]++;
    ServiceLocator.container =
    /* istanbul ignore next */
    (cov_27xzn9ptbf().b[0][0]++, container) ||
    /* istanbul ignore next */
    (cov_27xzn9ptbf().b[0][1]++, getContainer());
  }
  /**
   * Get the underlying container
   */
  static getContainer() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[1]++;
    cov_27xzn9ptbf().s[1]++;
    if (!ServiceLocator.container) {
      /* istanbul ignore next */
      cov_27xzn9ptbf().b[1][0]++;
      cov_27xzn9ptbf().s[2]++;
      ServiceLocator.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_27xzn9ptbf().b[1][1]++;
    }
    cov_27xzn9ptbf().s[3]++;
    return ServiceLocator.container;
  }
  /**
   * Resolve a service by name
   */
  static resolve(serviceName, scopeId) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[2]++;
    cov_27xzn9ptbf().s[4]++;
    return ServiceLocator.getContainer().resolve(serviceName, scopeId);
  }
  /**
   * Check if a service is registered
   */
  static isRegistered(serviceName) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[3]++;
    cov_27xzn9ptbf().s[5]++;
    return ServiceLocator.getContainer().isRegistered(serviceName);
  }
  /**
   * Get services by tag
   */
  static getServicesByTag(tag) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[4]++;
    cov_27xzn9ptbf().s[6]++;
    return ServiceLocator.getContainer().getServicesByTag(tag);
  }
  // Use Cases
  static getSendMoneyUseCase() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[5]++;
    cov_27xzn9ptbf().s[7]++;
    return ServiceLocator.resolve('sendMoneyUseCase');
  }
  static getGetWalletBalanceQueryHandler() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[6]++;
    cov_27xzn9ptbf().s[8]++;
    return ServiceLocator.resolve('getWalletBalanceQueryHandler');
  }
  static getGetUserWalletsQueryHandler() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[7]++;
    cov_27xzn9ptbf().s[9]++;
    return ServiceLocator.resolve('getUserWalletsQueryHandler');
  }
  static getBuyCurrencyUseCase() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[8]++;
    cov_27xzn9ptbf().s[10]++;
    return ServiceLocator.resolve('buyCurrencyUseCase');
  }
  static getRegisterUserUseCase() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[9]++;
    cov_27xzn9ptbf().s[11]++;
    return ServiceLocator.resolve('registerUserUseCase');
  }
  // Repositories
  static getUserRepository() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[10]++;
    cov_27xzn9ptbf().s[12]++;
    return ServiceLocator.resolve('userRepository');
  }
  static getWalletRepository() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[11]++;
    cov_27xzn9ptbf().s[13]++;
    return ServiceLocator.resolve('walletRepository');
  }
  static getTransactionRepository() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[12]++;
    cov_27xzn9ptbf().s[14]++;
    return ServiceLocator.resolve('transactionRepository');
  }
  // Domain Services
  static getFeeCalculationService() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[13]++;
    cov_27xzn9ptbf().s[15]++;
    return ServiceLocator.resolve('feeCalculationService');
  }
  static getExchangeRateService() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[14]++;
    cov_27xzn9ptbf().s[16]++;
    return ServiceLocator.resolve('exchangeRateService');
  }
}
/**
 * React Hook for using services in components
 */
export function useService(serviceName, scopeId) {
  /* istanbul ignore next */
  cov_27xzn9ptbf().f[15]++;
  cov_27xzn9ptbf().s[17]++;
  return ServiceLocator.resolve(serviceName, scopeId);
}
/**
 * React Hook for use cases
 */
export function useUseCases() {
  /* istanbul ignore next */
  cov_27xzn9ptbf().f[16]++;
  cov_27xzn9ptbf().s[18]++;
  return {
    sendMoney: ServiceLocator.getSendMoneyUseCase(),
    getWalletBalance: ServiceLocator.getGetWalletBalanceQueryHandler(),
    getUserWallets: ServiceLocator.getGetUserWalletsQueryHandler(),
    buyCurrency: ServiceLocator.getBuyCurrencyUseCase(),
    registerUser: ServiceLocator.getRegisterUserUseCase()
  };
}
/**
 * React Hook for repositories
 */
export function useRepositories() {
  /* istanbul ignore next */
  cov_27xzn9ptbf().f[17]++;
  cov_27xzn9ptbf().s[19]++;
  return {
    users: ServiceLocator.getUserRepository(),
    wallets: ServiceLocator.getWalletRepository(),
    transactions: ServiceLocator.getTransactionRepository()
  };
}
/**
 * React Hook for domain services
 */
export function useDomainServices() {
  /* istanbul ignore next */
  cov_27xzn9ptbf().f[18]++;
  cov_27xzn9ptbf().s[20]++;
  return {
    feeCalculation: ServiceLocator.getFeeCalculationService(),
    exchangeRate: ServiceLocator.getExchangeRateService()
  };
}
/**
 * Decorator for automatic service injection
 */
export function Injectable(serviceName) {
  /* istanbul ignore next */
  cov_27xzn9ptbf().f[19]++;
  cov_27xzn9ptbf().s[21]++;
  return function (constructor) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[20]++;
    cov_27xzn9ptbf().s[22]++;
    return class extends constructor {
      constructor(...args) {
        /* istanbul ignore next */
        cov_27xzn9ptbf().f[21]++;
        cov_27xzn9ptbf().s[23]++;
        super(...args);
        // Inject the service
        /* istanbul ignore next */
        cov_27xzn9ptbf().s[24]++;
        Object.defineProperty(this, serviceName, {
          get: () => {
            /* istanbul ignore next */
            cov_27xzn9ptbf().f[22]++;
            cov_27xzn9ptbf().s[25]++;
            return ServiceLocator.resolve(serviceName);
          },
          enumerable: true,
          configurable: false
        });
      }
    };
  };
}
/**
 * Property decorator for service injection
 */
export function Inject(serviceName) {
  /* istanbul ignore next */
  cov_27xzn9ptbf().f[23]++;
  cov_27xzn9ptbf().s[26]++;
  return function (target, propertyKey) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[24]++;
    cov_27xzn9ptbf().s[27]++;
    Object.defineProperty(target, propertyKey, {
      get: () => {
        /* istanbul ignore next */
        cov_27xzn9ptbf().f[25]++;
        cov_27xzn9ptbf().s[28]++;
        return ServiceLocator.resolve(serviceName);
      },
      enumerable: true,
      configurable: false
    });
  };
}
/**
 * Scoped service manager for request-scoped services
 */
export class ScopedServiceManager {
  constructor(scopeId) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[26]++;
    cov_27xzn9ptbf().s[29]++;
    this.scopeId = scopeId;
  }
  resolve(serviceName) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[27]++;
    cov_27xzn9ptbf().s[30]++;
    return ServiceLocator.resolve(serviceName, this.scopeId);
  }
  clearScope() {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[28]++;
    cov_27xzn9ptbf().s[31]++;
    ServiceLocator.getContainer().clearScope(this.scopeId);
  }
  static createRequestScope(requestId) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[29]++;
    cov_27xzn9ptbf().s[32]++;
    return new ScopedServiceManager(`request_${requestId}`);
  }
  static createUserScope(userId) {
    /* istanbul ignore next */
    cov_27xzn9ptbf().f[30]++;
    cov_27xzn9ptbf().s[33]++;
    return new ScopedServiceManager(`user_${userId}`);
  }
}
// Initialize service locator on module load
/* istanbul ignore next */
cov_27xzn9ptbf().s[34]++;
ServiceLocator.initialize();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,