56387c7f98cd763df97259b9762fef4e
/* istanbul ignore next */
function cov_6xk7rwi7z() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\api\\cors.ts";
  var hash = "99bdfbdadae47fe6e7db624a0a7b7dfb89c1fabb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\api\\cors.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 20
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "1": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 23,
          column: 100
        }
      },
      "2": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 78
        }
      },
      "3": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 89
        }
      },
      "4": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 96
        }
      },
      "5": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 97
        }
      },
      "6": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 82
        }
      },
      "7": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "8": {
        start: {
          line: 35,
          column: 19
        },
        end: {
          line: 35,
          column: 48
        }
      },
      "9": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 60
        }
      },
      "10": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "11": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "12": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 52
        }
      },
      "13": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "14": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 47
        }
      },
      "15": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 50,
          column: 56
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 61
        }
      },
      "17": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 47
        }
      },
      "18": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "addCorsHeaders",
        decl: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 30
          }
        },
        loc: {
          start: {
            line: 21,
            column: 49
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "handleCorsPrelight",
        decl: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 44
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "withCors",
        decl: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 24
          }
        },
        loc: {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 11
          },
          end: {
            line: 43,
            column: 12
          }
        },
        loc: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 43
      },
      "4": {
        name: "isOriginAllowed",
        decl: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 31
          }
        },
        loc: {
          start: {
            line: 58,
            column: 40
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "getCorsConfig",
        decl: {
          start: {
            line: 64,
            column: 16
          },
          end: {
            line: 64,
            column: 29
          }
        },
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 64
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 12
          },
          end: {
            line: 6,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 10
          },
          end: {
            line: 5,
            column: 37
          }
        }, {
          start: {
            line: 6,
            column: 10
          },
          end: {
            line: 6,
            column: 60
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 70
          },
          end: {
            line: 23,
            column: 76
          }
        }, {
          start: {
            line: 23,
            column: 79
          },
          end: {
            line: 23,
            column: 100
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 54
          },
          end: {
            line: 23,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 54
          },
          end: {
            line: 23,
            column: 60
          }
        }, {
          start: {
            line: 23,
            column: 64
          },
          end: {
            line: 23,
            column: 66
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 24,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 24,
            column: 69
          }
        }, {
          start: {
            line: 24,
            column: 73
          },
          end: {
            line: 24,
            column: 76
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 42
          }
        }, {
          start: {
            line: 37,
            column: 46
          },
          end: {
            line: 37,
            column: 55
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 40
          },
          end: {
            line: 52,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 40
          },
          end: {
            line: 52,
            column: 46
          }
        }, {
          start: {
            line: 52,
            column: 50
          },
          end: {
            line: 52,
            column: 59
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\api\\cors.ts",
      mappings: "AAAA,OAAO,EAAe,YAAY,EAAE,MAAM,aAAa,CAAC;AAExD,qBAAqB;AACrB,MAAM,WAAW,GAAG;IAClB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;QAC3C,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,sCAAsC;QACpE,CAAC,CAAC,CAAC,uBAAuB,EAAE,uBAAuB,CAAC;IACtD,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC;IACpD,cAAc,EAAE;QACd,cAAc;QACd,eAAe;QACf,kBAAkB;QAClB,QAAQ;QACR,QAAQ;KACT;IACD,WAAW,EAAE,IAAI;IACjB,MAAM,EAAE,KAAK,CAAC,WAAW;CAC1B,CAAC;AAEF;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,QAAsB,EAAE,MAAe;IACpE,6BAA6B;IAC7B,MAAM,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAEjG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,aAAa,IAAI,GAAG,CAAC,CAAC;IAC1E,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrF,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5F,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7F,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAE9E,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,kBAAkB,CAAC,OAAoB;IACrD,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IAEzD,OAAO,cAAc,CAAC,QAAQ,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC;AACvD,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,QAAQ,CACtB,OAAoE;IAEpE,OAAO,KAAK,EAAE,OAAoB,EAAE,GAAG,IAAO,EAAyB,EAAE;QACvE,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE7C,4BAA4B;QAC5B,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YACjC,OAAO,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;QAED,sBAAsB;QACtB,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QAEjD,mCAAmC;QACnC,OAAO,cAAc,CAAC,QAAQ,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,eAAe,CAAC,MAAc;IAC5C,OAAO,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC7C,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,aAAa;IAC3B,yBAAY,WAAW,EAAG;AAC5B,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\api\\cors.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\n\n// CORS configuration\nconst CORS_CONFIG = {\n  origin: process.env.NODE_ENV === 'production' \n    ? ['https://your-domain.com'] // Replace with your production domain\n    : ['http://localhost:3000', 'http://127.0.0.1:3000'],\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: [\n    'Content-Type',\n    'Authorization',\n    'X-Requested-With',\n    'Accept',\n    'Origin'\n  ],\n  credentials: true,\n  maxAge: 86400 // 24 hours\n};\n\n/**\n * Add CORS headers to a response\n */\nexport function addCorsHeaders(response: NextResponse, origin?: string): NextResponse {\n  // Check if origin is allowed\n  const allowedOrigin = CORS_CONFIG.origin.includes(origin || '') ? origin : CORS_CONFIG.origin[0];\n\n  response.headers.set('Access-Control-Allow-Origin', allowedOrigin || '*');\n  response.headers.set('Access-Control-Allow-Methods', CORS_CONFIG.methods.join(', '));\n  response.headers.set('Access-Control-Allow-Headers', CORS_CONFIG.allowedHeaders.join(', '));\n  response.headers.set('Access-Control-Allow-Credentials', CORS_CONFIG.credentials.toString());\n  response.headers.set('Access-Control-Max-Age', CORS_CONFIG.maxAge.toString());\n\n  return response;\n}\n\n/**\n * Handle CORS preflight requests\n */\nexport function handleCorsPrelight(request: NextRequest): NextResponse {\n  const origin = request.headers.get('origin');\n  const response = new NextResponse(null, { status: 200 });\n  \n  return addCorsHeaders(response, origin || undefined);\n}\n\n/**\n * Middleware wrapper to add CORS support to API routes\n */\nexport function withCors<T extends unknown[]>(\n  handler: (request: NextRequest, ...args: T) => Promise<NextResponse>\n) {\n  return async (request: NextRequest, ...args: T): Promise<NextResponse> => {\n    const origin = request.headers.get('origin');\n\n    // Handle preflight requests\n    if (request.method === 'OPTIONS') {\n      return handleCorsPrelight(request);\n    }\n\n    // Execute the handler\n    const response = await handler(request, ...args);\n\n    // Add CORS headers to the response\n    return addCorsHeaders(response, origin || undefined);\n  };\n}\n\n/**\n * Check if origin is allowed\n */\nexport function isOriginAllowed(origin: string): boolean {\n  return CORS_CONFIG.origin.includes(origin);\n}\n\n/**\n * Get CORS configuration\n */\nexport function getCorsConfig() {\n  return { ...CORS_CONFIG };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99bdfbdadae47fe6e7db624a0a7b7dfb89c1fabb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6xk7rwi7z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6xk7rwi7z();
import { NextResponse } from 'next/server';
// CORS configuration
const CORS_CONFIG =
/* istanbul ignore next */
(cov_6xk7rwi7z().s[0]++, {
  origin: process.env.NODE_ENV === 'production' ?
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[0][0]++, ['https://your-domain.com'] // Replace with your production domain
  ) :
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[0][1]++, ['http://localhost:3000', 'http://127.0.0.1:3000']),
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin'],
  credentials: true,
  maxAge: 86400 // 24 hours
});
/**
 * Add CORS headers to a response
 */
export function addCorsHeaders(response, origin) {
  /* istanbul ignore next */
  cov_6xk7rwi7z().f[0]++;
  // Check if origin is allowed
  const allowedOrigin =
  /* istanbul ignore next */
  (cov_6xk7rwi7z().s[1]++, CORS_CONFIG.origin.includes(
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[2][0]++, origin) ||
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[2][1]++, '')) ?
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[1][0]++, origin) :
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[1][1]++, CORS_CONFIG.origin[0]));
  /* istanbul ignore next */
  cov_6xk7rwi7z().s[2]++;
  response.headers.set('Access-Control-Allow-Origin',
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[3][0]++, allowedOrigin) ||
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[3][1]++, '*'));
  /* istanbul ignore next */
  cov_6xk7rwi7z().s[3]++;
  response.headers.set('Access-Control-Allow-Methods', CORS_CONFIG.methods.join(', '));
  /* istanbul ignore next */
  cov_6xk7rwi7z().s[4]++;
  response.headers.set('Access-Control-Allow-Headers', CORS_CONFIG.allowedHeaders.join(', '));
  /* istanbul ignore next */
  cov_6xk7rwi7z().s[5]++;
  response.headers.set('Access-Control-Allow-Credentials', CORS_CONFIG.credentials.toString());
  /* istanbul ignore next */
  cov_6xk7rwi7z().s[6]++;
  response.headers.set('Access-Control-Max-Age', CORS_CONFIG.maxAge.toString());
  /* istanbul ignore next */
  cov_6xk7rwi7z().s[7]++;
  return response;
}
/**
 * Handle CORS preflight requests
 */
export function handleCorsPrelight(request) {
  /* istanbul ignore next */
  cov_6xk7rwi7z().f[1]++;
  const origin =
  /* istanbul ignore next */
  (cov_6xk7rwi7z().s[8]++, request.headers.get('origin'));
  const response =
  /* istanbul ignore next */
  (cov_6xk7rwi7z().s[9]++, new NextResponse(null, {
    status: 200
  }));
  /* istanbul ignore next */
  cov_6xk7rwi7z().s[10]++;
  return addCorsHeaders(response,
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[4][0]++, origin) ||
  /* istanbul ignore next */
  (cov_6xk7rwi7z().b[4][1]++, undefined));
}
/**
 * Middleware wrapper to add CORS support to API routes
 */
export function withCors(handler) {
  /* istanbul ignore next */
  cov_6xk7rwi7z().f[2]++;
  cov_6xk7rwi7z().s[11]++;
  return async (request, ...args) => {
    /* istanbul ignore next */
    cov_6xk7rwi7z().f[3]++;
    const origin =
    /* istanbul ignore next */
    (cov_6xk7rwi7z().s[12]++, request.headers.get('origin'));
    // Handle preflight requests
    /* istanbul ignore next */
    cov_6xk7rwi7z().s[13]++;
    if (request.method === 'OPTIONS') {
      /* istanbul ignore next */
      cov_6xk7rwi7z().b[5][0]++;
      cov_6xk7rwi7z().s[14]++;
      return handleCorsPrelight(request);
    } else
    /* istanbul ignore next */
    {
      cov_6xk7rwi7z().b[5][1]++;
    }
    // Execute the handler
    const response =
    /* istanbul ignore next */
    (cov_6xk7rwi7z().s[15]++, await handler(request, ...args));
    // Add CORS headers to the response
    /* istanbul ignore next */
    cov_6xk7rwi7z().s[16]++;
    return addCorsHeaders(response,
    /* istanbul ignore next */
    (cov_6xk7rwi7z().b[6][0]++, origin) ||
    /* istanbul ignore next */
    (cov_6xk7rwi7z().b[6][1]++, undefined));
  };
}
/**
 * Check if origin is allowed
 */
export function isOriginAllowed(origin) {
  /* istanbul ignore next */
  cov_6xk7rwi7z().f[4]++;
  cov_6xk7rwi7z().s[17]++;
  return CORS_CONFIG.origin.includes(origin);
}
/**
 * Get CORS configuration
 */
export function getCorsConfig() {
  /* istanbul ignore next */
  cov_6xk7rwi7z().f[5]++;
  cov_6xk7rwi7z().s[18]++;
  return Object.assign({}, CORS_CONFIG);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,