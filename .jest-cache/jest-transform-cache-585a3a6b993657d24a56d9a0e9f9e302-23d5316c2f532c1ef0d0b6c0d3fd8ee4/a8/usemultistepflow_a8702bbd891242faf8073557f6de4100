c1323720eab381e615a4f6b9a2046959
'use client';

/* istanbul ignore next */
function cov_jdx6rapte() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-multi-step-flow.ts";
  var hash = "bfffc18207d6bbd2fbb8d59e4d559beadb60d56f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-multi-step-flow.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 63
        }
      },
      "1": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 6,
          column: 55
        }
      },
      "2": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 35
        }
      },
      "3": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 46
        }
      },
      "4": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 58
        }
      },
      "5": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 65
        }
      },
      "6": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "7": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "9": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "10": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 91
        }
      },
      "11": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "12": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "13": {
        start: {
          line: 20,
          column: 34
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "14": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "15": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "16": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 31,
          column: 55
        }
      },
      "17": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "18": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 54
        }
      },
      "19": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "20": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "21": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "22": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "23": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "24": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "25": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 50,
          column: 6
        }
      },
      "26": {
        start: {
          line: 53,
          column: 19
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "27": {
        start: {
          line: 54,
          column: 42
        },
        end: {
          line: 54,
          column: 63
        }
      },
      "28": {
        start: {
          line: 55,
          column: 29
        },
        end: {
          line: 55,
          column: 55
        }
      },
      "29": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 35
        }
      },
      "30": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "31": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 58
        }
      },
      "32": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "34": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "35": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "36": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "37": {
        start: {
          line: 66,
          column: 34
        },
        end: {
          line: 66,
          column: 54
        }
      },
      "38": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "39": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 30
        }
      },
      "40": {
        start: {
          line: 70,
          column: 13
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "41": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 25
        }
      },
      "42": {
        start: {
          line: 74,
          column: 25
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "43": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "44": {
        start: {
          line: 76,
          column: 34
        },
        end: {
          line: 76,
          column: 54
        }
      },
      "45": {
        start: {
          line: 77,
          column: 29
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "46": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "47": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 86,
          column: 36
        }
      },
      "48": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "49": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 83,
          column: 41
        }
      },
      "50": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 26
        }
      },
      "51": {
        start: {
          line: 87,
          column: 34
        },
        end: {
          line: 89,
          column: 31
        }
      },
      "52": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 35
        }
      },
      "53": {
        start: {
          line: 90,
          column: 29
        },
        end: {
          line: 92,
          column: 31
        }
      },
      "54": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 35
        }
      },
      "55": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 100,
          column: 58
        }
      },
      "56": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "57": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 36
        }
      },
      "58": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 27
        }
      },
      "59": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 114,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "useMultiStepFlow",
        decl: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 32
          }
        },
        loc: {
          start: {
            line: 4,
            column: 83
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 12,
            column: 42
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 18,
            column: 34
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 38
          }
        },
        loc: {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "useTransactionFlow",
        decl: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 34
          }
        },
        loc: {
          start: {
            line: 52,
            column: 92
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 33
          }
        },
        loc: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 59
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 64,
            column: 33
          },
          end: {
            line: 64,
            column: 34
          }
        },
        loc: {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 64
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 74,
            column: 37
          },
          end: {
            line: 74,
            column: 38
          }
        },
        loc: {
          start: {
            line: 74,
            column: 43
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 74
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 33
          },
          end: {
            line: 81,
            column: 34
          }
        },
        loc: {
          start: {
            line: 81,
            column: 48
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 87,
            column: 46
          },
          end: {
            line: 87,
            column: 47
          }
        },
        loc: {
          start: {
            line: 87,
            column: 52
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 87
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 90,
            column: 41
          },
          end: {
            line: 90,
            column: 42
          }
        },
        loc: {
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 90
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 36
          }
        },
        loc: {
          start: {
            line: 93,
            column: 41
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 93
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 10,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 10,
            column: 58
          }
        }, {
          start: {
            line: 10,
            column: 61
          },
          end: {
            line: 10,
            column: 65
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 63
          },
          end: {
            line: 15,
            column: 69
          }
        }, {
          start: {
            line: 15,
            column: 72
          },
          end: {
            line: 15,
            column: 90
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 33
          }
        }, {
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 15,
            column: 60
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 23
          }
        }, {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 36
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 26
          }
        }, {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 52
          }
        }],
        line: 33
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 69
          },
          end: {
            line: 52,
            column: 88
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 52,
            column: 85
          },
          end: {
            line: 52,
            column: 88
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 72,
            column: 9
          }
        }],
        line: 65
      },
      "12": {
        loc: {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "13": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "14": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "15": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 26
          }
        }, {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 52
          }
        }],
        line: 82
      },
      "16": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: 97,
            column: 13
          },
          end: {
            line: 99,
            column: 9
          }
        }],
        line: 94
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-multi-step-flow.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-multi-step-flow.ts"],
      sourcesContent: ["'use client'\n\nimport { useState, useCallback } from 'react'\nimport { useRouter } from 'next/navigation'\n\ninterface UseMultiStepFlowOptions<T> {\n  initialStep: T\n  steps: T[]\n  onStepChange?: (step: T) => void\n  canProceed?: (step: T) => boolean\n}\n\ninterface UseMultiStepFlowReturn<T> {\n  currentStep: T\n  currentStepIndex: number\n  totalSteps: number\n  isFirstStep: boolean\n  isLastStep: boolean\n  setStep: (step: T) => void\n  nextStep: () => void\n  previousStep: () => void\n  goToStep: (stepIndex: number) => void\n  canGoNext: boolean\n  canGoBack: boolean\n}\n\nexport function useMultiStepFlow<T extends string | number>({\n  initialStep,\n  steps,\n  onStepChange,\n  canProceed\n}: UseMultiStepFlowOptions<T>): UseMultiStepFlowReturn<T> {\n  const [currentStep, setCurrentStep] = useState<T>(initialStep)\n\n  const currentStepIndex = steps.indexOf(currentStep)\n  const totalSteps = steps.length\n  const isFirstStep = currentStepIndex === 0\n  const isLastStep = currentStepIndex === totalSteps - 1\n\n  const canGoNext = canProceed ? canProceed(currentStep) : true\n  const canGoBack = !isFirstStep\n\n  const setStep = useCallback((step: T) => {\n    if (steps.includes(step)) {\n      setCurrentStep(step)\n      onStepChange?.(step)\n    }\n  }, [steps, onStepChange])\n\n  const nextStep = useCallback(() => {\n    if (!isLastStep && canGoNext) {\n      const nextStepIndex = currentStepIndex + 1\n      const nextStep = steps[nextStepIndex]\n      setStep(nextStep)\n    }\n  }, [currentStepIndex, isLastStep, canGoNext, steps, setStep])\n\n  const previousStep = useCallback(() => {\n    if (!isFirstStep) {\n      const prevStepIndex = currentStepIndex - 1\n      const prevStep = steps[prevStepIndex]\n      setStep(prevStep)\n    }\n  }, [currentStepIndex, isFirstStep, steps, setStep])\n\n  const goToStep = useCallback((stepIndex: number) => {\n    if (stepIndex >= 0 && stepIndex < totalSteps) {\n      const step = steps[stepIndex]\n      setStep(step)\n    }\n  }, [totalSteps, steps, setStep])\n\n  return {\n    currentStep,\n    currentStepIndex,\n    totalSteps,\n    isFirstStep,\n    isLastStep,\n    setStep,\n    nextStep,\n    previousStep,\n    goToStep,\n    canGoNext,\n    canGoBack\n  }\n}\n\n// Enhanced hook for transaction flows with common patterns\ninterface UseTransactionFlowOptions {\n  initialStep: string\n  steps: string[]\n  onComplete?: () => void\n  dashboardPath?: string\n}\n\ninterface UseTransactionFlowReturn {\n  currentStep: string\n  currentStepIndex: number\n  totalSteps: number\n  isFirstStep: boolean\n  isLastStep: boolean\n  setStep: (step: string) => void\n  nextStep: () => void\n  previousStep: () => void\n  goToStep: (stepIndex: number) => void\n  handleBack: () => void\n  handleBackToDashboard: () => void\n  handleBackToHome: () => void\n}\n\nexport function useTransactionFlow({\n  initialStep,\n  steps,\n  onComplete,\n  dashboardPath = \"/\"\n}: UseTransactionFlowOptions): UseTransactionFlowReturn {\n  const router = useRouter()\n  const [currentStep, setCurrentStep] = useState(initialStep)\n\n  const currentStepIndex = steps.indexOf(currentStep)\n  const totalSteps = steps.length\n  const isFirstStep = currentStepIndex === 0\n  const isLastStep = currentStepIndex === totalSteps - 1\n\n  const setStep = useCallback((step: string) => {\n    if (steps.includes(step)) {\n      setCurrentStep(step)\n    }\n  }, [steps])\n\n  const nextStep = useCallback(() => {\n    if (!isLastStep) {\n      const nextStepIndex = currentStepIndex + 1\n      const nextStep = steps[nextStepIndex]\n      setStep(nextStep)\n    } else if (onComplete) {\n      onComplete()\n    }\n  }, [currentStepIndex, isLastStep, steps, setStep, onComplete])\n\n  const previousStep = useCallback(() => {\n    if (!isFirstStep) {\n      const prevStepIndex = currentStepIndex - 1\n      const prevStep = steps[prevStepIndex]\n      setStep(prevStep)\n    }\n  }, [currentStepIndex, isFirstStep, steps, setStep])\n\n  const goToStep = useCallback((stepIndex: number) => {\n    if (stepIndex >= 0 && stepIndex < totalSteps) {\n      const step = steps[stepIndex]\n      setStep(step)\n    }\n  }, [totalSteps, steps, setStep])\n\n  const handleBackToDashboard = useCallback(() => {\n    router.push(dashboardPath)\n  }, [router, dashboardPath])\n\n  const handleBackToHome = useCallback(() => {\n    router.push(dashboardPath)\n  }, [router, dashboardPath])\n\n  const handleBack = useCallback(() => {\n    if (isFirstStep) {\n      handleBackToDashboard()\n    } else {\n      previousStep()\n    }\n  }, [isFirstStep, handleBackToDashboard, previousStep])\n\n  return {\n    currentStep,\n    currentStepIndex,\n    totalSteps,\n    isFirstStep,\n    isLastStep,\n    setStep,\n    nextStep,\n    previousStep,\n    goToStep,\n    handleBack,\n    handleBackToDashboard,\n    handleBackToHome\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bfffc18207d6bbd2fbb8d59e4d559beadb60d56f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jdx6rapte = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jdx6rapte();
import { useState, useCallback } from 'react';
import { useRouter } from 'next/navigation';
export function useMultiStepFlow({
  initialStep,
  steps,
  onStepChange,
  canProceed
}) {
  /* istanbul ignore next */
  cov_jdx6rapte().f[0]++;
  const [currentStep, setCurrentStep] =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[0]++, useState(initialStep));
  const currentStepIndex =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[1]++, steps.indexOf(currentStep));
  const totalSteps =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[2]++, steps.length);
  const isFirstStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[3]++, currentStepIndex === 0);
  const isLastStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[4]++, currentStepIndex === totalSteps - 1);
  const canGoNext =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[5]++, canProceed ?
  /* istanbul ignore next */
  (cov_jdx6rapte().b[0][0]++, canProceed(currentStep)) :
  /* istanbul ignore next */
  (cov_jdx6rapte().b[0][1]++, true));
  const canGoBack =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[6]++, !isFirstStep);
  const setStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[7]++, useCallback(step => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[1]++;
    cov_jdx6rapte().s[8]++;
    if (steps.includes(step)) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[1][0]++;
      cov_jdx6rapte().s[9]++;
      setCurrentStep(step);
      /* istanbul ignore next */
      cov_jdx6rapte().s[10]++;
      /* istanbul ignore next */
      (cov_jdx6rapte().b[3][0]++, onStepChange === null) ||
      /* istanbul ignore next */
      (cov_jdx6rapte().b[3][1]++, onStepChange === void 0) ?
      /* istanbul ignore next */
      (cov_jdx6rapte().b[2][0]++, void 0) :
      /* istanbul ignore next */
      (cov_jdx6rapte().b[2][1]++, onStepChange(step));
    } else
    /* istanbul ignore next */
    {
      cov_jdx6rapte().b[1][1]++;
    }
  }, [steps, onStepChange]));
  const nextStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[11]++, useCallback(() => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[2]++;
    cov_jdx6rapte().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_jdx6rapte().b[5][0]++, !isLastStep) &&
    /* istanbul ignore next */
    (cov_jdx6rapte().b[5][1]++, canGoNext)) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[4][0]++;
      const nextStepIndex =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[13]++, currentStepIndex + 1);
      const nextStep =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[14]++, steps[nextStepIndex]);
      /* istanbul ignore next */
      cov_jdx6rapte().s[15]++;
      setStep(nextStep);
    } else
    /* istanbul ignore next */
    {
      cov_jdx6rapte().b[4][1]++;
    }
  }, [currentStepIndex, isLastStep, canGoNext, steps, setStep]));
  const previousStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[16]++, useCallback(() => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[3]++;
    cov_jdx6rapte().s[17]++;
    if (!isFirstStep) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[6][0]++;
      const prevStepIndex =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[18]++, currentStepIndex - 1);
      const prevStep =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[19]++, steps[prevStepIndex]);
      /* istanbul ignore next */
      cov_jdx6rapte().s[20]++;
      setStep(prevStep);
    } else
    /* istanbul ignore next */
    {
      cov_jdx6rapte().b[6][1]++;
    }
  }, [currentStepIndex, isFirstStep, steps, setStep]));
  const goToStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[21]++, useCallback(stepIndex => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[4]++;
    cov_jdx6rapte().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_jdx6rapte().b[8][0]++, stepIndex >= 0) &&
    /* istanbul ignore next */
    (cov_jdx6rapte().b[8][1]++, stepIndex < totalSteps)) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[7][0]++;
      const step =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[23]++, steps[stepIndex]);
      /* istanbul ignore next */
      cov_jdx6rapte().s[24]++;
      setStep(step);
    } else
    /* istanbul ignore next */
    {
      cov_jdx6rapte().b[7][1]++;
    }
  }, [totalSteps, steps, setStep]));
  /* istanbul ignore next */
  cov_jdx6rapte().s[25]++;
  return {
    currentStep,
    currentStepIndex,
    totalSteps,
    isFirstStep,
    isLastStep,
    setStep,
    nextStep,
    previousStep,
    goToStep,
    canGoNext,
    canGoBack
  };
}
export function useTransactionFlow({
  initialStep,
  steps,
  onComplete,
  dashboardPath =
  /* istanbul ignore next */
  (cov_jdx6rapte().b[9][0]++, "/")
}) {
  /* istanbul ignore next */
  cov_jdx6rapte().f[5]++;
  const router =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[26]++, useRouter());
  const [currentStep, setCurrentStep] =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[27]++, useState(initialStep));
  const currentStepIndex =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[28]++, steps.indexOf(currentStep));
  const totalSteps =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[29]++, steps.length);
  const isFirstStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[30]++, currentStepIndex === 0);
  const isLastStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[31]++, currentStepIndex === totalSteps - 1);
  const setStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[32]++, useCallback(step => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[6]++;
    cov_jdx6rapte().s[33]++;
    if (steps.includes(step)) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[10][0]++;
      cov_jdx6rapte().s[34]++;
      setCurrentStep(step);
    } else
    /* istanbul ignore next */
    {
      cov_jdx6rapte().b[10][1]++;
    }
  }, [steps]));
  const nextStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[35]++, useCallback(() => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[7]++;
    cov_jdx6rapte().s[36]++;
    if (!isLastStep) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[11][0]++;
      const nextStepIndex =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[37]++, currentStepIndex + 1);
      const nextStep =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[38]++, steps[nextStepIndex]);
      /* istanbul ignore next */
      cov_jdx6rapte().s[39]++;
      setStep(nextStep);
    } else {
      /* istanbul ignore next */
      cov_jdx6rapte().b[11][1]++;
      cov_jdx6rapte().s[40]++;
      if (onComplete) {
        /* istanbul ignore next */
        cov_jdx6rapte().b[12][0]++;
        cov_jdx6rapte().s[41]++;
        onComplete();
      } else
      /* istanbul ignore next */
      {
        cov_jdx6rapte().b[12][1]++;
      }
    }
  }, [currentStepIndex, isLastStep, steps, setStep, onComplete]));
  const previousStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[42]++, useCallback(() => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[8]++;
    cov_jdx6rapte().s[43]++;
    if (!isFirstStep) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[13][0]++;
      const prevStepIndex =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[44]++, currentStepIndex - 1);
      const prevStep =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[45]++, steps[prevStepIndex]);
      /* istanbul ignore next */
      cov_jdx6rapte().s[46]++;
      setStep(prevStep);
    } else
    /* istanbul ignore next */
    {
      cov_jdx6rapte().b[13][1]++;
    }
  }, [currentStepIndex, isFirstStep, steps, setStep]));
  const goToStep =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[47]++, useCallback(stepIndex => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[9]++;
    cov_jdx6rapte().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_jdx6rapte().b[15][0]++, stepIndex >= 0) &&
    /* istanbul ignore next */
    (cov_jdx6rapte().b[15][1]++, stepIndex < totalSteps)) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[14][0]++;
      const step =
      /* istanbul ignore next */
      (cov_jdx6rapte().s[49]++, steps[stepIndex]);
      /* istanbul ignore next */
      cov_jdx6rapte().s[50]++;
      setStep(step);
    } else
    /* istanbul ignore next */
    {
      cov_jdx6rapte().b[14][1]++;
    }
  }, [totalSteps, steps, setStep]));
  const handleBackToDashboard =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[51]++, useCallback(() => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[10]++;
    cov_jdx6rapte().s[52]++;
    router.push(dashboardPath);
  }, [router, dashboardPath]));
  const handleBackToHome =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[53]++, useCallback(() => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[11]++;
    cov_jdx6rapte().s[54]++;
    router.push(dashboardPath);
  }, [router, dashboardPath]));
  const handleBack =
  /* istanbul ignore next */
  (cov_jdx6rapte().s[55]++, useCallback(() => {
    /* istanbul ignore next */
    cov_jdx6rapte().f[12]++;
    cov_jdx6rapte().s[56]++;
    if (isFirstStep) {
      /* istanbul ignore next */
      cov_jdx6rapte().b[16][0]++;
      cov_jdx6rapte().s[57]++;
      handleBackToDashboard();
    } else {
      /* istanbul ignore next */
      cov_jdx6rapte().b[16][1]++;
      cov_jdx6rapte().s[58]++;
      previousStep();
    }
  }, [isFirstStep, handleBackToDashboard, previousStep]));
  /* istanbul ignore next */
  cov_jdx6rapte().s[59]++;
  return {
    currentStep,
    currentStepIndex,
    totalSteps,
    isFirstStep,
    isLastStep,
    setStep,
    nextStep,
    previousStep,
    goToStep,
    handleBack,
    handleBackToDashboard,
    handleBackToHome
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,