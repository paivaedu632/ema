9f96553fbaa228e6a81ef6a6f11b4e4a
/* istanbul ignore next */
function cov_2najkiesto() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\exceptions\\DomainExceptions.ts";
  var hash = "bea74f6f313a5e6babd9e7f46920c96c5ce1d1ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\exceptions\\DomainExceptions.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "1": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "2": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 56
        }
      },
      "3": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "4": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 47
        }
      },
      "5": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "7": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 43
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "9": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 54
        }
      },
      "10": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 33
        }
      },
      "11": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 47
        }
      },
      "12": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "14": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 52
        }
      },
      "15": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 40
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 48
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 35
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "19": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "20": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 29
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 49
        }
      },
      "22": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 40
        }
      },
      "23": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 67,
          column: 50
        }
      },
      "24": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "25": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 49
        }
      },
      "26": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "27": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 35
        }
      },
      "28": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 40
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 87
        }
      },
      "30": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 43
        }
      },
      "31": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 41
        }
      },
      "32": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 29
        }
      },
      "33": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 52
        }
      },
      "34": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 40
        }
      },
      "35": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 86
        }
      },
      "36": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 43
        }
      },
      "37": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 41
        }
      },
      "38": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 39
        }
      },
      "39": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 48
        }
      },
      "40": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 40
        }
      },
      "41": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 108
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "43": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 43
        }
      },
      "44": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "45": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 40
        }
      },
      "46": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 59
        }
      },
      "47": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 41
        }
      },
      "48": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "49": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 37
        }
      },
      "50": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 88
        }
      },
      "51": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 41
        }
      },
      "52": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 37
        }
      },
      "53": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 48
        }
      },
      "54": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 37
        }
      },
      "55": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "56": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 41
        }
      },
      "57": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 37
        }
      },
      "58": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 31
        }
      },
      "59": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 42
        }
      },
      "60": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 40
        }
      },
      "61": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 54
        }
      },
      "62": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 29
        }
      },
      "63": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 37
        }
      },
      "64": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 36
        }
      },
      "65": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 66
        }
      },
      "66": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 29
        }
      },
      "67": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 38
        }
      },
      "68": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 40
        }
      },
      "69": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 94
        }
      },
      "70": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 29
        }
      },
      "71": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 33
        }
      },
      "72": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 39
        }
      },
      "73": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 36
        }
      },
      "74": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 53
        }
      },
      "75": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 29
        }
      },
      "76": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 29
        }
      },
      "77": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 37
        }
      },
      "78": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 37
        }
      },
      "79": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 72
        }
      },
      "80": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 39
        }
      },
      "81": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 29
        }
      },
      "82": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 40
        }
      },
      "83": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 37
        }
      },
      "84": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 69
        }
      },
      "85": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 29
        }
      },
      "86": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 39
        }
      },
      "87": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 40
        }
      },
      "88": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 52
        }
      },
      "89": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 47
        }
      },
      "90": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 43
        }
      },
      "91": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 47
        }
      },
      "92": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 49
        }
      },
      "93": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 40
        }
      },
      "94": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 52
        }
      },
      "95": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 47
        }
      },
      "96": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "97": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 47
        }
      },
      "98": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 49
        }
      },
      "99": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 40
        }
      },
      "100": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 228,
          column: 55
        }
      },
      "101": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 41
        }
      },
      "102": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 37
        }
      },
      "103": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 33
        }
      },
      "104": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 48
        }
      },
      "105": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 40
        }
      },
      "106": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 239,
          column: 42
        }
      },
      "107": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 43
        }
      },
      "108": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 33
        }
      },
      "109": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 29
        }
      },
      "110": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 47
        }
      },
      "111": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 25
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 70
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 69
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 65
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 58
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 53
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 76
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 58
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 46
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 99
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 42
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 51
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 128
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 24
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 150
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 34
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 158
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 170
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 37
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 179
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 188
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 65
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 199
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 65
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 211
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 52
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 226
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 49
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 237
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\exceptions\\DomainExceptions.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\exceptions\\DomainExceptions.ts"],
      sourcesContent: ["/**\n * Domain Exceptions\n * \n * Custom exceptions for domain business rule violations.\n * These exceptions represent business logic errors, not technical errors.\n */\n\nimport { Currency } from '../value-objects/Currency'\nimport { Money } from '../value-objects/Money'\nimport { UserId, TransactionId, WalletId } from '../value-objects/EntityId'\nimport { TransactionStatus, TransactionType } from '../entities/Transaction'\nimport { KycStatus } from '../entities/User'\n\n/**\n * Base class for all domain exceptions\n */\nabstract class DomainException extends Error {\n  abstract readonly code: string\n  abstract readonly category: 'BUSINESS_RULE' | 'VALIDATION' | 'AUTHORIZATION' | 'NOT_FOUND'\n\n  constructor(message: string) {\n    super(message)\n    this.name = this.constructor.name\n  }\n}\n\n/**\n * Insufficient balance exceptions\n */\nclass InsufficientBalanceException extends DomainException {\n  readonly code = 'INSUFFICIENT_BALANCE'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly currency: Currency,\n    public readonly requestedAmount: Money,\n    public readonly availableAmount: Money,\n    public readonly walletId?: WalletId\n  ) {\n    super(\n      `Insufficient ${currency.code} balance. ` +\n      `Requested: ${requestedAmount.toString()}, ` +\n      `Available: ${availableAmount.toString()}`\n    )\n  }\n}\n\nclass InsufficientReservedBalanceException extends DomainException {\n  readonly code = 'INSUFFICIENT_RESERVED_BALANCE'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly currency: Currency,\n    public readonly requestedAmount: Money,\n    public readonly reservedAmount: Money,\n    public readonly walletId?: WalletId\n  ) {\n    super(\n      `Insufficient ${currency.code} reserved balance. ` +\n      `Requested: ${requestedAmount.toString()}, ` +\n      `Reserved: ${reservedAmount.toString()}`\n    )\n  }\n}\n\n/**\n * Transaction limit exceptions\n */\nclass TransactionLimitExceededException extends DomainException {\n  readonly code = 'TRANSACTION_LIMIT_EXCEEDED'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly limitType: 'DAILY' | 'MONTHLY' | 'SINGLE' | 'WITHDRAWAL',\n    public readonly requestedAmount: Money,\n    public readonly limitAmount: Money,\n    public readonly userId: UserId\n  ) {\n    super(\n      `${limitType.toLowerCase()} transaction limit exceeded. ` +\n      `Requested: ${requestedAmount.toString()}, ` +\n      `Limit: ${limitAmount.toString()}`\n    )\n  }\n}\n\n/**\n * KYC-related exceptions\n */\nclass KycRequiredException extends DomainException {\n  readonly code = 'KYC_REQUIRED'\n  readonly category = 'AUTHORIZATION' as const\n\n  constructor(\n    public readonly userId: UserId,\n    public readonly currentKycStatus: KycStatus,\n    public readonly requiredAction: string\n  ) {\n    super(\n      `KYC verification required. Current status: ${currentKycStatus}. ` +\n      `Required action: ${requiredAction}`\n    )\n  }\n}\n\nclass InvalidKycStatusTransitionException extends DomainException {\n  readonly code = 'INVALID_KYC_STATUS_TRANSITION'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly currentStatus: KycStatus,\n    public readonly targetStatus: KycStatus,\n    public readonly userId: UserId\n  ) {\n    super(`Cannot transition KYC status from ${currentStatus} to ${targetStatus}`)\n  }\n}\n\n/**\n * Transaction state exceptions\n */\nclass InvalidTransactionStateException extends DomainException {\n  readonly code = 'INVALID_TRANSACTION_STATE'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly transactionId: TransactionId,\n    public readonly currentState: TransactionStatus,\n    public readonly targetState: TransactionStatus\n  ) {\n    super(`Cannot transition transaction from ${currentState} to ${targetState}`)\n  }\n}\n\nclass TransactionAlreadyProcessedException extends DomainException {\n  readonly code = 'TRANSACTION_ALREADY_PROCESSED'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly transactionId: TransactionId,\n    public readonly currentStatus: TransactionStatus\n  ) {\n    super(`Transaction ${transactionId.toString()} is already processed with status: ${currentStatus}`)\n  }\n}\n\n/**\n * Currency and exchange rate exceptions\n */\nclass UnsupportedCurrencyException extends DomainException {\n  readonly code = 'UNSUPPORTED_CURRENCY'\n  readonly category = 'VALIDATION' as const\n\n  constructor(public readonly currencyCode: string) {\n    super(`Currency ${currencyCode} is not supported`)\n  }\n}\n\nclass UnsupportedCurrencyPairException extends DomainException {\n  readonly code = 'UNSUPPORTED_CURRENCY_PAIR'\n  readonly category = 'VALIDATION' as const\n\n  constructor(\n    public readonly fromCurrency: Currency,\n    public readonly toCurrency: Currency\n  ) {\n    super(`Currency pair ${fromCurrency.code}/${toCurrency.code} is not supported`)\n  }\n}\n\nclass StaleExchangeRateException extends DomainException {\n  readonly code = 'STALE_EXCHANGE_RATE'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly fromCurrency: Currency,\n    public readonly toCurrency: Currency,\n    public readonly rateAge: number\n  ) {\n    super(\n      `Exchange rate for ${fromCurrency.code}/${toCurrency.code} is stale. ` +\n      `Age: ${rateAge} minutes`\n    )\n  }\n}\n\n/**\n * User and account exceptions\n */\nclass UserNotFoundException extends DomainException {\n  readonly code = 'USER_NOT_FOUND'\n  readonly category = 'NOT_FOUND' as const\n\n  constructor(public readonly userId: UserId) {\n    super(`User not found: ${userId.toString()}`)\n  }\n}\n\nclass UserNotActiveException extends DomainException {\n  readonly code = 'USER_NOT_ACTIVE'\n  readonly category = 'AUTHORIZATION' as const\n\n  constructor(public readonly userId: UserId) {\n    super(`User account is not active: ${userId.toString()}`)\n  }\n}\n\nclass WalletNotFoundException extends DomainException {\n  readonly code = 'WALLET_NOT_FOUND'\n  readonly category = 'NOT_FOUND' as const\n\n  constructor(\n    public readonly userId: UserId,\n    public readonly currency: Currency\n  ) {\n    super(`Wallet not found for user ${userId.toString()} and currency ${currency.code}`)\n  }\n}\n\n/**\n * Validation exceptions\n */\nclass InvalidAmountException extends DomainException {\n  readonly code = 'INVALID_AMOUNT'\n  readonly category = 'VALIDATION' as const\n\n  constructor(\n    public readonly amount: number,\n    public readonly reason: string\n  ) {\n    super(`Invalid amount ${amount}: ${reason}`)\n  }\n}\n\nclass InvalidRecipientException extends DomainException {\n  readonly code = 'INVALID_RECIPIENT'\n  readonly category = 'VALIDATION' as const\n\n  constructor(\n    public readonly recipientId: UserId,\n    public readonly reason: string\n  ) {\n    super(`Invalid recipient ${recipientId.toString()}: ${reason}`)\n  }\n}\n\nclass SelfTransactionException extends DomainException {\n  readonly code = 'SELF_TRANSACTION'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(public readonly userId: UserId) {\n    super(`Cannot send money to yourself: ${userId.toString()}`)\n  }\n}\n\n/**\n * Business rule exceptions\n */\nclass MinimumTransactionAmountException extends DomainException {\n  readonly code = 'MINIMUM_TRANSACTION_AMOUNT'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly requestedAmount: Money,\n    public readonly minimumAmount: Money,\n    public readonly transactionType: TransactionType\n  ) {\n    super(\n      `Transaction amount below minimum for ${transactionType}. ` +\n      `Requested: ${requestedAmount.toString()}, ` +\n      `Minimum: ${minimumAmount.toString()}`\n    )\n  }\n}\n\nclass MaximumTransactionAmountException extends DomainException {\n  readonly code = 'MAXIMUM_TRANSACTION_AMOUNT'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly requestedAmount: Money,\n    public readonly maximumAmount: Money,\n    public readonly transactionType: TransactionType\n  ) {\n    super(\n      `Transaction amount exceeds maximum for ${transactionType}. ` +\n      `Requested: ${requestedAmount.toString()}, ` +\n      `Maximum: ${maximumAmount.toString()}`\n    )\n  }\n}\n\n/**\n * External service exceptions\n */\nclass ExchangeRateUnavailableException extends DomainException {\n  readonly code = 'EXCHANGE_RATE_UNAVAILABLE'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly fromCurrency: Currency,\n    public readonly toCurrency: Currency,\n    public readonly provider: string\n  ) {\n    super(\n      `Exchange rate unavailable from ${provider} for ` +\n      `${fromCurrency.code}/${toCurrency.code}`\n    )\n  }\n}\n\nclass PaymentProcessingException extends DomainException {\n  readonly code = 'PAYMENT_PROCESSING_ERROR'\n  readonly category = 'BUSINESS_RULE' as const\n\n  constructor(\n    public readonly transactionId: TransactionId,\n    public readonly provider: string,\n    public readonly reason: string\n  ) {\n    super(\n      `Payment processing failed for transaction ${transactionId.toString()} ` +\n      `via ${provider}: ${reason}`\n    )\n  }\n}\n\n// Export all exceptions for easy importing\nexport {\n  DomainException,\n  InsufficientBalanceException,\n  InsufficientReservedBalanceException,\n  TransactionLimitExceededException,\n  KycRequiredException,\n  InvalidKycStatusTransitionException,\n  InvalidTransactionStateException,\n  TransactionAlreadyProcessedException,\n  UnsupportedCurrencyException,\n  UnsupportedCurrencyPairException,\n  StaleExchangeRateException,\n  UserNotFoundException,\n  UserNotActiveException,\n  WalletNotFoundException,\n  InvalidAmountException,\n  InvalidRecipientException,\n  SelfTransactionException,\n  MinimumTransactionAmountException,\n  MaximumTransactionAmountException,\n  ExchangeRateUnavailableException,\n  PaymentProcessingException\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bea74f6f313a5e6babd9e7f46920c96c5ce1d1ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2najkiesto = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2najkiesto();
/**
 * Domain Exceptions
 *
 * Custom exceptions for domain business rule violations.
 * These exceptions represent business logic errors, not technical errors.
 */
/**
 * Base class for all domain exceptions
 */
class DomainException extends Error {
  constructor(message) {
    /* istanbul ignore next */
    cov_2najkiesto().f[0]++;
    cov_2najkiesto().s[0]++;
    super(message);
    /* istanbul ignore next */
    cov_2najkiesto().s[1]++;
    this.name = this.constructor.name;
  }
}
/**
 * Insufficient balance exceptions
 */
class InsufficientBalanceException extends DomainException {
  constructor(currency, requestedAmount, availableAmount, walletId) {
    /* istanbul ignore next */
    cov_2najkiesto().f[1]++;
    cov_2najkiesto().s[2]++;
    super(`Insufficient ${currency.code} balance. ` + `Requested: ${requestedAmount.toString()}, ` + `Available: ${availableAmount.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[3]++;
    this.currency = currency;
    /* istanbul ignore next */
    cov_2najkiesto().s[4]++;
    this.requestedAmount = requestedAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[5]++;
    this.availableAmount = availableAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[6]++;
    this.walletId = walletId;
    /* istanbul ignore next */
    cov_2najkiesto().s[7]++;
    this.code = 'INSUFFICIENT_BALANCE';
    /* istanbul ignore next */
    cov_2najkiesto().s[8]++;
    this.category = 'BUSINESS_RULE';
  }
}
class InsufficientReservedBalanceException extends DomainException {
  constructor(currency, requestedAmount, reservedAmount, walletId) {
    /* istanbul ignore next */
    cov_2najkiesto().f[2]++;
    cov_2najkiesto().s[9]++;
    super(`Insufficient ${currency.code} reserved balance. ` + `Requested: ${requestedAmount.toString()}, ` + `Reserved: ${reservedAmount.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[10]++;
    this.currency = currency;
    /* istanbul ignore next */
    cov_2najkiesto().s[11]++;
    this.requestedAmount = requestedAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[12]++;
    this.reservedAmount = reservedAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[13]++;
    this.walletId = walletId;
    /* istanbul ignore next */
    cov_2najkiesto().s[14]++;
    this.code = 'INSUFFICIENT_RESERVED_BALANCE';
    /* istanbul ignore next */
    cov_2najkiesto().s[15]++;
    this.category = 'BUSINESS_RULE';
  }
}
/**
 * Transaction limit exceptions
 */
class TransactionLimitExceededException extends DomainException {
  constructor(limitType, requestedAmount, limitAmount, userId) {
    /* istanbul ignore next */
    cov_2najkiesto().f[3]++;
    cov_2najkiesto().s[16]++;
    super(`${limitType.toLowerCase()} transaction limit exceeded. ` + `Requested: ${requestedAmount.toString()}, ` + `Limit: ${limitAmount.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[17]++;
    this.limitType = limitType;
    /* istanbul ignore next */
    cov_2najkiesto().s[18]++;
    this.requestedAmount = requestedAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[19]++;
    this.limitAmount = limitAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[20]++;
    this.userId = userId;
    /* istanbul ignore next */
    cov_2najkiesto().s[21]++;
    this.code = 'TRANSACTION_LIMIT_EXCEEDED';
    /* istanbul ignore next */
    cov_2najkiesto().s[22]++;
    this.category = 'BUSINESS_RULE';
  }
}
/**
 * KYC-related exceptions
 */
class KycRequiredException extends DomainException {
  constructor(userId, currentKycStatus, requiredAction) {
    /* istanbul ignore next */
    cov_2najkiesto().f[4]++;
    cov_2najkiesto().s[23]++;
    super(`KYC verification required. Current status: ${currentKycStatus}. ` + `Required action: ${requiredAction}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[24]++;
    this.userId = userId;
    /* istanbul ignore next */
    cov_2najkiesto().s[25]++;
    this.currentKycStatus = currentKycStatus;
    /* istanbul ignore next */
    cov_2najkiesto().s[26]++;
    this.requiredAction = requiredAction;
    /* istanbul ignore next */
    cov_2najkiesto().s[27]++;
    this.code = 'KYC_REQUIRED';
    /* istanbul ignore next */
    cov_2najkiesto().s[28]++;
    this.category = 'AUTHORIZATION';
  }
}
class InvalidKycStatusTransitionException extends DomainException {
  constructor(currentStatus, targetStatus, userId) {
    /* istanbul ignore next */
    cov_2najkiesto().f[5]++;
    cov_2najkiesto().s[29]++;
    super(`Cannot transition KYC status from ${currentStatus} to ${targetStatus}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[30]++;
    this.currentStatus = currentStatus;
    /* istanbul ignore next */
    cov_2najkiesto().s[31]++;
    this.targetStatus = targetStatus;
    /* istanbul ignore next */
    cov_2najkiesto().s[32]++;
    this.userId = userId;
    /* istanbul ignore next */
    cov_2najkiesto().s[33]++;
    this.code = 'INVALID_KYC_STATUS_TRANSITION';
    /* istanbul ignore next */
    cov_2najkiesto().s[34]++;
    this.category = 'BUSINESS_RULE';
  }
}
/**
 * Transaction state exceptions
 */
class InvalidTransactionStateException extends DomainException {
  constructor(transactionId, currentState, targetState) {
    /* istanbul ignore next */
    cov_2najkiesto().f[6]++;
    cov_2najkiesto().s[35]++;
    super(`Cannot transition transaction from ${currentState} to ${targetState}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[36]++;
    this.transactionId = transactionId;
    /* istanbul ignore next */
    cov_2najkiesto().s[37]++;
    this.currentState = currentState;
    /* istanbul ignore next */
    cov_2najkiesto().s[38]++;
    this.targetState = targetState;
    /* istanbul ignore next */
    cov_2najkiesto().s[39]++;
    this.code = 'INVALID_TRANSACTION_STATE';
    /* istanbul ignore next */
    cov_2najkiesto().s[40]++;
    this.category = 'BUSINESS_RULE';
  }
}
class TransactionAlreadyProcessedException extends DomainException {
  constructor(transactionId, currentStatus) {
    /* istanbul ignore next */
    cov_2najkiesto().f[7]++;
    cov_2najkiesto().s[41]++;
    super(`Transaction ${transactionId.toString()} is already processed with status: ${currentStatus}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[42]++;
    this.transactionId = transactionId;
    /* istanbul ignore next */
    cov_2najkiesto().s[43]++;
    this.currentStatus = currentStatus;
    /* istanbul ignore next */
    cov_2najkiesto().s[44]++;
    this.code = 'TRANSACTION_ALREADY_PROCESSED';
    /* istanbul ignore next */
    cov_2najkiesto().s[45]++;
    this.category = 'BUSINESS_RULE';
  }
}
/**
 * Currency and exchange rate exceptions
 */
class UnsupportedCurrencyException extends DomainException {
  constructor(currencyCode) {
    /* istanbul ignore next */
    cov_2najkiesto().f[8]++;
    cov_2najkiesto().s[46]++;
    super(`Currency ${currencyCode} is not supported`);
    /* istanbul ignore next */
    cov_2najkiesto().s[47]++;
    this.currencyCode = currencyCode;
    /* istanbul ignore next */
    cov_2najkiesto().s[48]++;
    this.code = 'UNSUPPORTED_CURRENCY';
    /* istanbul ignore next */
    cov_2najkiesto().s[49]++;
    this.category = 'VALIDATION';
  }
}
class UnsupportedCurrencyPairException extends DomainException {
  constructor(fromCurrency, toCurrency) {
    /* istanbul ignore next */
    cov_2najkiesto().f[9]++;
    cov_2najkiesto().s[50]++;
    super(`Currency pair ${fromCurrency.code}/${toCurrency.code} is not supported`);
    /* istanbul ignore next */
    cov_2najkiesto().s[51]++;
    this.fromCurrency = fromCurrency;
    /* istanbul ignore next */
    cov_2najkiesto().s[52]++;
    this.toCurrency = toCurrency;
    /* istanbul ignore next */
    cov_2najkiesto().s[53]++;
    this.code = 'UNSUPPORTED_CURRENCY_PAIR';
    /* istanbul ignore next */
    cov_2najkiesto().s[54]++;
    this.category = 'VALIDATION';
  }
}
class StaleExchangeRateException extends DomainException {
  constructor(fromCurrency, toCurrency, rateAge) {
    /* istanbul ignore next */
    cov_2najkiesto().f[10]++;
    cov_2najkiesto().s[55]++;
    super(`Exchange rate for ${fromCurrency.code}/${toCurrency.code} is stale. ` + `Age: ${rateAge} minutes`);
    /* istanbul ignore next */
    cov_2najkiesto().s[56]++;
    this.fromCurrency = fromCurrency;
    /* istanbul ignore next */
    cov_2najkiesto().s[57]++;
    this.toCurrency = toCurrency;
    /* istanbul ignore next */
    cov_2najkiesto().s[58]++;
    this.rateAge = rateAge;
    /* istanbul ignore next */
    cov_2najkiesto().s[59]++;
    this.code = 'STALE_EXCHANGE_RATE';
    /* istanbul ignore next */
    cov_2najkiesto().s[60]++;
    this.category = 'BUSINESS_RULE';
  }
}
/**
 * User and account exceptions
 */
class UserNotFoundException extends DomainException {
  constructor(userId) {
    /* istanbul ignore next */
    cov_2najkiesto().f[11]++;
    cov_2najkiesto().s[61]++;
    super(`User not found: ${userId.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[62]++;
    this.userId = userId;
    /* istanbul ignore next */
    cov_2najkiesto().s[63]++;
    this.code = 'USER_NOT_FOUND';
    /* istanbul ignore next */
    cov_2najkiesto().s[64]++;
    this.category = 'NOT_FOUND';
  }
}
class UserNotActiveException extends DomainException {
  constructor(userId) {
    /* istanbul ignore next */
    cov_2najkiesto().f[12]++;
    cov_2najkiesto().s[65]++;
    super(`User account is not active: ${userId.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[66]++;
    this.userId = userId;
    /* istanbul ignore next */
    cov_2najkiesto().s[67]++;
    this.code = 'USER_NOT_ACTIVE';
    /* istanbul ignore next */
    cov_2najkiesto().s[68]++;
    this.category = 'AUTHORIZATION';
  }
}
class WalletNotFoundException extends DomainException {
  constructor(userId, currency) {
    /* istanbul ignore next */
    cov_2najkiesto().f[13]++;
    cov_2najkiesto().s[69]++;
    super(`Wallet not found for user ${userId.toString()} and currency ${currency.code}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[70]++;
    this.userId = userId;
    /* istanbul ignore next */
    cov_2najkiesto().s[71]++;
    this.currency = currency;
    /* istanbul ignore next */
    cov_2najkiesto().s[72]++;
    this.code = 'WALLET_NOT_FOUND';
    /* istanbul ignore next */
    cov_2najkiesto().s[73]++;
    this.category = 'NOT_FOUND';
  }
}
/**
 * Validation exceptions
 */
class InvalidAmountException extends DomainException {
  constructor(amount, reason) {
    /* istanbul ignore next */
    cov_2najkiesto().f[14]++;
    cov_2najkiesto().s[74]++;
    super(`Invalid amount ${amount}: ${reason}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[75]++;
    this.amount = amount;
    /* istanbul ignore next */
    cov_2najkiesto().s[76]++;
    this.reason = reason;
    /* istanbul ignore next */
    cov_2najkiesto().s[77]++;
    this.code = 'INVALID_AMOUNT';
    /* istanbul ignore next */
    cov_2najkiesto().s[78]++;
    this.category = 'VALIDATION';
  }
}
class InvalidRecipientException extends DomainException {
  constructor(recipientId, reason) {
    /* istanbul ignore next */
    cov_2najkiesto().f[15]++;
    cov_2najkiesto().s[79]++;
    super(`Invalid recipient ${recipientId.toString()}: ${reason}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[80]++;
    this.recipientId = recipientId;
    /* istanbul ignore next */
    cov_2najkiesto().s[81]++;
    this.reason = reason;
    /* istanbul ignore next */
    cov_2najkiesto().s[82]++;
    this.code = 'INVALID_RECIPIENT';
    /* istanbul ignore next */
    cov_2najkiesto().s[83]++;
    this.category = 'VALIDATION';
  }
}
class SelfTransactionException extends DomainException {
  constructor(userId) {
    /* istanbul ignore next */
    cov_2najkiesto().f[16]++;
    cov_2najkiesto().s[84]++;
    super(`Cannot send money to yourself: ${userId.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[85]++;
    this.userId = userId;
    /* istanbul ignore next */
    cov_2najkiesto().s[86]++;
    this.code = 'SELF_TRANSACTION';
    /* istanbul ignore next */
    cov_2najkiesto().s[87]++;
    this.category = 'BUSINESS_RULE';
  }
}
/**
 * Business rule exceptions
 */
class MinimumTransactionAmountException extends DomainException {
  constructor(requestedAmount, minimumAmount, transactionType) {
    /* istanbul ignore next */
    cov_2najkiesto().f[17]++;
    cov_2najkiesto().s[88]++;
    super(`Transaction amount below minimum for ${transactionType}. ` + `Requested: ${requestedAmount.toString()}, ` + `Minimum: ${minimumAmount.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[89]++;
    this.requestedAmount = requestedAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[90]++;
    this.minimumAmount = minimumAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[91]++;
    this.transactionType = transactionType;
    /* istanbul ignore next */
    cov_2najkiesto().s[92]++;
    this.code = 'MINIMUM_TRANSACTION_AMOUNT';
    /* istanbul ignore next */
    cov_2najkiesto().s[93]++;
    this.category = 'BUSINESS_RULE';
  }
}
class MaximumTransactionAmountException extends DomainException {
  constructor(requestedAmount, maximumAmount, transactionType) {
    /* istanbul ignore next */
    cov_2najkiesto().f[18]++;
    cov_2najkiesto().s[94]++;
    super(`Transaction amount exceeds maximum for ${transactionType}. ` + `Requested: ${requestedAmount.toString()}, ` + `Maximum: ${maximumAmount.toString()}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[95]++;
    this.requestedAmount = requestedAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[96]++;
    this.maximumAmount = maximumAmount;
    /* istanbul ignore next */
    cov_2najkiesto().s[97]++;
    this.transactionType = transactionType;
    /* istanbul ignore next */
    cov_2najkiesto().s[98]++;
    this.code = 'MAXIMUM_TRANSACTION_AMOUNT';
    /* istanbul ignore next */
    cov_2najkiesto().s[99]++;
    this.category = 'BUSINESS_RULE';
  }
}
/**
 * External service exceptions
 */
class ExchangeRateUnavailableException extends DomainException {
  constructor(fromCurrency, toCurrency, provider) {
    /* istanbul ignore next */
    cov_2najkiesto().f[19]++;
    cov_2najkiesto().s[100]++;
    super(`Exchange rate unavailable from ${provider} for ` + `${fromCurrency.code}/${toCurrency.code}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[101]++;
    this.fromCurrency = fromCurrency;
    /* istanbul ignore next */
    cov_2najkiesto().s[102]++;
    this.toCurrency = toCurrency;
    /* istanbul ignore next */
    cov_2najkiesto().s[103]++;
    this.provider = provider;
    /* istanbul ignore next */
    cov_2najkiesto().s[104]++;
    this.code = 'EXCHANGE_RATE_UNAVAILABLE';
    /* istanbul ignore next */
    cov_2najkiesto().s[105]++;
    this.category = 'BUSINESS_RULE';
  }
}
class PaymentProcessingException extends DomainException {
  constructor(transactionId, provider, reason) {
    /* istanbul ignore next */
    cov_2najkiesto().f[20]++;
    cov_2najkiesto().s[106]++;
    super(`Payment processing failed for transaction ${transactionId.toString()} ` + `via ${provider}: ${reason}`);
    /* istanbul ignore next */
    cov_2najkiesto().s[107]++;
    this.transactionId = transactionId;
    /* istanbul ignore next */
    cov_2najkiesto().s[108]++;
    this.provider = provider;
    /* istanbul ignore next */
    cov_2najkiesto().s[109]++;
    this.reason = reason;
    /* istanbul ignore next */
    cov_2najkiesto().s[110]++;
    this.code = 'PAYMENT_PROCESSING_ERROR';
    /* istanbul ignore next */
    cov_2najkiesto().s[111]++;
    this.category = 'BUSINESS_RULE';
  }
}
// Export all exceptions for easy importing
export { DomainException, InsufficientBalanceException, InsufficientReservedBalanceException, TransactionLimitExceededException, KycRequiredException, InvalidKycStatusTransitionException, InvalidTransactionStateException, TransactionAlreadyProcessedException, UnsupportedCurrencyException, UnsupportedCurrencyPairException, StaleExchangeRateException, UserNotFoundException, UserNotActiveException, WalletNotFoundException, InvalidAmountException, InvalidRecipientException, SelfTransactionException, MinimumTransactionAmountException, MaximumTransactionAmountException, ExchangeRateUnavailableException, PaymentProcessingException };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm5hamtpZXN0byIsImFjdHVhbENvdmVyYWdlIiwiRG9tYWluRXhjZXB0aW9uIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJmIiwicyIsIm5hbWUiLCJJbnN1ZmZpY2llbnRCYWxhbmNlRXhjZXB0aW9uIiwiY3VycmVuY3kiLCJyZXF1ZXN0ZWRBbW91bnQiLCJhdmFpbGFibGVBbW91bnQiLCJ3YWxsZXRJZCIsImNvZGUiLCJ0b1N0cmluZyIsImNhdGVnb3J5IiwiSW5zdWZmaWNpZW50UmVzZXJ2ZWRCYWxhbmNlRXhjZXB0aW9uIiwicmVzZXJ2ZWRBbW91bnQiLCJUcmFuc2FjdGlvbkxpbWl0RXhjZWVkZWRFeGNlcHRpb24iLCJsaW1pdFR5cGUiLCJsaW1pdEFtb3VudCIsInVzZXJJZCIsInRvTG93ZXJDYXNlIiwiS3ljUmVxdWlyZWRFeGNlcHRpb24iLCJjdXJyZW50S3ljU3RhdHVzIiwicmVxdWlyZWRBY3Rpb24iLCJJbnZhbGlkS3ljU3RhdHVzVHJhbnNpdGlvbkV4Y2VwdGlvbiIsImN1cnJlbnRTdGF0dXMiLCJ0YXJnZXRTdGF0dXMiLCJJbnZhbGlkVHJhbnNhY3Rpb25TdGF0ZUV4Y2VwdGlvbiIsInRyYW5zYWN0aW9uSWQiLCJjdXJyZW50U3RhdGUiLCJ0YXJnZXRTdGF0ZSIsIlRyYW5zYWN0aW9uQWxyZWFkeVByb2Nlc3NlZEV4Y2VwdGlvbiIsIlVuc3VwcG9ydGVkQ3VycmVuY3lFeGNlcHRpb24iLCJjdXJyZW5jeUNvZGUiLCJVbnN1cHBvcnRlZEN1cnJlbmN5UGFpckV4Y2VwdGlvbiIsImZyb21DdXJyZW5jeSIsInRvQ3VycmVuY3kiLCJTdGFsZUV4Y2hhbmdlUmF0ZUV4Y2VwdGlvbiIsInJhdGVBZ2UiLCJVc2VyTm90Rm91bmRFeGNlcHRpb24iLCJVc2VyTm90QWN0aXZlRXhjZXB0aW9uIiwiV2FsbGV0Tm90Rm91bmRFeGNlcHRpb24iLCJJbnZhbGlkQW1vdW50RXhjZXB0aW9uIiwiYW1vdW50IiwicmVhc29uIiwiSW52YWxpZFJlY2lwaWVudEV4Y2VwdGlvbiIsInJlY2lwaWVudElkIiwiU2VsZlRyYW5zYWN0aW9uRXhjZXB0aW9uIiwiTWluaW11bVRyYW5zYWN0aW9uQW1vdW50RXhjZXB0aW9uIiwibWluaW11bUFtb3VudCIsInRyYW5zYWN0aW9uVHlwZSIsIk1heGltdW1UcmFuc2FjdGlvbkFtb3VudEV4Y2VwdGlvbiIsIm1heGltdW1BbW91bnQiLCJFeGNoYW5nZVJhdGVVbmF2YWlsYWJsZUV4Y2VwdGlvbiIsInByb3ZpZGVyIiwiUGF5bWVudFByb2Nlc3NpbmdFeGNlcHRpb24iXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVzZXJcXERvY3VtZW50c1xcR2l0SHViXFxlbWFcXHNyY1xcZG9tYWluXFxleGNlcHRpb25zXFxEb21haW5FeGNlcHRpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRG9tYWluIEV4Y2VwdGlvbnNcbiAqIFxuICogQ3VzdG9tIGV4Y2VwdGlvbnMgZm9yIGRvbWFpbiBidXNpbmVzcyBydWxlIHZpb2xhdGlvbnMuXG4gKiBUaGVzZSBleGNlcHRpb25zIHJlcHJlc2VudCBidXNpbmVzcyBsb2dpYyBlcnJvcnMsIG5vdCB0ZWNobmljYWwgZXJyb3JzLlxuICovXG5cbmltcG9ydCB7IEN1cnJlbmN5IH0gZnJvbSAnLi4vdmFsdWUtb2JqZWN0cy9DdXJyZW5jeSdcbmltcG9ydCB7IE1vbmV5IH0gZnJvbSAnLi4vdmFsdWUtb2JqZWN0cy9Nb25leSdcbmltcG9ydCB7IFVzZXJJZCwgVHJhbnNhY3Rpb25JZCwgV2FsbGV0SWQgfSBmcm9tICcuLi92YWx1ZS1vYmplY3RzL0VudGl0eUlkJ1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25TdGF0dXMsIFRyYW5zYWN0aW9uVHlwZSB9IGZyb20gJy4uL2VudGl0aWVzL1RyYW5zYWN0aW9uJ1xuaW1wb3J0IHsgS3ljU3RhdHVzIH0gZnJvbSAnLi4vZW50aXRpZXMvVXNlcidcblxuLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBhbGwgZG9tYWluIGV4Y2VwdGlvbnNcbiAqL1xuYWJzdHJhY3QgY2xhc3MgRG9tYWluRXhjZXB0aW9uIGV4dGVuZHMgRXJyb3Ige1xuICBhYnN0cmFjdCByZWFkb25seSBjb2RlOiBzdHJpbmdcbiAgYWJzdHJhY3QgcmVhZG9ubHkgY2F0ZWdvcnk6ICdCVVNJTkVTU19SVUxFJyB8ICdWQUxJREFUSU9OJyB8ICdBVVRIT1JJWkFUSU9OJyB8ICdOT1RfRk9VTkQnXG5cbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nKSB7XG4gICAgc3VwZXIobWVzc2FnZSlcbiAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWVcbiAgfVxufVxuXG4vKipcbiAqIEluc3VmZmljaWVudCBiYWxhbmNlIGV4Y2VwdGlvbnNcbiAqL1xuY2xhc3MgSW5zdWZmaWNpZW50QmFsYW5jZUV4Y2VwdGlvbiBleHRlbmRzIERvbWFpbkV4Y2VwdGlvbiB7XG4gIHJlYWRvbmx5IGNvZGUgPSAnSU5TVUZGSUNJRU5UX0JBTEFOQ0UnXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ0JVU0lORVNTX1JVTEUnIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWRvbmx5IGN1cnJlbmN5OiBDdXJyZW5jeSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgcmVxdWVzdGVkQW1vdW50OiBNb25leSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgYXZhaWxhYmxlQW1vdW50OiBNb25leSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgd2FsbGV0SWQ/OiBXYWxsZXRJZFxuICApIHtcbiAgICBzdXBlcihcbiAgICAgIGBJbnN1ZmZpY2llbnQgJHtjdXJyZW5jeS5jb2RlfSBiYWxhbmNlLiBgICtcbiAgICAgIGBSZXF1ZXN0ZWQ6ICR7cmVxdWVzdGVkQW1vdW50LnRvU3RyaW5nKCl9LCBgICtcbiAgICAgIGBBdmFpbGFibGU6ICR7YXZhaWxhYmxlQW1vdW50LnRvU3RyaW5nKCl9YFxuICAgIClcbiAgfVxufVxuXG5jbGFzcyBJbnN1ZmZpY2llbnRSZXNlcnZlZEJhbGFuY2VFeGNlcHRpb24gZXh0ZW5kcyBEb21haW5FeGNlcHRpb24ge1xuICByZWFkb25seSBjb2RlID0gJ0lOU1VGRklDSUVOVF9SRVNFUlZFRF9CQUxBTkNFJ1xuICByZWFkb25seSBjYXRlZ29yeSA9ICdCVVNJTkVTU19SVUxFJyBhcyBjb25zdFxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZWFkb25seSBjdXJyZW5jeTogQ3VycmVuY3ksXG4gICAgcHVibGljIHJlYWRvbmx5IHJlcXVlc3RlZEFtb3VudDogTW9uZXksXG4gICAgcHVibGljIHJlYWRvbmx5IHJlc2VydmVkQW1vdW50OiBNb25leSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgd2FsbGV0SWQ/OiBXYWxsZXRJZFxuICApIHtcbiAgICBzdXBlcihcbiAgICAgIGBJbnN1ZmZpY2llbnQgJHtjdXJyZW5jeS5jb2RlfSByZXNlcnZlZCBiYWxhbmNlLiBgICtcbiAgICAgIGBSZXF1ZXN0ZWQ6ICR7cmVxdWVzdGVkQW1vdW50LnRvU3RyaW5nKCl9LCBgICtcbiAgICAgIGBSZXNlcnZlZDogJHtyZXNlcnZlZEFtb3VudC50b1N0cmluZygpfWBcbiAgICApXG4gIH1cbn1cblxuLyoqXG4gKiBUcmFuc2FjdGlvbiBsaW1pdCBleGNlcHRpb25zXG4gKi9cbmNsYXNzIFRyYW5zYWN0aW9uTGltaXRFeGNlZWRlZEV4Y2VwdGlvbiBleHRlbmRzIERvbWFpbkV4Y2VwdGlvbiB7XG4gIHJlYWRvbmx5IGNvZGUgPSAnVFJBTlNBQ1RJT05fTElNSVRfRVhDRUVERUQnXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ0JVU0lORVNTX1JVTEUnIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWRvbmx5IGxpbWl0VHlwZTogJ0RBSUxZJyB8ICdNT05USExZJyB8ICdTSU5HTEUnIHwgJ1dJVEhEUkFXQUwnLFxuICAgIHB1YmxpYyByZWFkb25seSByZXF1ZXN0ZWRBbW91bnQ6IE1vbmV5LFxuICAgIHB1YmxpYyByZWFkb25seSBsaW1pdEFtb3VudDogTW9uZXksXG4gICAgcHVibGljIHJlYWRvbmx5IHVzZXJJZDogVXNlcklkXG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgYCR7bGltaXRUeXBlLnRvTG93ZXJDYXNlKCl9IHRyYW5zYWN0aW9uIGxpbWl0IGV4Y2VlZGVkLiBgICtcbiAgICAgIGBSZXF1ZXN0ZWQ6ICR7cmVxdWVzdGVkQW1vdW50LnRvU3RyaW5nKCl9LCBgICtcbiAgICAgIGBMaW1pdDogJHtsaW1pdEFtb3VudC50b1N0cmluZygpfWBcbiAgICApXG4gIH1cbn1cblxuLyoqXG4gKiBLWUMtcmVsYXRlZCBleGNlcHRpb25zXG4gKi9cbmNsYXNzIEt5Y1JlcXVpcmVkRXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdLWUNfUkVRVUlSRUQnXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ0FVVEhPUklaQVRJT04nIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWRvbmx5IHVzZXJJZDogVXNlcklkLFxuICAgIHB1YmxpYyByZWFkb25seSBjdXJyZW50S3ljU3RhdHVzOiBLeWNTdGF0dXMsXG4gICAgcHVibGljIHJlYWRvbmx5IHJlcXVpcmVkQWN0aW9uOiBzdHJpbmdcbiAgKSB7XG4gICAgc3VwZXIoXG4gICAgICBgS1lDIHZlcmlmaWNhdGlvbiByZXF1aXJlZC4gQ3VycmVudCBzdGF0dXM6ICR7Y3VycmVudEt5Y1N0YXR1c30uIGAgK1xuICAgICAgYFJlcXVpcmVkIGFjdGlvbjogJHtyZXF1aXJlZEFjdGlvbn1gXG4gICAgKVxuICB9XG59XG5cbmNsYXNzIEludmFsaWRLeWNTdGF0dXNUcmFuc2l0aW9uRXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdJTlZBTElEX0tZQ19TVEFUVVNfVFJBTlNJVElPTidcbiAgcmVhZG9ubHkgY2F0ZWdvcnkgPSAnQlVTSU5FU1NfUlVMRScgYXMgY29uc3RcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcmVhZG9ubHkgY3VycmVudFN0YXR1czogS3ljU3RhdHVzLFxuICAgIHB1YmxpYyByZWFkb25seSB0YXJnZXRTdGF0dXM6IEt5Y1N0YXR1cyxcbiAgICBwdWJsaWMgcmVhZG9ubHkgdXNlcklkOiBVc2VySWRcbiAgKSB7XG4gICAgc3VwZXIoYENhbm5vdCB0cmFuc2l0aW9uIEtZQyBzdGF0dXMgZnJvbSAke2N1cnJlbnRTdGF0dXN9IHRvICR7dGFyZ2V0U3RhdHVzfWApXG4gIH1cbn1cblxuLyoqXG4gKiBUcmFuc2FjdGlvbiBzdGF0ZSBleGNlcHRpb25zXG4gKi9cbmNsYXNzIEludmFsaWRUcmFuc2FjdGlvblN0YXRlRXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdJTlZBTElEX1RSQU5TQUNUSU9OX1NUQVRFJ1xuICByZWFkb25seSBjYXRlZ29yeSA9ICdCVVNJTkVTU19SVUxFJyBhcyBjb25zdFxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZWFkb25seSB0cmFuc2FjdGlvbklkOiBUcmFuc2FjdGlvbklkLFxuICAgIHB1YmxpYyByZWFkb25seSBjdXJyZW50U3RhdGU6IFRyYW5zYWN0aW9uU3RhdHVzLFxuICAgIHB1YmxpYyByZWFkb25seSB0YXJnZXRTdGF0ZTogVHJhbnNhY3Rpb25TdGF0dXNcbiAgKSB7XG4gICAgc3VwZXIoYENhbm5vdCB0cmFuc2l0aW9uIHRyYW5zYWN0aW9uIGZyb20gJHtjdXJyZW50U3RhdGV9IHRvICR7dGFyZ2V0U3RhdGV9YClcbiAgfVxufVxuXG5jbGFzcyBUcmFuc2FjdGlvbkFscmVhZHlQcm9jZXNzZWRFeGNlcHRpb24gZXh0ZW5kcyBEb21haW5FeGNlcHRpb24ge1xuICByZWFkb25seSBjb2RlID0gJ1RSQU5TQUNUSU9OX0FMUkVBRFlfUFJPQ0VTU0VEJ1xuICByZWFkb25seSBjYXRlZ29yeSA9ICdCVVNJTkVTU19SVUxFJyBhcyBjb25zdFxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZWFkb25seSB0cmFuc2FjdGlvbklkOiBUcmFuc2FjdGlvbklkLFxuICAgIHB1YmxpYyByZWFkb25seSBjdXJyZW50U3RhdHVzOiBUcmFuc2FjdGlvblN0YXR1c1xuICApIHtcbiAgICBzdXBlcihgVHJhbnNhY3Rpb24gJHt0cmFuc2FjdGlvbklkLnRvU3RyaW5nKCl9IGlzIGFscmVhZHkgcHJvY2Vzc2VkIHdpdGggc3RhdHVzOiAke2N1cnJlbnRTdGF0dXN9YClcbiAgfVxufVxuXG4vKipcbiAqIEN1cnJlbmN5IGFuZCBleGNoYW5nZSByYXRlIGV4Y2VwdGlvbnNcbiAqL1xuY2xhc3MgVW5zdXBwb3J0ZWRDdXJyZW5jeUV4Y2VwdGlvbiBleHRlbmRzIERvbWFpbkV4Y2VwdGlvbiB7XG4gIHJlYWRvbmx5IGNvZGUgPSAnVU5TVVBQT1JURURfQ1VSUkVOQ1knXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ1ZBTElEQVRJT04nIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IGN1cnJlbmN5Q29kZTogc3RyaW5nKSB7XG4gICAgc3VwZXIoYEN1cnJlbmN5ICR7Y3VycmVuY3lDb2RlfSBpcyBub3Qgc3VwcG9ydGVkYClcbiAgfVxufVxuXG5jbGFzcyBVbnN1cHBvcnRlZEN1cnJlbmN5UGFpckV4Y2VwdGlvbiBleHRlbmRzIERvbWFpbkV4Y2VwdGlvbiB7XG4gIHJlYWRvbmx5IGNvZGUgPSAnVU5TVVBQT1JURURfQ1VSUkVOQ1lfUEFJUidcbiAgcmVhZG9ubHkgY2F0ZWdvcnkgPSAnVkFMSURBVElPTicgYXMgY29uc3RcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcmVhZG9ubHkgZnJvbUN1cnJlbmN5OiBDdXJyZW5jeSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgdG9DdXJyZW5jeTogQ3VycmVuY3lcbiAgKSB7XG4gICAgc3VwZXIoYEN1cnJlbmN5IHBhaXIgJHtmcm9tQ3VycmVuY3kuY29kZX0vJHt0b0N1cnJlbmN5LmNvZGV9IGlzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG59XG5cbmNsYXNzIFN0YWxlRXhjaGFuZ2VSYXRlRXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdTVEFMRV9FWENIQU5HRV9SQVRFJ1xuICByZWFkb25seSBjYXRlZ29yeSA9ICdCVVNJTkVTU19SVUxFJyBhcyBjb25zdFxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZWFkb25seSBmcm9tQ3VycmVuY3k6IEN1cnJlbmN5LFxuICAgIHB1YmxpYyByZWFkb25seSB0b0N1cnJlbmN5OiBDdXJyZW5jeSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgcmF0ZUFnZTogbnVtYmVyXG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgYEV4Y2hhbmdlIHJhdGUgZm9yICR7ZnJvbUN1cnJlbmN5LmNvZGV9LyR7dG9DdXJyZW5jeS5jb2RlfSBpcyBzdGFsZS4gYCArXG4gICAgICBgQWdlOiAke3JhdGVBZ2V9IG1pbnV0ZXNgXG4gICAgKVxuICB9XG59XG5cbi8qKlxuICogVXNlciBhbmQgYWNjb3VudCBleGNlcHRpb25zXG4gKi9cbmNsYXNzIFVzZXJOb3RGb3VuZEV4Y2VwdGlvbiBleHRlbmRzIERvbWFpbkV4Y2VwdGlvbiB7XG4gIHJlYWRvbmx5IGNvZGUgPSAnVVNFUl9OT1RfRk9VTkQnXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ05PVF9GT1VORCcgYXMgY29uc3RcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgdXNlcklkOiBVc2VySWQpIHtcbiAgICBzdXBlcihgVXNlciBub3QgZm91bmQ6ICR7dXNlcklkLnRvU3RyaW5nKCl9YClcbiAgfVxufVxuXG5jbGFzcyBVc2VyTm90QWN0aXZlRXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdVU0VSX05PVF9BQ1RJVkUnXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ0FVVEhPUklaQVRJT04nIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IHVzZXJJZDogVXNlcklkKSB7XG4gICAgc3VwZXIoYFVzZXIgYWNjb3VudCBpcyBub3QgYWN0aXZlOiAke3VzZXJJZC50b1N0cmluZygpfWApXG4gIH1cbn1cblxuY2xhc3MgV2FsbGV0Tm90Rm91bmRFeGNlcHRpb24gZXh0ZW5kcyBEb21haW5FeGNlcHRpb24ge1xuICByZWFkb25seSBjb2RlID0gJ1dBTExFVF9OT1RfRk9VTkQnXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ05PVF9GT1VORCcgYXMgY29uc3RcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcmVhZG9ubHkgdXNlcklkOiBVc2VySWQsXG4gICAgcHVibGljIHJlYWRvbmx5IGN1cnJlbmN5OiBDdXJyZW5jeVxuICApIHtcbiAgICBzdXBlcihgV2FsbGV0IG5vdCBmb3VuZCBmb3IgdXNlciAke3VzZXJJZC50b1N0cmluZygpfSBhbmQgY3VycmVuY3kgJHtjdXJyZW5jeS5jb2RlfWApXG4gIH1cbn1cblxuLyoqXG4gKiBWYWxpZGF0aW9uIGV4Y2VwdGlvbnNcbiAqL1xuY2xhc3MgSW52YWxpZEFtb3VudEV4Y2VwdGlvbiBleHRlbmRzIERvbWFpbkV4Y2VwdGlvbiB7XG4gIHJlYWRvbmx5IGNvZGUgPSAnSU5WQUxJRF9BTU9VTlQnXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ1ZBTElEQVRJT04nIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWRvbmx5IGFtb3VudDogbnVtYmVyLFxuICAgIHB1YmxpYyByZWFkb25seSByZWFzb246IHN0cmluZ1xuICApIHtcbiAgICBzdXBlcihgSW52YWxpZCBhbW91bnQgJHthbW91bnR9OiAke3JlYXNvbn1gKVxuICB9XG59XG5cbmNsYXNzIEludmFsaWRSZWNpcGllbnRFeGNlcHRpb24gZXh0ZW5kcyBEb21haW5FeGNlcHRpb24ge1xuICByZWFkb25seSBjb2RlID0gJ0lOVkFMSURfUkVDSVBJRU5UJ1xuICByZWFkb25seSBjYXRlZ29yeSA9ICdWQUxJREFUSU9OJyBhcyBjb25zdFxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZWFkb25seSByZWNpcGllbnRJZDogVXNlcklkLFxuICAgIHB1YmxpYyByZWFkb25seSByZWFzb246IHN0cmluZ1xuICApIHtcbiAgICBzdXBlcihgSW52YWxpZCByZWNpcGllbnQgJHtyZWNpcGllbnRJZC50b1N0cmluZygpfTogJHtyZWFzb259YClcbiAgfVxufVxuXG5jbGFzcyBTZWxmVHJhbnNhY3Rpb25FeGNlcHRpb24gZXh0ZW5kcyBEb21haW5FeGNlcHRpb24ge1xuICByZWFkb25seSBjb2RlID0gJ1NFTEZfVFJBTlNBQ1RJT04nXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ0JVU0lORVNTX1JVTEUnIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IHVzZXJJZDogVXNlcklkKSB7XG4gICAgc3VwZXIoYENhbm5vdCBzZW5kIG1vbmV5IHRvIHlvdXJzZWxmOiAke3VzZXJJZC50b1N0cmluZygpfWApXG4gIH1cbn1cblxuLyoqXG4gKiBCdXNpbmVzcyBydWxlIGV4Y2VwdGlvbnNcbiAqL1xuY2xhc3MgTWluaW11bVRyYW5zYWN0aW9uQW1vdW50RXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdNSU5JTVVNX1RSQU5TQUNUSU9OX0FNT1VOVCdcbiAgcmVhZG9ubHkgY2F0ZWdvcnkgPSAnQlVTSU5FU1NfUlVMRScgYXMgY29uc3RcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcmVhZG9ubHkgcmVxdWVzdGVkQW1vdW50OiBNb25leSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgbWluaW11bUFtb3VudDogTW9uZXksXG4gICAgcHVibGljIHJlYWRvbmx5IHRyYW5zYWN0aW9uVHlwZTogVHJhbnNhY3Rpb25UeXBlXG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgYFRyYW5zYWN0aW9uIGFtb3VudCBiZWxvdyBtaW5pbXVtIGZvciAke3RyYW5zYWN0aW9uVHlwZX0uIGAgK1xuICAgICAgYFJlcXVlc3RlZDogJHtyZXF1ZXN0ZWRBbW91bnQudG9TdHJpbmcoKX0sIGAgK1xuICAgICAgYE1pbmltdW06ICR7bWluaW11bUFtb3VudC50b1N0cmluZygpfWBcbiAgICApXG4gIH1cbn1cblxuY2xhc3MgTWF4aW11bVRyYW5zYWN0aW9uQW1vdW50RXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdNQVhJTVVNX1RSQU5TQUNUSU9OX0FNT1VOVCdcbiAgcmVhZG9ubHkgY2F0ZWdvcnkgPSAnQlVTSU5FU1NfUlVMRScgYXMgY29uc3RcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcmVhZG9ubHkgcmVxdWVzdGVkQW1vdW50OiBNb25leSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgbWF4aW11bUFtb3VudDogTW9uZXksXG4gICAgcHVibGljIHJlYWRvbmx5IHRyYW5zYWN0aW9uVHlwZTogVHJhbnNhY3Rpb25UeXBlXG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgYFRyYW5zYWN0aW9uIGFtb3VudCBleGNlZWRzIG1heGltdW0gZm9yICR7dHJhbnNhY3Rpb25UeXBlfS4gYCArXG4gICAgICBgUmVxdWVzdGVkOiAke3JlcXVlc3RlZEFtb3VudC50b1N0cmluZygpfSwgYCArXG4gICAgICBgTWF4aW11bTogJHttYXhpbXVtQW1vdW50LnRvU3RyaW5nKCl9YFxuICAgIClcbiAgfVxufVxuXG4vKipcbiAqIEV4dGVybmFsIHNlcnZpY2UgZXhjZXB0aW9uc1xuICovXG5jbGFzcyBFeGNoYW5nZVJhdGVVbmF2YWlsYWJsZUV4Y2VwdGlvbiBleHRlbmRzIERvbWFpbkV4Y2VwdGlvbiB7XG4gIHJlYWRvbmx5IGNvZGUgPSAnRVhDSEFOR0VfUkFURV9VTkFWQUlMQUJMRSdcbiAgcmVhZG9ubHkgY2F0ZWdvcnkgPSAnQlVTSU5FU1NfUlVMRScgYXMgY29uc3RcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcmVhZG9ubHkgZnJvbUN1cnJlbmN5OiBDdXJyZW5jeSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgdG9DdXJyZW5jeTogQ3VycmVuY3ksXG4gICAgcHVibGljIHJlYWRvbmx5IHByb3ZpZGVyOiBzdHJpbmdcbiAgKSB7XG4gICAgc3VwZXIoXG4gICAgICBgRXhjaGFuZ2UgcmF0ZSB1bmF2YWlsYWJsZSBmcm9tICR7cHJvdmlkZXJ9IGZvciBgICtcbiAgICAgIGAke2Zyb21DdXJyZW5jeS5jb2RlfS8ke3RvQ3VycmVuY3kuY29kZX1gXG4gICAgKVxuICB9XG59XG5cbmNsYXNzIFBheW1lbnRQcm9jZXNzaW5nRXhjZXB0aW9uIGV4dGVuZHMgRG9tYWluRXhjZXB0aW9uIHtcbiAgcmVhZG9ubHkgY29kZSA9ICdQQVlNRU5UX1BST0NFU1NJTkdfRVJST1InXG4gIHJlYWRvbmx5IGNhdGVnb3J5ID0gJ0JVU0lORVNTX1JVTEUnIGFzIGNvbnN0XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWRvbmx5IHRyYW5zYWN0aW9uSWQ6IFRyYW5zYWN0aW9uSWQsXG4gICAgcHVibGljIHJlYWRvbmx5IHByb3ZpZGVyOiBzdHJpbmcsXG4gICAgcHVibGljIHJlYWRvbmx5IHJlYXNvbjogc3RyaW5nXG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgYFBheW1lbnQgcHJvY2Vzc2luZyBmYWlsZWQgZm9yIHRyYW5zYWN0aW9uICR7dHJhbnNhY3Rpb25JZC50b1N0cmluZygpfSBgICtcbiAgICAgIGB2aWEgJHtwcm92aWRlcn06ICR7cmVhc29ufWBcbiAgICApXG4gIH1cbn1cblxuLy8gRXhwb3J0IGFsbCBleGNlcHRpb25zIGZvciBlYXN5IGltcG9ydGluZ1xuZXhwb3J0IHtcbiAgRG9tYWluRXhjZXB0aW9uLFxuICBJbnN1ZmZpY2llbnRCYWxhbmNlRXhjZXB0aW9uLFxuICBJbnN1ZmZpY2llbnRSZXNlcnZlZEJhbGFuY2VFeGNlcHRpb24sXG4gIFRyYW5zYWN0aW9uTGltaXRFeGNlZWRlZEV4Y2VwdGlvbixcbiAgS3ljUmVxdWlyZWRFeGNlcHRpb24sXG4gIEludmFsaWRLeWNTdGF0dXNUcmFuc2l0aW9uRXhjZXB0aW9uLFxuICBJbnZhbGlkVHJhbnNhY3Rpb25TdGF0ZUV4Y2VwdGlvbixcbiAgVHJhbnNhY3Rpb25BbHJlYWR5UHJvY2Vzc2VkRXhjZXB0aW9uLFxuICBVbnN1cHBvcnRlZEN1cnJlbmN5RXhjZXB0aW9uLFxuICBVbnN1cHBvcnRlZEN1cnJlbmN5UGFpckV4Y2VwdGlvbixcbiAgU3RhbGVFeGNoYW5nZVJhdGVFeGNlcHRpb24sXG4gIFVzZXJOb3RGb3VuZEV4Y2VwdGlvbixcbiAgVXNlck5vdEFjdGl2ZUV4Y2VwdGlvbixcbiAgV2FsbGV0Tm90Rm91bmRFeGNlcHRpb24sXG4gIEludmFsaWRBbW91bnRFeGNlcHRpb24sXG4gIEludmFsaWRSZWNpcGllbnRFeGNlcHRpb24sXG4gIFNlbGZUcmFuc2FjdGlvbkV4Y2VwdGlvbixcbiAgTWluaW11bVRyYW5zYWN0aW9uQW1vdW50RXhjZXB0aW9uLFxuICBNYXhpbXVtVHJhbnNhY3Rpb25BbW91bnRFeGNlcHRpb24sXG4gIEV4Y2hhbmdlUmF0ZVVuYXZhaWxhYmxlRXhjZXB0aW9uLFxuICBQYXltZW50UHJvY2Vzc2luZ0V4Y2VwdGlvblxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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