{"version":3,"names":["cov_16p2u0l71s","actualCoverage","withAuth","createSuccessResponse","ErrorResponses","withErrorHandling","withCors","validateRouteParams","walletCurrencySchema","getWalletBalance","currencyBalanceHandler","request","user","params","f","resolvedParams","s","validation","success","b","validationError","error","currency","data","result","user_id","userId","responseData","availableBalance","reservedBalance","totalBalance","timestamp","Date","toISOString","walletData","available_balance","reserved_balance","GET"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\wallets\\[currency]\\route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateRouteParams } from '@/lib/validation/helpers';\nimport { walletCurrencySchema } from '@/lib/validation/schemas';\nimport { getWalletBalance } from '@/lib/database/functions';\n\nasync function currencyBalanceHandler(\n  request: NextRequest,\n  user: AuthenticatedUser,\n  { params }: { params: Promise<{ currency: string }> }\n) {\n  // Validate currency parameter\n  const resolvedParams = await params;\n  const validation = validateRouteParams(resolvedParams, walletCurrencySchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { currency } = validation.data!;\n\n  // Get balance for specific currency\n  const result = await getWalletBalance({\n    user_id: user.userId,\n    currency\n  });\n\n  if (!result.success) {\n    // If wallet doesn't exist, return zero balances\n    const responseData = {\n      userId: user.userId,\n      currency,\n      availableBalance: 0,\n      reservedBalance: 0,\n      totalBalance: 0,\n      timestamp: new Date().toISOString()\n    };\n    return createSuccessResponse(responseData, 'Wallet balance retrieved (new wallet)');\n  }\n\n  const walletData = result.data as { available_balance?: number; reserved_balance?: number } | undefined;\n\n  const responseData = {\n    userId: user.userId,\n    currency,\n    availableBalance: walletData?.available_balance || 0,\n    reservedBalance: walletData?.reserved_balance || 0,\n    totalBalance: (walletData?.available_balance || 0) + (walletData?.reserved_balance || 0),\n    timestamp: new Date().toISOString()\n  };\n\n  return createSuccessResponse(responseData, 'Wallet balance retrieved successfully');\n}\n\nexport const GET = withCors(withErrorHandling(withAuth(currencyBalanceHandler)));\n"],"mappings":"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","ignoreList":[]}