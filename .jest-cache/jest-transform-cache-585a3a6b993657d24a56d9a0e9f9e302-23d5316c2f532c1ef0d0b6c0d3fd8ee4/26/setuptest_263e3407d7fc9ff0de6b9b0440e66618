a471bc234a3999bd4a3874a57cdf6bb2
"use strict";
/**
 * Setup Test
 * Verifies that the test environment is properly configured
 */
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
(0, globals_1.describe)('Test Environment Setup', () => {
    (0, globals_1.test)('should have test environment configured', () => {
        (0, globals_1.expect)(process.env.NODE_ENV).toBe('test');
    });
    (0, globals_1.test)('should have Supabase configuration', () => {
        (0, globals_1.expect)(process.env.NEXT_PUBLIC_SUPABASE_URL).toBeDefined();
        (0, globals_1.expect)(process.env.SUPABASE_SERVICE_ROLE_KEY).toBeDefined();
    });
    (0, globals_1.test)('should have custom matchers available', () => {
        (0, globals_1.expect)('test@example.com').toBeValidEmail();
        (0, globals_1.expect)('EUR').toBeValidCurrency();
        (0, globals_1.expect)(100.50).toBeValidAmount();
    });
    (0, globals_1.test)('should have test utilities available', () => {
        (0, globals_1.expect)(global.testUtils).toBeDefined();
        (0, globals_1.expect)(global.testUtils.randomString).toBeInstanceOf(Function);
        (0, globals_1.expect)(global.testUtils.randomEmail).toBeInstanceOf(Function);
        (0, globals_1.expect)(global.testUtils.randomAmount).toBeInstanceOf(Function);
    });
    (0, globals_1.test)('should generate random test data', () => {
        const randomString = global.testUtils.randomString(10);
        (0, globals_1.expect)(randomString).toHaveLength(10);
        (0, globals_1.expect)(typeof randomString).toBe('string');
        const randomEmail = global.testUtils.randomEmail();
        (0, globals_1.expect)(randomEmail).toBeValidEmail();
        const randomAmount = global.testUtils.randomAmount(1, 100);
        (0, globals_1.expect)(randomAmount).toBeValidAmount();
        (0, globals_1.expect)(randomAmount).toBeGreaterThanOrEqual(1);
        (0, globals_1.expect)(randomAmount).toBeLessThanOrEqual(100);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXEdpdEh1YlxcZW1hXFx0ZXN0c1xcdW5pdFxcc2V0dXAudGVzdC50cyIsIm1hcHBpbmdzIjoiO0FBQUE7OztHQUdHOztBQUVILDJDQUF1RDtBQUV2RCxJQUFBLGtCQUFRLEVBQUMsd0JBQXdCLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLElBQUEsY0FBSSxFQUFDLHlDQUF5QyxFQUFFLEdBQUcsRUFBRTtRQUNuRCxJQUFBLGdCQUFNLEVBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFBLGNBQUksRUFBQyxvQ0FBb0MsRUFBRSxHQUFHLEVBQUU7UUFDOUMsSUFBQSxnQkFBTSxFQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzRCxJQUFBLGdCQUFNLEVBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzlELENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBQSxjQUFJLEVBQUMsdUNBQXVDLEVBQUUsR0FBRyxFQUFFO1FBQ2pELElBQUEsZ0JBQU0sRUFBQyxrQkFBa0IsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQzVDLElBQUEsZ0JBQU0sRUFBQyxLQUFLLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ2xDLElBQUEsZ0JBQU0sRUFBQyxNQUFNLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUNuQyxDQUFDLENBQUMsQ0FBQztJQUVILElBQUEsY0FBSSxFQUFDLHNDQUFzQyxFQUFFLEdBQUcsRUFBRTtRQUNoRCxJQUFBLGdCQUFNLEVBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZDLElBQUEsZ0JBQU0sRUFBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMvRCxJQUFBLGdCQUFNLEVBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUQsSUFBQSxnQkFBTSxFQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pFLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBQSxjQUFJLEVBQUMsa0NBQWtDLEVBQUUsR0FBRyxFQUFFO1FBQzVDLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELElBQUEsZ0JBQU0sRUFBQyxZQUFZLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdEMsSUFBQSxnQkFBTSxFQUFDLE9BQU8sWUFBWSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRTNDLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkQsSUFBQSxnQkFBTSxFQUFDLFdBQVcsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBRXJDLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUMzRCxJQUFBLGdCQUFNLEVBQUMsWUFBWSxDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkMsSUFBQSxnQkFBTSxFQUFDLFlBQVksQ0FBQyxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQy9DLElBQUEsZ0JBQU0sRUFBQyxZQUFZLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoRCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVXNlclxcRG9jdW1lbnRzXFxHaXRIdWJcXGVtYVxcdGVzdHNcXHVuaXRcXHNldHVwLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTZXR1cCBUZXN0XG4gKiBWZXJpZmllcyB0aGF0IHRoZSB0ZXN0IGVudmlyb25tZW50IGlzIHByb3Blcmx5IGNvbmZpZ3VyZWRcbiAqL1xuXG5pbXBvcnQgeyBkZXNjcmliZSwgdGVzdCwgZXhwZWN0IH0gZnJvbSAnQGplc3QvZ2xvYmFscyc7XG5cbmRlc2NyaWJlKCdUZXN0IEVudmlyb25tZW50IFNldHVwJywgKCkgPT4ge1xuICB0ZXN0KCdzaG91bGQgaGF2ZSB0ZXN0IGVudmlyb25tZW50IGNvbmZpZ3VyZWQnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHByb2Nlc3MuZW52Lk5PREVfRU5WKS50b0JlKCd0ZXN0Jyk7XG4gIH0pO1xuXG4gIHRlc3QoJ3Nob3VsZCBoYXZlIFN1cGFiYXNlIGNvbmZpZ3VyYXRpb24nLCAoKSA9PiB7XG4gICAgZXhwZWN0KHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QocHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnc2hvdWxkIGhhdmUgY3VzdG9tIG1hdGNoZXJzIGF2YWlsYWJsZScsICgpID0+IHtcbiAgICBleHBlY3QoJ3Rlc3RAZXhhbXBsZS5jb20nKS50b0JlVmFsaWRFbWFpbCgpO1xuICAgIGV4cGVjdCgnRVVSJykudG9CZVZhbGlkQ3VycmVuY3koKTtcbiAgICBleHBlY3QoMTAwLjUwKS50b0JlVmFsaWRBbW91bnQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnc2hvdWxkIGhhdmUgdGVzdCB1dGlsaXRpZXMgYXZhaWxhYmxlJywgKCkgPT4ge1xuICAgIGV4cGVjdChnbG9iYWwudGVzdFV0aWxzKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChnbG9iYWwudGVzdFV0aWxzLnJhbmRvbVN0cmluZykudG9CZUluc3RhbmNlT2YoRnVuY3Rpb24pO1xuICAgIGV4cGVjdChnbG9iYWwudGVzdFV0aWxzLnJhbmRvbUVtYWlsKS50b0JlSW5zdGFuY2VPZihGdW5jdGlvbik7XG4gICAgZXhwZWN0KGdsb2JhbC50ZXN0VXRpbHMucmFuZG9tQW1vdW50KS50b0JlSW5zdGFuY2VPZihGdW5jdGlvbik7XG4gIH0pO1xuXG4gIHRlc3QoJ3Nob3VsZCBnZW5lcmF0ZSByYW5kb20gdGVzdCBkYXRhJywgKCkgPT4ge1xuICAgIGNvbnN0IHJhbmRvbVN0cmluZyA9IGdsb2JhbC50ZXN0VXRpbHMucmFuZG9tU3RyaW5nKDEwKTtcbiAgICBleHBlY3QocmFuZG9tU3RyaW5nKS50b0hhdmVMZW5ndGgoMTApO1xuICAgIGV4cGVjdCh0eXBlb2YgcmFuZG9tU3RyaW5nKS50b0JlKCdzdHJpbmcnKTtcblxuICAgIGNvbnN0IHJhbmRvbUVtYWlsID0gZ2xvYmFsLnRlc3RVdGlscy5yYW5kb21FbWFpbCgpO1xuICAgIGV4cGVjdChyYW5kb21FbWFpbCkudG9CZVZhbGlkRW1haWwoKTtcblxuICAgIGNvbnN0IHJhbmRvbUFtb3VudCA9IGdsb2JhbC50ZXN0VXRpbHMucmFuZG9tQW1vdW50KDEsIDEwMCk7XG4gICAgZXhwZWN0KHJhbmRvbUFtb3VudCkudG9CZVZhbGlkQW1vdW50KCk7XG4gICAgZXhwZWN0KHJhbmRvbUFtb3VudCkudG9CZUdyZWF0ZXJUaGFuT3JFcXVhbCgxKTtcbiAgICBleHBlY3QocmFuZG9tQW1vdW50KS50b0JlTGVzc1RoYW5PckVxdWFsKDEwMCk7XG4gIH0pO1xufSk7XG4iXSwidmVyc2lvbiI6M30=