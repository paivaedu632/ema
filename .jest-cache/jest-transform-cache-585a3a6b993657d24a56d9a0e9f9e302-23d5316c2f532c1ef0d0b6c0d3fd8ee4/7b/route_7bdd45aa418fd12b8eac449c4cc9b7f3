b63431bba537d83a38f560cb12da5836
/* istanbul ignore next */
function cov_277ulhsr5s() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\history\\route.ts";
  var hash = "ed81b7585b23378bc3ef93ab75b99cc8fde34eaa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\history\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 72
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "3": {
        start: {
          line: 13,
          column: 45
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "4": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 58
        }
      },
      "7": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 64
        }
      },
      "8": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "9": {
        start: {
          line: 22,
          column: 51
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "10": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "11": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 87
        }
      },
      "12": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 77
        }
      }
    },
    fnMap: {
      "0": {
        name: "orderHistoryHandler",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 34
          }
        },
        loc: {
          start: {
            line: 7,
            column: 50
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 40
          }
        },
        loc: {
          start: {
            line: 22,
            column: 51
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 13,
            column: 32
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 24
          }
        }, {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 16,
            column: 38
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 59
          }
        }, {
          start: {
            line: 20,
            column: 62
          },
          end: {
            line: 20,
            column: 64
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\history\\route.ts",
      mappings: "AACA,OAAO,EAAE,QAAQ,EAAqB,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,KAAK,UAAU,mBAAmB,CAAC,OAAoB,EAAE,IAAuB;IAC9E,6BAA6B;IAC7B,MAAM,UAAU,GAAG,oBAAoB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IACrE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC,IAAK,CAAC;IAE1D,oBAAoB;IACpB,MAAM,MAAM,GAAG,MAAM,mBAAmB,iBACtC,OAAO,EAAE,IAAI,CAAC,MAAM,EACpB,IAAI;QACJ,KAAK,IACF,CAAC,MAAM,IAAI,EAAE,MAAM,EAAE,CAAC,EACzB,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,OAAO,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAE7D,iCAAiC;IACjC,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAcnC,EAAE,EAAE,CAAC,CAAC;QACL,EAAE,EAAE,KAAK,CAAC,EAAE;QACZ,SAAS,EAAE,KAAK,CAAC,UAAU;QAC3B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,YAAY,EAAE,KAAK,CAAC,aAAa;QACjC,aAAa,EAAE,KAAK,CAAC,cAAc;QACnC,MAAM,EAAE,KAAK,CAAC,MAAM;QACpB,KAAK,EAAE,KAAK,CAAC,KAAK;QAClB,aAAa,EAAE,KAAK,CAAC,cAAc;QACnC,cAAc,EAAE,KAAK,CAAC,eAAe;QACrC,MAAM,EAAE,KAAK,CAAC,MAAM;QACpB,SAAS,EAAE,KAAK,CAAC,UAAU;QAC3B,SAAS,EAAE,KAAK,CAAC,UAAU;QAC3B,UAAU,EAAE,KAAK,CAAC,WAAW;KAC9B,CAAC,CAAC,CAAC;IAEJ,MAAM,YAAY,GAAG;QACnB,MAAM,EAAE,eAAe;QACvB,UAAU,EAAE;YACV,IAAI;YACJ,KAAK;YACL,KAAK,EAAE,eAAe,CAAC,MAAM;YAC7B,OAAO,EAAE,eAAe,CAAC,MAAM,KAAK,KAAK;SAC1C;QACD,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,MAAM;QACN,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;KACpC,CAAC;IAEF,OAAO,qBAAqB,CAAC,YAAY,EAAE,sCAAsC,CAAC,CAAC;AACrF,CAAC;AAED,MAAM,CAAC,MAAM,GAAG,GAAG,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\history\\route.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateSearchParams } from '@/lib/validation/helpers';\nimport { orderHistorySchema } from '@/lib/validation/schemas';\nimport { getUserOrderHistory } from '@/lib/database/functions';\n\nasync function orderHistoryHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate search parameters\n  const validation = validateSearchParams(request, orderHistorySchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { page = 1, limit = 20, status } = validation.data!;\n\n  // Get order history\n  const result = await getUserOrderHistory({\n    user_id: user.userId,\n    page,\n    limit,\n    ...(status && { status })\n  });\n\n  if (!result.success) {\n    return ErrorResponses.databaseError(result.error);\n  }\n\n  const orders = Array.isArray(result.data) ? result.data : [];\n\n  // Format order data for response\n  const formattedOrders = orders.map((order: {\n    id: string;\n    order_type: string;\n    side: string;\n    base_currency: string;\n    quote_currency: string;\n    amount: number;\n    price?: number;\n    executed_price?: number;\n    executed_amount?: number;\n    status: string;\n    created_at: string;\n    updated_at?: string;\n    executed_at?: string;\n  }) => ({\n    id: order.id,\n    orderType: order.order_type,\n    side: order.side,\n    baseCurrency: order.base_currency,\n    quoteCurrency: order.quote_currency,\n    amount: order.amount,\n    price: order.price,\n    executedPrice: order.executed_price,\n    executedAmount: order.executed_amount,\n    status: order.status,\n    createdAt: order.created_at,\n    updatedAt: order.updated_at,\n    executedAt: order.executed_at\n  }));\n\n  const responseData = {\n    orders: formattedOrders,\n    pagination: {\n      page,\n      limit,\n      total: formattedOrders.length,\n      hasMore: formattedOrders.length === limit\n    },\n    userId: user.userId,\n    status,\n    timestamp: new Date().toISOString()\n  };\n\n  return createSuccessResponse(responseData, 'Order history retrieved successfully');\n}\n\nexport const GET = withCors(withErrorHandling(withAuth(orderHistoryHandler)));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed81b7585b23378bc3ef93ab75b99cc8fde34eaa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_277ulhsr5s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_277ulhsr5s();
import { withAuth } from '@/lib/auth/middleware';
import { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';
import { withCors } from '@/lib/api/cors';
import { validateSearchParams } from '@/lib/validation/helpers';
import { orderHistorySchema } from '@/lib/validation/schemas';
import { getUserOrderHistory } from '@/lib/database/functions';
async function orderHistoryHandler(request, user) {
  /* istanbul ignore next */
  cov_277ulhsr5s().f[0]++;
  // Validate search parameters
  const validation =
  /* istanbul ignore next */
  (cov_277ulhsr5s().s[0]++, validateSearchParams(request, orderHistorySchema));
  /* istanbul ignore next */
  cov_277ulhsr5s().s[1]++;
  if (!validation.success) {
    /* istanbul ignore next */
    cov_277ulhsr5s().b[0][0]++;
    cov_277ulhsr5s().s[2]++;
    return ErrorResponses.validationError(validation.error);
  } else
  /* istanbul ignore next */
  {
    cov_277ulhsr5s().b[0][1]++;
  }
  const {
    page =
    /* istanbul ignore next */
    (cov_277ulhsr5s().b[1][0]++, 1),
    limit =
    /* istanbul ignore next */
    (cov_277ulhsr5s().b[2][0]++, 20),
    status
  } =
  /* istanbul ignore next */
  (cov_277ulhsr5s().s[3]++, validation.data);
  // Get order history
  const result =
  /* istanbul ignore next */
  (cov_277ulhsr5s().s[4]++, await getUserOrderHistory(Object.assign({
    user_id: user.userId,
    page,
    limit
  },
  /* istanbul ignore next */
  (cov_277ulhsr5s().b[3][0]++, status) &&
  /* istanbul ignore next */
  (cov_277ulhsr5s().b[3][1]++, {
    status
  }))));
  /* istanbul ignore next */
  cov_277ulhsr5s().s[5]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_277ulhsr5s().b[4][0]++;
    cov_277ulhsr5s().s[6]++;
    return ErrorResponses.databaseError(result.error);
  } else
  /* istanbul ignore next */
  {
    cov_277ulhsr5s().b[4][1]++;
  }
  const orders =
  /* istanbul ignore next */
  (cov_277ulhsr5s().s[7]++, Array.isArray(result.data) ?
  /* istanbul ignore next */
  (cov_277ulhsr5s().b[5][0]++, result.data) :
  /* istanbul ignore next */
  (cov_277ulhsr5s().b[5][1]++, []));
  // Format order data for response
  const formattedOrders =
  /* istanbul ignore next */
  (cov_277ulhsr5s().s[8]++, orders.map(order => {
    /* istanbul ignore next */
    cov_277ulhsr5s().f[1]++;
    cov_277ulhsr5s().s[9]++;
    return {
      id: order.id,
      orderType: order.order_type,
      side: order.side,
      baseCurrency: order.base_currency,
      quoteCurrency: order.quote_currency,
      amount: order.amount,
      price: order.price,
      executedPrice: order.executed_price,
      executedAmount: order.executed_amount,
      status: order.status,
      createdAt: order.created_at,
      updatedAt: order.updated_at,
      executedAt: order.executed_at
    };
  }));
  const responseData =
  /* istanbul ignore next */
  (cov_277ulhsr5s().s[10]++, {
    orders: formattedOrders,
    pagination: {
      page,
      limit,
      total: formattedOrders.length,
      hasMore: formattedOrders.length === limit
    },
    userId: user.userId,
    status,
    timestamp: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_277ulhsr5s().s[11]++;
  return createSuccessResponse(responseData, 'Order history retrieved successfully');
}
export const GET =
/* istanbul ignore next */
(cov_277ulhsr5s().s[12]++, withCors(withErrorHandling(withAuth(orderHistoryHandler))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,