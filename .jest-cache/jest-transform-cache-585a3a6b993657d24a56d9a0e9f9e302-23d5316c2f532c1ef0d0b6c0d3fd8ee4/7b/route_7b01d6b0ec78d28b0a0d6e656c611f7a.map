{"version":3,"names":["cov_29mwo5v0al","actualCoverage","withAuth","createSuccessResponse","ErrorResponses","withErrorHandling","withCors","validateSearchParams","userSearchSchema","findUserForTransfer","userSearchHandler","request","user","f","validation","s","success","b","validationError","error","query","type","data","result","search_query","search_type","databaseError","users","Array","isArray","filteredUsers","filter","foundUser","id","userId","map","email","firstName","first_name","lastName","last_name","fullName","full_name","GET"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\users\\search\\route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateSearchParams } from '@/lib/validation/helpers';\nimport { userSearchSchema } from '@/lib/validation/schemas';\nimport { findUserForTransfer } from '@/lib/database/functions';\n\nasync function userSearchHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate search parameters\n  const validation = validateSearchParams(request, userSearchSchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { query, type = 'email' } = validation.data!;\n\n  // Search for users\n  const result = await findUserForTransfer({\n    search_query: query,\n    search_type: type\n  });\n\n  if (!result.success) {\n    return ErrorResponses.databaseError(result.error);\n  }\n\n  // Filter out sensitive information and current user\n  const users = Array.isArray(result.data) ? result.data : [];\n  const filteredUsers = users\n    .filter((foundUser: { id: string }) => foundUser.id !== user.userId)\n    .map((foundUser: { id: string; email: string; first_name?: string; last_name?: string; full_name?: string }) => ({\n      id: foundUser.id,\n      email: foundUser.email,\n      firstName: foundUser.first_name,\n      lastName: foundUser.last_name,\n      fullName: foundUser.full_name\n    }));\n\n  return createSuccessResponse(filteredUsers, 'Users found successfully');\n}\n\nexport const GET = withCors(withErrorHandling(withAuth(userSearchHandler)));\n"],"mappings":"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","ignoreList":[]}