{"version":3,"names":["cov_s62b32gpl","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","useMemo","isValidTransactionAmount","amount","numAmount","Number","isNaN","useAmountValidation","currency","minAmount","maxAmount","required","validation","amountStr","String","isEmpty","trim","isZero","isNegative","isBelowMin","isAboveMax","isValid","errorMessage","canContinue","useCanContinue","useExchangeRateValidation","rate","numRate"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-amount-validation.ts"],"sourcesContent":["'use client'\n\nimport { useMemo } from 'react'\n// Simple validation function\nfunction isValidTransactionAmount(amount: string | number): boolean {\n  const numAmount = Number(amount)\n  return !isNaN(numAmount) && numAmount > 0\n}\n\ninterface UseAmountValidationOptions {\n  amount: string | number\n  currency?: string\n  minAmount?: number\n  maxAmount?: number\n  required?: boolean\n}\n\ninterface UseAmountValidationReturn {\n  isValid: boolean\n  canContinue: boolean\n  errorMessage?: string\n  isEmpty: boolean\n  isZero: boolean\n  isNegative: boolean\n  isBelowMin: boolean\n  isAboveMax: boolean\n}\n\n/**\n * Reusable hook for amount validation across transaction flows\n * Consolidates common validation logic used in buy, sell, send, etc.\n */\nexport function useAmountValidation({\n  amount,\n  currency = '',\n  minAmount = 0,\n  maxAmount,\n  required = true\n}: UseAmountValidationOptions): UseAmountValidationReturn {\n  \n  const validation = useMemo(() => {\n    // Convert to string for consistent handling\n    const amountStr = String(amount)\n    const numAmount = Number(amount)\n    \n    // Check basic conditions\n    const isEmpty = !amountStr || amountStr.trim() === ''\n    const isZero = amountStr === '0' || numAmount === 0\n    const isNaN = Number.isNaN(numAmount)\n    const isNegative = numAmount < 0\n    const isBelowMin = numAmount < minAmount\n    const isAboveMax = maxAmount !== undefined && numAmount > maxAmount\n    \n    // Determine validity\n    let isValid = true\n    let errorMessage: string | undefined\n    \n    if (required && isEmpty) {\n      isValid = false\n      errorMessage = 'Valor é obrigatório'\n    } else if (!isEmpty && isNaN) {\n      isValid = false\n      errorMessage = 'Valor deve ser um número válido'\n    } else if (!isEmpty && isNegative) {\n      isValid = false\n      errorMessage = 'Valor deve ser positivo'\n    } else if (!isEmpty && isZero) {\n      isValid = false\n      errorMessage = 'Valor deve ser maior que zero'\n    } else if (!isEmpty && isBelowMin) {\n      isValid = false\n      errorMessage = `Valor mínimo é ${minAmount} ${currency}`.trim()\n    } else if (!isEmpty && isAboveMax) {\n      isValid = false\n      errorMessage = `Valor máximo é ${maxAmount} ${currency}`.trim()\n    }\n    \n    // Can continue if valid or if not required and empty\n    const canContinue = isValid || (!required && isEmpty)\n    \n    return {\n      isValid,\n      canContinue,\n      errorMessage,\n      isEmpty,\n      isZero,\n      isNegative,\n      isBelowMin,\n      isAboveMax\n    }\n  }, [amount, currency, minAmount, maxAmount, required])\n  \n  return validation\n}\n\n/**\n * Simplified validation hook that matches existing EmaPay patterns\n * Returns boolean for canContinue logic used across flows\n */\nexport function useCanContinue(amount: string | number): boolean {\n  return useMemo(() => {\n    return isValidTransactionAmount(amount)\n  }, [amount])\n}\n\n/**\n * Hook for validating exchange rates\n */\nexport function useExchangeRateValidation(rate: string | number) {\n  return useMemo(() => {\n    const numRate = typeof rate === 'string' ? Number(rate) : rate\n    const isValid = !isNaN(numRate) && numRate > 0\n    \n    return {\n      isValid,\n      canContinue: isValid,\n      errorMessage: isValid ? undefined : 'Taxa de câmbio deve ser maior que zero'\n    }\n  }, [rate])\n}\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IA2CR;IAAAD,aAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,aAAA;AAzCJ,SAASiC,OAAO,QAAQ,OAAO;AAC/B;AACA,SAASC,wBAAwBA,CAACC,MAAuB;EAAA;EAAAnC,aAAA,GAAAqB,CAAA;EACvD,MAAMe,SAAS;EAAA;EAAA,CAAApC,aAAA,GAAAoB,CAAA,OAAGiB,MAAM,CAACF,MAAM,CAAC;EAAA;EAAAnC,aAAA,GAAAoB,CAAA;EAChC,OAAO,2BAAApB,aAAA,GAAAsB,CAAA,WAACgB,KAAK,CAACF,SAAS,CAAC;EAAA;EAAA,CAAApC,aAAA,GAAAsB,CAAA,UAAIc,SAAS,GAAG,CAAC;AAC3C;AAqBA;;;;AAIA,OAAM,SAAUG,mBAAmBA,CAAC;EAClCJ,MAAM;EACNK,QAAQ;EAAA;EAAA,CAAAxC,aAAA,GAAAsB,CAAA,UAAG,EAAE;EACbmB,SAAS;EAAA;EAAA,CAAAzC,aAAA,GAAAsB,CAAA,UAAG,CAAC;EACboB,SAAS;EACTC,QAAQ;EAAA;EAAA,CAAA3C,aAAA,GAAAsB,CAAA,UAAG,IAAI;AAAA,CACY;EAAA;EAAAtB,aAAA,GAAAqB,CAAA;EAE3B,MAAMuB,UAAU;EAAA;EAAA,CAAA5C,aAAA,GAAAoB,CAAA,OAAGa,OAAO,CAAC,MAAK;IAAA;IAAAjC,aAAA,GAAAqB,CAAA;IAC9B;IACA,MAAMwB,SAAS;IAAA;IAAA,CAAA7C,aAAA,GAAAoB,CAAA,OAAG0B,MAAM,CAACX,MAAM,CAAC;IAChC,MAAMC,SAAS;IAAA;IAAA,CAAApC,aAAA,GAAAoB,CAAA,OAAGiB,MAAM,CAACF,MAAM,CAAC;IAEhC;IACA,MAAMY,OAAO;IAAA;IAAA,CAAA/C,aAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,aAAA,GAAAsB,CAAA,WAACuB,SAAS;IAAA;IAAA,CAAA7C,aAAA,GAAAsB,CAAA,UAAIuB,SAAS,CAACG,IAAI,EAAE,KAAK,EAAE;IACrD,MAAMC,MAAM;IAAA;IAAA,CAAAjD,aAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,aAAA,GAAAsB,CAAA,UAAAuB,SAAS,KAAK,GAAG;IAAA;IAAA,CAAA7C,aAAA,GAAAsB,CAAA,UAAIc,SAAS,KAAK,CAAC;IACnD,MAAME,KAAK;IAAA;IAAA,CAAAtC,aAAA,GAAAoB,CAAA,OAAGiB,MAAM,CAACC,KAAK,CAACF,SAAS,CAAC;IACrC,MAAMc,UAAU;IAAA;IAAA,CAAAlD,aAAA,GAAAoB,CAAA,OAAGgB,SAAS,GAAG,CAAC;IAChC,MAAMe,UAAU;IAAA;IAAA,CAAAnD,aAAA,GAAAoB,CAAA,OAAGgB,SAAS,GAAGK,SAAS;IACxC,MAAMW,UAAU;IAAA;IAAA,CAAApD,aAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,aAAA,GAAAsB,CAAA,UAAAoB,SAAS,KAAKvB,SAAS;IAAA;IAAA,CAAAnB,aAAA,GAAAsB,CAAA,UAAIc,SAAS,GAAGM,SAAS;IAEnE;IACA,IAAIW,OAAO;IAAA;IAAA,CAAArD,aAAA,GAAAoB,CAAA,QAAG,IAAI;IAClB,IAAIkC,YAAgC;IAAA;IAAAtD,aAAA,GAAAoB,CAAA;IAEpC;IAAI;IAAA,CAAApB,aAAA,GAAAsB,CAAA,UAAAqB,QAAQ;IAAA;IAAA,CAAA3C,aAAA,GAAAsB,CAAA,UAAIyB,OAAO,GAAE;MAAA;MAAA/C,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACvBiC,OAAO,GAAG,KAAK;MAAA;MAAArD,aAAA,GAAAoB,CAAA;MACfkC,YAAY,GAAG,qBAAqB;IACtC,CAAC,MAAM;MAAA;MAAAtD,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,YAACyB,OAAO;MAAA;MAAA,CAAA/C,aAAA,GAAAsB,CAAA,WAAIgB,KAAK,GAAE;QAAA;QAAAtC,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC5BiC,OAAO,GAAG,KAAK;QAAA;QAAArD,aAAA,GAAAoB,CAAA;QACfkC,YAAY,GAAG,iCAAiC;MAClD,CAAC,MAAM;QAAA;QAAAtD,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAA;QAAI;QAAA,CAAApB,aAAA,GAAAsB,CAAA,YAACyB,OAAO;QAAA;QAAA,CAAA/C,aAAA,GAAAsB,CAAA,WAAI4B,UAAU,GAAE;UAAA;UAAAlD,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACjCiC,OAAO,GAAG,KAAK;UAAA;UAAArD,aAAA,GAAAoB,CAAA;UACfkC,YAAY,GAAG,yBAAyB;QAC1C,CAAC,MAAM;UAAA;UAAAtD,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAAA;UAAI;UAAA,CAAApB,aAAA,GAAAsB,CAAA,YAACyB,OAAO;UAAA;UAAA,CAAA/C,aAAA,GAAAsB,CAAA,WAAI2B,MAAM,GAAE;YAAA;YAAAjD,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAC7BiC,OAAO,GAAG,KAAK;YAAA;YAAArD,aAAA,GAAAoB,CAAA;YACfkC,YAAY,GAAG,+BAA+B;UAChD,CAAC,MAAM;YAAA;YAAAtD,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAAA;YAAI;YAAA,CAAApB,aAAA,GAAAsB,CAAA,YAACyB,OAAO;YAAA;YAAA,CAAA/C,aAAA,GAAAsB,CAAA,WAAI6B,UAAU,GAAE;cAAA;cAAAnD,aAAA,GAAAsB,CAAA;cAAAtB,aAAA,GAAAoB,CAAA;cACjCiC,OAAO,GAAG,KAAK;cAAA;cAAArD,aAAA,GAAAoB,CAAA;cACfkC,YAAY,GAAG,kBAAkBb,SAAS,IAAID,QAAQ,EAAE,CAACQ,IAAI,EAAE;YACjE,CAAC,MAAM;cAAA;cAAAhD,aAAA,GAAAsB,CAAA;cAAAtB,aAAA,GAAAoB,CAAA;cAAA;cAAI;cAAA,CAAApB,aAAA,GAAAsB,CAAA,YAACyB,OAAO;cAAA;cAAA,CAAA/C,aAAA,GAAAsB,CAAA,WAAI8B,UAAU,GAAE;gBAAA;gBAAApD,aAAA,GAAAsB,CAAA;gBAAAtB,aAAA,GAAAoB,CAAA;gBACjCiC,OAAO,GAAG,KAAK;gBAAA;gBAAArD,aAAA,GAAAoB,CAAA;gBACfkC,YAAY,GAAG,kBAAkBZ,SAAS,IAAIF,QAAQ,EAAE,CAACQ,IAAI,EAAE;cACjE,CAAC;cAAA;cAAA;gBAAAhD,aAAA,GAAAsB,CAAA;cAAA;YAAD;UAAA;QAAA;MAAA;IAAA;IAEA;IACA,MAAMiC,WAAW;IAAA;IAAA,CAAAvD,aAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAA+B,OAAO;IAAK;IAAA,CAAArD,aAAA,GAAAsB,CAAA,YAACqB,QAAQ;IAAA;IAAA,CAAA3C,aAAA,GAAAsB,CAAA,WAAIyB,OAAO,CAAC;IAAA;IAAA/C,aAAA,GAAAoB,CAAA;IAErD,OAAO;MACLiC,OAAO;MACPE,WAAW;MACXD,YAAY;MACZP,OAAO;MACPE,MAAM;MACNC,UAAU;MACVC,UAAU;MACVC;KACD;EACH,CAAC,EAAE,CAACjB,MAAM,EAAEK,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAAA;EAAA3C,aAAA,GAAAoB,CAAA;EAEtD,OAAOwB,UAAU;AACnB;AAEA;;;;AAIA,OAAM,SAAUY,cAAcA,CAACrB,MAAuB;EAAA;EAAAnC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EACpD,OAAOa,OAAO,CAAC,MAAK;IAAA;IAAAjC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAClB,OAAOc,wBAAwB,CAACC,MAAM,CAAC;EACzC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;AACd;AAEA;;;AAGA,OAAM,SAAUsB,yBAAyBA,CAACC,IAAqB;EAAA;EAAA1D,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EAC7D,OAAOa,OAAO,CAAC,MAAK;IAAA;IAAAjC,aAAA,GAAAqB,CAAA;IAClB,MAAMsC,OAAO;IAAA;IAAA,CAAA3D,aAAA,GAAAoB,CAAA,QAAG,OAAOsC,IAAI,KAAK,QAAQ;IAAA;IAAA,CAAA1D,aAAA,GAAAsB,CAAA,WAAGe,MAAM,CAACqB,IAAI,CAAC;IAAA;IAAA,CAAA1D,aAAA,GAAAsB,CAAA,WAAGoC,IAAI;IAC9D,MAAML,OAAO;IAAA;IAAA,CAAArD,aAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,aAAA,GAAAsB,CAAA,YAACgB,KAAK,CAACqB,OAAO,CAAC;IAAA;IAAA,CAAA3D,aAAA,GAAAsB,CAAA,WAAIqC,OAAO,GAAG,CAAC;IAAA;IAAA3D,aAAA,GAAAoB,CAAA;IAE9C,OAAO;MACLiC,OAAO;MACPE,WAAW,EAAEF,OAAO;MACpBC,YAAY,EAAED,OAAO;MAAA;MAAA,CAAArD,aAAA,GAAAsB,CAAA,WAAGH,SAAS;MAAA;MAAA,CAAAnB,aAAA,GAAAsB,CAAA,WAAG,wCAAwC;KAC7E;EACH,CAAC,EAAE,CAACoC,IAAI,CAAC,CAAC;AACZ","ignoreList":[]}