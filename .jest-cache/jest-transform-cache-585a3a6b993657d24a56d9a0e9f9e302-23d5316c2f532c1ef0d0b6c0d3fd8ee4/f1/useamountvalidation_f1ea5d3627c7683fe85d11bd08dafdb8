cfe6de49ff081e9e8f6260e0d5e856d4
'use client';

/* istanbul ignore next */
function cov_s62b32gpl() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-amount-validation.ts";
  var hash = "4070d722633f20bcd8caf099d74a11eb55a38a2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-amount-validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "2": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 63,
          column: 58
        }
      },
      "3": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "4": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "5": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 61
        }
      },
      "6": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "7": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "8": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "9": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 48
        }
      },
      "10": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 75
        }
      },
      "11": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "13": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 28
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 49
        }
      },
      "15": {
        start: {
          line: 31,
          column: 13
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 28
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 61
        }
      },
      "18": {
        start: {
          line: 35,
          column: 13
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "19": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "20": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "21": {
        start: {
          line: 39,
          column: 13
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "22": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "23": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 59
        }
      },
      "24": {
        start: {
          line: 43,
          column: 13
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 28
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 76
        }
      },
      "27": {
        start: {
          line: 47,
          column: 13
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "28": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 28
        }
      },
      "29": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 76
        }
      },
      "30": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 61
        }
      },
      "31": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "32": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 22
        }
      },
      "33": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 48
        }
      },
      "35": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "36": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 70
        }
      },
      "37": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 54
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 86,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "isValidTransactionAmount",
        decl: {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 33
          }
        },
        loc: {
          start: {
            line: 4,
            column: 42
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "useAmountValidation",
        decl: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 35
          }
        },
        loc: {
          start: {
            line: 12,
            column: 106
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 13,
            column: 32
          }
        },
        loc: {
          start: {
            line: 13,
            column: 37
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "useCanContinue",
        decl: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 30
          }
        },
        loc: {
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 70
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 71,
            column: 20
          }
        },
        loc: {
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 71
      },
      "5": {
        name: "useExchangeRateValidation",
        decl: {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 41
          }
        },
        loc: {
          start: {
            line: 78,
            column: 48
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 79,
            column: 19
          },
          end: {
            line: 79,
            column: 20
          }
        },
        loc: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 79
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 28
          }
        }, {
          start: {
            line: 6,
            column: 32
          },
          end: {
            line: 6,
            column: 45
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 12,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 57
          },
          end: {
            line: 12,
            column: 59
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 61
          },
          end: {
            line: 12,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 73
          },
          end: {
            line: 12,
            column: 74
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 87
          },
          end: {
            line: 12,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 98
          },
          end: {
            line: 12,
            column: 102
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 34
          }
        }, {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 18,
            column: 61
          }
        }],
        line: 18
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 40
          }
        }, {
          start: {
            line: 19,
            column: 44
          },
          end: {
            line: 19,
            column: 59
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 50
          }
        }, {
          start: {
            line: 23,
            column: 54
          },
          end: {
            line: 23,
            column: 75
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }],
        line: 27
      },
      "8": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 31
          }
        }],
        line: 27
      },
      "9": {
        loc: {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }],
        line: 31
      },
      "10": {
        loc: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 25
          }
        }, {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 34
          }
        }],
        line: 31
      },
      "11": {
        loc: {
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: 39,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }],
        line: 35
      },
      "12": {
        loc: {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 25
          }
        }, {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 39
          }
        }],
        line: 35
      },
      "13": {
        loc: {
          start: {
            line: 39,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }],
        line: 39
      },
      "14": {
        loc: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 25
          }
        }, {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 35
          }
        }],
        line: 39
      },
      "15": {
        loc: {
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: 47,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }],
        line: 43
      },
      "16": {
        loc: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 25
          }
        }, {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 39
          }
        }],
        line: 43
      },
      "17": {
        loc: {
          start: {
            line: 47,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 13
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "18": {
        loc: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 25
          }
        }, {
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 39
          }
        }],
        line: 47
      },
      "19": {
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 35
          }
        }, {
          start: {
            line: 52,
            column: 40
          },
          end: {
            line: 52,
            column: 49
          }
        }, {
          start: {
            line: 52,
            column: 53
          },
          end: {
            line: 52,
            column: 60
          }
        }],
        line: 52
      },
      "20": {
        loc: {
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 51
          },
          end: {
            line: 80,
            column: 63
          }
        }, {
          start: {
            line: 80,
            column: 66
          },
          end: {
            line: 80,
            column: 70
          }
        }],
        line: 80
      },
      "21": {
        loc: {
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 39
          }
        }, {
          start: {
            line: 81,
            column: 43
          },
          end: {
            line: 81,
            column: 54
          }
        }],
        line: 81
      },
      "22": {
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 36
          },
          end: {
            line: 85,
            column: 45
          }
        }, {
          start: {
            line: 85,
            column: 48
          },
          end: {
            line: 85,
            column: 88
          }
        }],
        line: 85
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-amount-validation.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-amount-validation.ts"],
      sourcesContent: ["'use client'\n\nimport { useMemo } from 'react'\n// Simple validation function\nfunction isValidTransactionAmount(amount: string | number): boolean {\n  const numAmount = Number(amount)\n  return !isNaN(numAmount) && numAmount > 0\n}\n\ninterface UseAmountValidationOptions {\n  amount: string | number\n  currency?: string\n  minAmount?: number\n  maxAmount?: number\n  required?: boolean\n}\n\ninterface UseAmountValidationReturn {\n  isValid: boolean\n  canContinue: boolean\n  errorMessage?: string\n  isEmpty: boolean\n  isZero: boolean\n  isNegative: boolean\n  isBelowMin: boolean\n  isAboveMax: boolean\n}\n\n/**\n * Reusable hook for amount validation across transaction flows\n * Consolidates common validation logic used in buy, sell, send, etc.\n */\nexport function useAmountValidation({\n  amount,\n  currency = '',\n  minAmount = 0,\n  maxAmount,\n  required = true\n}: UseAmountValidationOptions): UseAmountValidationReturn {\n  \n  const validation = useMemo(() => {\n    // Convert to string for consistent handling\n    const amountStr = String(amount)\n    const numAmount = Number(amount)\n    \n    // Check basic conditions\n    const isEmpty = !amountStr || amountStr.trim() === ''\n    const isZero = amountStr === '0' || numAmount === 0\n    const isNaN = Number.isNaN(numAmount)\n    const isNegative = numAmount < 0\n    const isBelowMin = numAmount < minAmount\n    const isAboveMax = maxAmount !== undefined && numAmount > maxAmount\n    \n    // Determine validity\n    let isValid = true\n    let errorMessage: string | undefined\n    \n    if (required && isEmpty) {\n      isValid = false\n      errorMessage = 'Valor \xE9 obrigat\xF3rio'\n    } else if (!isEmpty && isNaN) {\n      isValid = false\n      errorMessage = 'Valor deve ser um n\xFAmero v\xE1lido'\n    } else if (!isEmpty && isNegative) {\n      isValid = false\n      errorMessage = 'Valor deve ser positivo'\n    } else if (!isEmpty && isZero) {\n      isValid = false\n      errorMessage = 'Valor deve ser maior que zero'\n    } else if (!isEmpty && isBelowMin) {\n      isValid = false\n      errorMessage = `Valor m\xEDnimo \xE9 ${minAmount} ${currency}`.trim()\n    } else if (!isEmpty && isAboveMax) {\n      isValid = false\n      errorMessage = `Valor m\xE1ximo \xE9 ${maxAmount} ${currency}`.trim()\n    }\n    \n    // Can continue if valid or if not required and empty\n    const canContinue = isValid || (!required && isEmpty)\n    \n    return {\n      isValid,\n      canContinue,\n      errorMessage,\n      isEmpty,\n      isZero,\n      isNegative,\n      isBelowMin,\n      isAboveMax\n    }\n  }, [amount, currency, minAmount, maxAmount, required])\n  \n  return validation\n}\n\n/**\n * Simplified validation hook that matches existing EmaPay patterns\n * Returns boolean for canContinue logic used across flows\n */\nexport function useCanContinue(amount: string | number): boolean {\n  return useMemo(() => {\n    return isValidTransactionAmount(amount)\n  }, [amount])\n}\n\n/**\n * Hook for validating exchange rates\n */\nexport function useExchangeRateValidation(rate: string | number) {\n  return useMemo(() => {\n    const numRate = typeof rate === 'string' ? Number(rate) : rate\n    const isValid = !isNaN(numRate) && numRate > 0\n    \n    return {\n      isValid,\n      canContinue: isValid,\n      errorMessage: isValid ? undefined : 'Taxa de c\xE2mbio deve ser maior que zero'\n    }\n  }, [rate])\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4070d722633f20bcd8caf099d74a11eb55a38a2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_s62b32gpl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_s62b32gpl();
import { useMemo } from 'react';
// Simple validation function
function isValidTransactionAmount(amount) {
  /* istanbul ignore next */
  cov_s62b32gpl().f[0]++;
  const numAmount =
  /* istanbul ignore next */
  (cov_s62b32gpl().s[0]++, Number(amount));
  /* istanbul ignore next */
  cov_s62b32gpl().s[1]++;
  return /* istanbul ignore next */(cov_s62b32gpl().b[0][0]++, !isNaN(numAmount)) &&
  /* istanbul ignore next */
  (cov_s62b32gpl().b[0][1]++, numAmount > 0);
}
/**
 * Reusable hook for amount validation across transaction flows
 * Consolidates common validation logic used in buy, sell, send, etc.
 */
export function useAmountValidation({
  amount,
  currency =
  /* istanbul ignore next */
  (cov_s62b32gpl().b[1][0]++, ''),
  minAmount =
  /* istanbul ignore next */
  (cov_s62b32gpl().b[2][0]++, 0),
  maxAmount,
  required =
  /* istanbul ignore next */
  (cov_s62b32gpl().b[3][0]++, true)
}) {
  /* istanbul ignore next */
  cov_s62b32gpl().f[1]++;
  const validation =
  /* istanbul ignore next */
  (cov_s62b32gpl().s[2]++, useMemo(() => {
    /* istanbul ignore next */
    cov_s62b32gpl().f[2]++;
    // Convert to string for consistent handling
    const amountStr =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[3]++, String(amount));
    const numAmount =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[4]++, Number(amount));
    // Check basic conditions
    const isEmpty =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[5]++,
    /* istanbul ignore next */
    (cov_s62b32gpl().b[4][0]++, !amountStr) ||
    /* istanbul ignore next */
    (cov_s62b32gpl().b[4][1]++, amountStr.trim() === ''));
    const isZero =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[6]++,
    /* istanbul ignore next */
    (cov_s62b32gpl().b[5][0]++, amountStr === '0') ||
    /* istanbul ignore next */
    (cov_s62b32gpl().b[5][1]++, numAmount === 0));
    const isNaN =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[7]++, Number.isNaN(numAmount));
    const isNegative =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[8]++, numAmount < 0);
    const isBelowMin =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[9]++, numAmount < minAmount);
    const isAboveMax =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[10]++,
    /* istanbul ignore next */
    (cov_s62b32gpl().b[6][0]++, maxAmount !== undefined) &&
    /* istanbul ignore next */
    (cov_s62b32gpl().b[6][1]++, numAmount > maxAmount));
    // Determine validity
    let isValid =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[11]++, true);
    let errorMessage;
    /* istanbul ignore next */
    cov_s62b32gpl().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_s62b32gpl().b[8][0]++, required) &&
    /* istanbul ignore next */
    (cov_s62b32gpl().b[8][1]++, isEmpty)) {
      /* istanbul ignore next */
      cov_s62b32gpl().b[7][0]++;
      cov_s62b32gpl().s[13]++;
      isValid = false;
      /* istanbul ignore next */
      cov_s62b32gpl().s[14]++;
      errorMessage = 'Valor é obrigatório';
    } else {
      /* istanbul ignore next */
      cov_s62b32gpl().b[7][1]++;
      cov_s62b32gpl().s[15]++;
      if (
      /* istanbul ignore next */
      (cov_s62b32gpl().b[10][0]++, !isEmpty) &&
      /* istanbul ignore next */
      (cov_s62b32gpl().b[10][1]++, isNaN)) {
        /* istanbul ignore next */
        cov_s62b32gpl().b[9][0]++;
        cov_s62b32gpl().s[16]++;
        isValid = false;
        /* istanbul ignore next */
        cov_s62b32gpl().s[17]++;
        errorMessage = 'Valor deve ser um número válido';
      } else {
        /* istanbul ignore next */
        cov_s62b32gpl().b[9][1]++;
        cov_s62b32gpl().s[18]++;
        if (
        /* istanbul ignore next */
        (cov_s62b32gpl().b[12][0]++, !isEmpty) &&
        /* istanbul ignore next */
        (cov_s62b32gpl().b[12][1]++, isNegative)) {
          /* istanbul ignore next */
          cov_s62b32gpl().b[11][0]++;
          cov_s62b32gpl().s[19]++;
          isValid = false;
          /* istanbul ignore next */
          cov_s62b32gpl().s[20]++;
          errorMessage = 'Valor deve ser positivo';
        } else {
          /* istanbul ignore next */
          cov_s62b32gpl().b[11][1]++;
          cov_s62b32gpl().s[21]++;
          if (
          /* istanbul ignore next */
          (cov_s62b32gpl().b[14][0]++, !isEmpty) &&
          /* istanbul ignore next */
          (cov_s62b32gpl().b[14][1]++, isZero)) {
            /* istanbul ignore next */
            cov_s62b32gpl().b[13][0]++;
            cov_s62b32gpl().s[22]++;
            isValid = false;
            /* istanbul ignore next */
            cov_s62b32gpl().s[23]++;
            errorMessage = 'Valor deve ser maior que zero';
          } else {
            /* istanbul ignore next */
            cov_s62b32gpl().b[13][1]++;
            cov_s62b32gpl().s[24]++;
            if (
            /* istanbul ignore next */
            (cov_s62b32gpl().b[16][0]++, !isEmpty) &&
            /* istanbul ignore next */
            (cov_s62b32gpl().b[16][1]++, isBelowMin)) {
              /* istanbul ignore next */
              cov_s62b32gpl().b[15][0]++;
              cov_s62b32gpl().s[25]++;
              isValid = false;
              /* istanbul ignore next */
              cov_s62b32gpl().s[26]++;
              errorMessage = `Valor mínimo é ${minAmount} ${currency}`.trim();
            } else {
              /* istanbul ignore next */
              cov_s62b32gpl().b[15][1]++;
              cov_s62b32gpl().s[27]++;
              if (
              /* istanbul ignore next */
              (cov_s62b32gpl().b[18][0]++, !isEmpty) &&
              /* istanbul ignore next */
              (cov_s62b32gpl().b[18][1]++, isAboveMax)) {
                /* istanbul ignore next */
                cov_s62b32gpl().b[17][0]++;
                cov_s62b32gpl().s[28]++;
                isValid = false;
                /* istanbul ignore next */
                cov_s62b32gpl().s[29]++;
                errorMessage = `Valor máximo é ${maxAmount} ${currency}`.trim();
              } else
              /* istanbul ignore next */
              {
                cov_s62b32gpl().b[17][1]++;
              }
            }
          }
        }
      }
    }
    // Can continue if valid or if not required and empty
    const canContinue =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[30]++,
    /* istanbul ignore next */
    (cov_s62b32gpl().b[19][0]++, isValid) ||
    /* istanbul ignore next */
    (cov_s62b32gpl().b[19][1]++, !required) &&
    /* istanbul ignore next */
    (cov_s62b32gpl().b[19][2]++, isEmpty));
    /* istanbul ignore next */
    cov_s62b32gpl().s[31]++;
    return {
      isValid,
      canContinue,
      errorMessage,
      isEmpty,
      isZero,
      isNegative,
      isBelowMin,
      isAboveMax
    };
  }, [amount, currency, minAmount, maxAmount, required]));
  /* istanbul ignore next */
  cov_s62b32gpl().s[32]++;
  return validation;
}
/**
 * Simplified validation hook that matches existing EmaPay patterns
 * Returns boolean for canContinue logic used across flows
 */
export function useCanContinue(amount) {
  /* istanbul ignore next */
  cov_s62b32gpl().f[3]++;
  cov_s62b32gpl().s[33]++;
  return useMemo(() => {
    /* istanbul ignore next */
    cov_s62b32gpl().f[4]++;
    cov_s62b32gpl().s[34]++;
    return isValidTransactionAmount(amount);
  }, [amount]);
}
/**
 * Hook for validating exchange rates
 */
export function useExchangeRateValidation(rate) {
  /* istanbul ignore next */
  cov_s62b32gpl().f[5]++;
  cov_s62b32gpl().s[35]++;
  return useMemo(() => {
    /* istanbul ignore next */
    cov_s62b32gpl().f[6]++;
    const numRate =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[36]++, typeof rate === 'string' ?
    /* istanbul ignore next */
    (cov_s62b32gpl().b[20][0]++, Number(rate)) :
    /* istanbul ignore next */
    (cov_s62b32gpl().b[20][1]++, rate));
    const isValid =
    /* istanbul ignore next */
    (cov_s62b32gpl().s[37]++,
    /* istanbul ignore next */
    (cov_s62b32gpl().b[21][0]++, !isNaN(numRate)) &&
    /* istanbul ignore next */
    (cov_s62b32gpl().b[21][1]++, numRate > 0));
    /* istanbul ignore next */
    cov_s62b32gpl().s[38]++;
    return {
      isValid,
      canContinue: isValid,
      errorMessage: isValid ?
      /* istanbul ignore next */
      (cov_s62b32gpl().b[22][0]++, undefined) :
      /* istanbul ignore next */
      (cov_s62b32gpl().b[22][1]++, 'Taxa de câmbio deve ser maior que zero')
    };
  }, [rate]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,