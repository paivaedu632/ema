{"version":3,"names":["cov_277ulhsr5s","actualCoverage","withAuth","createSuccessResponse","ErrorResponses","withErrorHandling","withCors","validateSearchParams","orderHistorySchema","getUserOrderHistory","orderHistoryHandler","request","user","f","validation","s","success","b","validationError","error","page","limit","status","data","result","Object","assign","user_id","userId","databaseError","orders","Array","isArray","formattedOrders","map","order","id","orderType","order_type","side","baseCurrency","base_currency","quoteCurrency","quote_currency","amount","price","executedPrice","executed_price","executedAmount","executed_amount","createdAt","created_at","updatedAt","updated_at","executedAt","executed_at","responseData","pagination","total","length","hasMore","timestamp","Date","toISOString","GET"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\history\\route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateSearchParams } from '@/lib/validation/helpers';\nimport { orderHistorySchema } from '@/lib/validation/schemas';\nimport { getUserOrderHistory } from '@/lib/database/functions';\n\nasync function orderHistoryHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate search parameters\n  const validation = validateSearchParams(request, orderHistorySchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { page = 1, limit = 20, status } = validation.data!;\n\n  // Get order history\n  const result = await getUserOrderHistory({\n    user_id: user.userId,\n    page,\n    limit,\n    ...(status && { status })\n  });\n\n  if (!result.success) {\n    return ErrorResponses.databaseError(result.error);\n  }\n\n  const orders = Array.isArray(result.data) ? result.data : [];\n\n  // Format order data for response\n  const formattedOrders = orders.map((order: {\n    id: string;\n    order_type: string;\n    side: string;\n    base_currency: string;\n    quote_currency: string;\n    amount: number;\n    price?: number;\n    executed_price?: number;\n    executed_amount?: number;\n    status: string;\n    created_at: string;\n    updated_at?: string;\n    executed_at?: string;\n  }) => ({\n    id: order.id,\n    orderType: order.order_type,\n    side: order.side,\n    baseCurrency: order.base_currency,\n    quoteCurrency: order.quote_currency,\n    amount: order.amount,\n    price: order.price,\n    executedPrice: order.executed_price,\n    executedAmount: order.executed_amount,\n    status: order.status,\n    createdAt: order.created_at,\n    updatedAt: order.updated_at,\n    executedAt: order.executed_at\n  }));\n\n  const responseData = {\n    orders: formattedOrders,\n    pagination: {\n      page,\n      limit,\n      total: formattedOrders.length,\n      hasMore: formattedOrders.length === limit\n    },\n    userId: user.userId,\n    status,\n    timestamp: new Date().toISOString()\n  };\n\n  return createSuccessResponse(responseData, 'Order history retrieved successfully');\n}\n\nexport const GET = withCors(withErrorHandling(withAuth(orderHistoryHandler)));\n"],"mappings":"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","ignoreList":[]}