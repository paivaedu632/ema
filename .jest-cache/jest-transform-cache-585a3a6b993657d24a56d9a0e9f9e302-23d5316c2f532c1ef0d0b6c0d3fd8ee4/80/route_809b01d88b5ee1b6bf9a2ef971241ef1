2c796ffd719db94764631da1cd9214f8
/* istanbul ignore next */
function cov_16igj34lcr() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\history\\route.ts";
  var hash = "f694685a5f9f7b913eceb87a7e0352d87fdefaf1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\history\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 75
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "3": {
        start: {
          line: 13,
          column: 47
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "4": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 58
        }
      },
      "7": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 67
        }
      },
      "8": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "9": {
        start: {
          line: 22,
          column: 60
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "10": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "11": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 90
        }
      },
      "12": {
        start: {
          line: 48,
          column: 19
        },
        end: {
          line: 48,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "transferHistoryHandler",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 37
          }
        },
        loc: {
          start: {
            line: 7,
            column: 53
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 45
          },
          end: {
            line: 22,
            column: 46
          }
        },
        loc: {
          start: {
            line: 22,
            column: 60
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 13,
            column: 32
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 26
          }
        }, {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 16,
            column: 42
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 51
          },
          end: {
            line: 20,
            column: 62
          }
        }, {
          start: {
            line: 20,
            column: 65
          },
          end: {
            line: 20,
            column: 67
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\history\\route.ts",
      mappings: "AACA,OAAO,EAAE,QAAQ,EAAqB,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAE,qBAAqB,EAAE,MAAM,0BAA0B,CAAC;AACjE,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAE9D,KAAK,UAAU,sBAAsB,CAAC,OAAoB,EAAE,IAAuB;IACjF,6BAA6B;IAC7B,MAAM,UAAU,GAAG,oBAAoB,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC;IACxE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC,IAAK,CAAC;IAE5D,uBAAuB;IACvB,MAAM,MAAM,GAAG,MAAM,kBAAkB,iBACrC,OAAO,EAAE,IAAI,CAAC,MAAM,EACpB,IAAI;QACJ,KAAK,IACF,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,CAAC,EAC7B,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,OAAO,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAEhE,oCAAoC;IACpC,MAAM,kBAAkB,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAWzC,EAAE,EAAE,CAAC,CAAC;QACL,EAAE,EAAE,QAAQ,CAAC,EAAE;QACf,IAAI,EAAE,QAAQ,CAAC,gBAAgB;QAC/B,MAAM,EAAE,QAAQ,CAAC,MAAM;QACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;QAC3B,WAAW,EAAE,QAAQ,CAAC,WAAW;QACjC,MAAM,EAAE,QAAQ,CAAC,MAAM;QACvB,SAAS,EAAE,QAAQ,CAAC,UAAU;QAC9B,WAAW,EAAE,QAAQ,CAAC,YAAY;QAClC,QAAQ,EAAE,QAAQ,CAAC,SAAS;QAC5B,WAAW,EAAE,QAAQ,CAAC,YAAY;KACnC,CAAC,CAAC,CAAC;IAEJ,MAAM,YAAY,GAAG;QACnB,SAAS,EAAE,kBAAkB;QAC7B,UAAU,EAAE;YACV,IAAI;YACJ,KAAK;YACL,KAAK,EAAE,kBAAkB,CAAC,MAAM;YAChC,OAAO,EAAE,kBAAkB,CAAC,MAAM,KAAK,KAAK;SAC7C;QACD,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,QAAQ;QACR,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;KACpC,CAAC;IAEF,OAAO,qBAAqB,CAAC,YAAY,EAAE,yCAAyC,CAAC,CAAC;AACxF,CAAC;AAED,MAAM,CAAC,MAAM,GAAG,GAAG,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\history\\route.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateSearchParams } from '@/lib/validation/helpers';\nimport { transferHistorySchema } from '@/lib/validation/schemas';\nimport { getTransferHistory } from '@/lib/database/functions';\n\nasync function transferHistoryHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate search parameters\n  const validation = validateSearchParams(request, transferHistorySchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { page = 1, limit = 20, currency } = validation.data!;\n\n  // Get transfer history\n  const result = await getTransferHistory({\n    user_id: user.userId,\n    page,\n    limit,\n    ...(currency && { currency })\n  });\n\n  if (!result.success) {\n    return ErrorResponses.databaseError(result.error);\n  }\n\n  const transfers = Array.isArray(result.data) ? result.data : [];\n\n  // Format transfer data for response\n  const formattedTransfers = transfers.map((transfer: {\n    id: string;\n    transaction_type: string;\n    amount: number;\n    currency: string;\n    description?: string;\n    status: string;\n    created_at: string;\n    recipient_id?: string;\n    sender_id?: string;\n    reference_id?: string;\n  }) => ({\n    id: transfer.id,\n    type: transfer.transaction_type,\n    amount: transfer.amount,\n    currency: transfer.currency,\n    description: transfer.description,\n    status: transfer.status,\n    createdAt: transfer.created_at,\n    recipientId: transfer.recipient_id,\n    senderId: transfer.sender_id,\n    referenceId: transfer.reference_id\n  }));\n\n  const responseData = {\n    transfers: formattedTransfers,\n    pagination: {\n      page,\n      limit,\n      total: formattedTransfers.length,\n      hasMore: formattedTransfers.length === limit\n    },\n    userId: user.userId,\n    currency,\n    timestamp: new Date().toISOString()\n  };\n\n  return createSuccessResponse(responseData, 'Transfer history retrieved successfully');\n}\n\nexport const GET = withCors(withErrorHandling(withAuth(transferHistoryHandler)));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f694685a5f9f7b913eceb87a7e0352d87fdefaf1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16igj34lcr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16igj34lcr();
import { withAuth } from '@/lib/auth/middleware';
import { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';
import { withCors } from '@/lib/api/cors';
import { validateSearchParams } from '@/lib/validation/helpers';
import { transferHistorySchema } from '@/lib/validation/schemas';
import { getTransferHistory } from '@/lib/database/functions';
async function transferHistoryHandler(request, user) {
  /* istanbul ignore next */
  cov_16igj34lcr().f[0]++;
  // Validate search parameters
  const validation =
  /* istanbul ignore next */
  (cov_16igj34lcr().s[0]++, validateSearchParams(request, transferHistorySchema));
  /* istanbul ignore next */
  cov_16igj34lcr().s[1]++;
  if (!validation.success) {
    /* istanbul ignore next */
    cov_16igj34lcr().b[0][0]++;
    cov_16igj34lcr().s[2]++;
    return ErrorResponses.validationError(validation.error);
  } else
  /* istanbul ignore next */
  {
    cov_16igj34lcr().b[0][1]++;
  }
  const {
    page =
    /* istanbul ignore next */
    (cov_16igj34lcr().b[1][0]++, 1),
    limit =
    /* istanbul ignore next */
    (cov_16igj34lcr().b[2][0]++, 20),
    currency
  } =
  /* istanbul ignore next */
  (cov_16igj34lcr().s[3]++, validation.data);
  // Get transfer history
  const result =
  /* istanbul ignore next */
  (cov_16igj34lcr().s[4]++, await getTransferHistory(Object.assign({
    user_id: user.userId,
    page,
    limit
  },
  /* istanbul ignore next */
  (cov_16igj34lcr().b[3][0]++, currency) &&
  /* istanbul ignore next */
  (cov_16igj34lcr().b[3][1]++, {
    currency
  }))));
  /* istanbul ignore next */
  cov_16igj34lcr().s[5]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_16igj34lcr().b[4][0]++;
    cov_16igj34lcr().s[6]++;
    return ErrorResponses.databaseError(result.error);
  } else
  /* istanbul ignore next */
  {
    cov_16igj34lcr().b[4][1]++;
  }
  const transfers =
  /* istanbul ignore next */
  (cov_16igj34lcr().s[7]++, Array.isArray(result.data) ?
  /* istanbul ignore next */
  (cov_16igj34lcr().b[5][0]++, result.data) :
  /* istanbul ignore next */
  (cov_16igj34lcr().b[5][1]++, []));
  // Format transfer data for response
  const formattedTransfers =
  /* istanbul ignore next */
  (cov_16igj34lcr().s[8]++, transfers.map(transfer => {
    /* istanbul ignore next */
    cov_16igj34lcr().f[1]++;
    cov_16igj34lcr().s[9]++;
    return {
      id: transfer.id,
      type: transfer.transaction_type,
      amount: transfer.amount,
      currency: transfer.currency,
      description: transfer.description,
      status: transfer.status,
      createdAt: transfer.created_at,
      recipientId: transfer.recipient_id,
      senderId: transfer.sender_id,
      referenceId: transfer.reference_id
    };
  }));
  const responseData =
  /* istanbul ignore next */
  (cov_16igj34lcr().s[10]++, {
    transfers: formattedTransfers,
    pagination: {
      page,
      limit,
      total: formattedTransfers.length,
      hasMore: formattedTransfers.length === limit
    },
    userId: user.userId,
    currency,
    timestamp: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_16igj34lcr().s[11]++;
  return createSuccessResponse(responseData, 'Transfer history retrieved successfully');
}
export const GET =
/* istanbul ignore next */
(cov_16igj34lcr().s[12]++, withCors(withErrorHandling(withAuth(transferHistoryHandler))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,