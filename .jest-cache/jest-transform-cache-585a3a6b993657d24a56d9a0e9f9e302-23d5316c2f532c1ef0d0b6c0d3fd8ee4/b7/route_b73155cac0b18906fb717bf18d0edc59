9869225d5e2f72c50bdf417477aa1ee1
/* istanbul ignore next */
function cov_16p2u0l71s() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\wallets\\[currency]\\route.ts";
  var hash = "a679e4152d9475e1b70e869af9732b5fe0a24514";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\wallets\\[currency]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "1": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 80
        }
      },
      "2": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "4": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "5": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "7": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 92
        }
      },
      "9": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "10": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "11": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 88
        }
      },
      "12": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 43,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "currencyBalanceHandler",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 37
          }
        },
        loc: {
          start: {
            line: 7,
            column: 65
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 111
          }
        }, {
          start: {
            line: 36,
            column: 116
          },
          end: {
            line: 36,
            column: 117
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 74
          },
          end: {
            line: 36,
            column: 80
          }
        }, {
          start: {
            line: 36,
            column: 83
          },
          end: {
            line: 36,
            column: 111
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 46
          }
        }, {
          start: {
            line: 36,
            column: 50
          },
          end: {
            line: 36,
            column: 71
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 109
          }
        }, {
          start: {
            line: 37,
            column: 114
          },
          end: {
            line: 37,
            column: 115
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 73
          },
          end: {
            line: 37,
            column: 79
          }
        }, {
          start: {
            line: 37,
            column: 82
          },
          end: {
            line: 37,
            column: 109
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 45
          }
        }, {
          start: {
            line: 37,
            column: 49
          },
          end: {
            line: 37,
            column: 70
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 108
          }
        }, {
          start: {
            line: 38,
            column: 113
          },
          end: {
            line: 38,
            column: 114
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 71
          },
          end: {
            line: 38,
            column: 77
          }
        }, {
          start: {
            line: 38,
            column: 80
          },
          end: {
            line: 38,
            column: 108
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 43
          }
        }, {
          start: {
            line: 38,
            column: 47
          },
          end: {
            line: 38,
            column: 68
          }
        }],
        line: 38
      },
      "11": {
        loc: {
          start: {
            line: 38,
            column: 119
          },
          end: {
            line: 38,
            column: 209
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 120
          },
          end: {
            line: 38,
            column: 203
          }
        }, {
          start: {
            line: 38,
            column: 208
          },
          end: {
            line: 38,
            column: 209
          }
        }],
        line: 38
      },
      "12": {
        loc: {
          start: {
            line: 38,
            column: 120
          },
          end: {
            line: 38,
            column: 203
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 167
          },
          end: {
            line: 38,
            column: 173
          }
        }, {
          start: {
            line: 38,
            column: 176
          },
          end: {
            line: 38,
            column: 203
          }
        }],
        line: 38
      },
      "13": {
        loc: {
          start: {
            line: 38,
            column: 120
          },
          end: {
            line: 38,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 120
          },
          end: {
            line: 38,
            column: 139
          }
        }, {
          start: {
            line: 38,
            column: 143
          },
          end: {
            line: 38,
            column: 164
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\wallets\\[currency]\\route.ts",
      mappings: "AACA,OAAO,EAAE,QAAQ,EAAqB,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,KAAK,UAAU,sBAAsB,CACnC,OAAoB,EACpB,IAAuB,EACvB,EAAE,MAAM,EAA6C;IAErD,8BAA8B;IAC9B,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC;IACpC,MAAM,UAAU,GAAG,mBAAmB,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;IAC7E,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC,IAAK,CAAC;IAEtC,oCAAoC;IACpC,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC;QACpC,OAAO,EAAE,IAAI,CAAC,MAAM;QACpB,QAAQ;KACT,CAAC,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,gDAAgD;QAChD,MAAM,YAAY,GAAG;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ;YACR,gBAAgB,EAAE,CAAC;YACnB,eAAe,EAAE,CAAC;YAClB,YAAY,EAAE,CAAC;YACf,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CAAC;QACF,OAAO,qBAAqB,CAAC,YAAY,EAAE,uCAAuC,CAAC,CAAC;IACtF,CAAC;IAED,MAAM,UAAU,GAAG,MAAM,CAAC,IAA6E,CAAC;IAExG,MAAM,YAAY,GAAG;QACnB,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,QAAQ;QACR,gBAAgB,EAAE,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,iBAAiB,KAAI,CAAC;QACpD,eAAe,EAAE,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,gBAAgB,KAAI,CAAC;QAClD,YAAY,EAAE,CAAC,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,iBAAiB,KAAI,CAAC,CAAC,GAAG,CAAC,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,gBAAgB,KAAI,CAAC,CAAC;QACxF,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;KACpC,CAAC;IAEF,OAAO,qBAAqB,CAAC,YAAY,EAAE,uCAAuC,CAAC,CAAC;AACtF,CAAC;AAED,MAAM,CAAC,MAAM,GAAG,GAAG,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\wallets\\[currency]\\route.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateRouteParams } from '@/lib/validation/helpers';\nimport { walletCurrencySchema } from '@/lib/validation/schemas';\nimport { getWalletBalance } from '@/lib/database/functions';\n\nasync function currencyBalanceHandler(\n  request: NextRequest,\n  user: AuthenticatedUser,\n  { params }: { params: Promise<{ currency: string }> }\n) {\n  // Validate currency parameter\n  const resolvedParams = await params;\n  const validation = validateRouteParams(resolvedParams, walletCurrencySchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { currency } = validation.data!;\n\n  // Get balance for specific currency\n  const result = await getWalletBalance({\n    user_id: user.userId,\n    currency\n  });\n\n  if (!result.success) {\n    // If wallet doesn't exist, return zero balances\n    const responseData = {\n      userId: user.userId,\n      currency,\n      availableBalance: 0,\n      reservedBalance: 0,\n      totalBalance: 0,\n      timestamp: new Date().toISOString()\n    };\n    return createSuccessResponse(responseData, 'Wallet balance retrieved (new wallet)');\n  }\n\n  const walletData = result.data as { available_balance?: number; reserved_balance?: number } | undefined;\n\n  const responseData = {\n    userId: user.userId,\n    currency,\n    availableBalance: walletData?.available_balance || 0,\n    reservedBalance: walletData?.reserved_balance || 0,\n    totalBalance: (walletData?.available_balance || 0) + (walletData?.reserved_balance || 0),\n    timestamp: new Date().toISOString()\n  };\n\n  return createSuccessResponse(responseData, 'Wallet balance retrieved successfully');\n}\n\nexport const GET = withCors(withErrorHandling(withAuth(currencyBalanceHandler)));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a679e4152d9475e1b70e869af9732b5fe0a24514"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16p2u0l71s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16p2u0l71s();
import { withAuth } from '@/lib/auth/middleware';
import { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';
import { withCors } from '@/lib/api/cors';
import { validateRouteParams } from '@/lib/validation/helpers';
import { walletCurrencySchema } from '@/lib/validation/schemas';
import { getWalletBalance } from '@/lib/database/functions';
async function currencyBalanceHandler(request, user, {
  params
}) {
  /* istanbul ignore next */
  cov_16p2u0l71s().f[0]++;
  // Validate currency parameter
  const resolvedParams =
  /* istanbul ignore next */
  (cov_16p2u0l71s().s[0]++, await params);
  const validation =
  /* istanbul ignore next */
  (cov_16p2u0l71s().s[1]++, validateRouteParams(resolvedParams, walletCurrencySchema));
  /* istanbul ignore next */
  cov_16p2u0l71s().s[2]++;
  if (!validation.success) {
    /* istanbul ignore next */
    cov_16p2u0l71s().b[0][0]++;
    cov_16p2u0l71s().s[3]++;
    return ErrorResponses.validationError(validation.error);
  } else
  /* istanbul ignore next */
  {
    cov_16p2u0l71s().b[0][1]++;
  }
  const {
    currency
  } =
  /* istanbul ignore next */
  (cov_16p2u0l71s().s[4]++, validation.data);
  // Get balance for specific currency
  const result =
  /* istanbul ignore next */
  (cov_16p2u0l71s().s[5]++, await getWalletBalance({
    user_id: user.userId,
    currency
  }));
  /* istanbul ignore next */
  cov_16p2u0l71s().s[6]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_16p2u0l71s().b[1][0]++;
    // If wallet doesn't exist, return zero balances
    const responseData =
    /* istanbul ignore next */
    (cov_16p2u0l71s().s[7]++, {
      userId: user.userId,
      currency,
      availableBalance: 0,
      reservedBalance: 0,
      totalBalance: 0,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_16p2u0l71s().s[8]++;
    return createSuccessResponse(responseData, 'Wallet balance retrieved (new wallet)');
  } else
  /* istanbul ignore next */
  {
    cov_16p2u0l71s().b[1][1]++;
  }
  const walletData =
  /* istanbul ignore next */
  (cov_16p2u0l71s().s[9]++, result.data);
  const responseData =
  /* istanbul ignore next */
  (cov_16p2u0l71s().s[10]++, {
    userId: user.userId,
    currency,
    availableBalance:
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[2][0]++,
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[4][0]++, walletData === null) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[4][1]++, walletData === void 0) ?
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[3][0]++, void 0) :
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[3][1]++, walletData.available_balance)) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[2][1]++, 0),
    reservedBalance:
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[5][0]++,
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[7][0]++, walletData === null) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[7][1]++, walletData === void 0) ?
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[6][0]++, void 0) :
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[6][1]++, walletData.reserved_balance)) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[5][1]++, 0),
    totalBalance: (
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[8][0]++,
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[10][0]++, walletData === null) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[10][1]++, walletData === void 0) ?
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[9][0]++, void 0) :
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[9][1]++, walletData.available_balance)) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[8][1]++, 0)) + (
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[11][0]++,
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[13][0]++, walletData === null) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[13][1]++, walletData === void 0) ?
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[12][0]++, void 0) :
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[12][1]++, walletData.reserved_balance)) ||
    /* istanbul ignore next */
    (cov_16p2u0l71s().b[11][1]++, 0)),
    timestamp: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_16p2u0l71s().s[11]++;
  return createSuccessResponse(responseData, 'Wallet balance retrieved successfully');
}
export const GET =
/* istanbul ignore next */
(cov_16p2u0l71s().s[12]++, withCors(withErrorHandling(withAuth(currencyBalanceHandler))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,