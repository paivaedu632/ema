82b6f1d63762a10db77c2ab22b75a242
"use strict";
/**
 * Test Utilities Index
 * Exports all test utilities for easy importing
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.testUtils = exports.Order = exports.Transfer = exports.WalletBalance = exports.StandardApiResponse = exports.helpers = exports.TestHelpers = exports.ApiRequestOptions = exports.ApiResponse = exports.apiClient = exports.ApiClient = exports.CreateUserOptions = exports.TestUser = exports.userFactory = exports.UserFactory = void 0;
var user_factory_1 = require("./user-factory");
Object.defineProperty(exports, "UserFactory", { enumerable: true, get: function () { return user_factory_1.UserFactory; } });
Object.defineProperty(exports, "userFactory", { enumerable: true, get: function () { return user_factory_1.userFactory; } });
Object.defineProperty(exports, "TestUser", { enumerable: true, get: function () { return user_factory_1.TestUser; } });
Object.defineProperty(exports, "CreateUserOptions", { enumerable: true, get: function () { return user_factory_1.CreateUserOptions; } });
var api_client_1 = require("./api-client");
Object.defineProperty(exports, "ApiClient", { enumerable: true, get: function () { return api_client_1.ApiClient; } });
Object.defineProperty(exports, "apiClient", { enumerable: true, get: function () { return api_client_1.apiClient; } });
Object.defineProperty(exports, "ApiResponse", { enumerable: true, get: function () { return api_client_1.ApiResponse; } });
Object.defineProperty(exports, "ApiRequestOptions", { enumerable: true, get: function () { return api_client_1.ApiRequestOptions; } });
var test_helpers_1 = require("./test-helpers");
Object.defineProperty(exports, "TestHelpers", { enumerable: true, get: function () { return test_helpers_1.TestHelpers; } });
Object.defineProperty(exports, "helpers", { enumerable: true, get: function () { return test_helpers_1.helpers; } });
Object.defineProperty(exports, "StandardApiResponse", { enumerable: true, get: function () { return test_helpers_1.StandardApiResponse; } });
Object.defineProperty(exports, "WalletBalance", { enumerable: true, get: function () { return test_helpers_1.WalletBalance; } });
Object.defineProperty(exports, "Transfer", { enumerable: true, get: function () { return test_helpers_1.Transfer; } });
Object.defineProperty(exports, "Order", { enumerable: true, get: function () { return test_helpers_1.Order; } });
// Import the instances
const user_factory_2 = require("./user-factory");
const api_client_2 = require("./api-client");
const test_helpers_2 = require("./test-helpers");
// Re-export common test utilities
exports.testUtils = {
    // User management
    createUser: user_factory_2.userFactory.createUser.bind(user_factory_2.userFactory),
    createUsers: user_factory_2.userFactory.createUsers.bind(user_factory_2.userFactory),
    createUserWithBalance: user_factory_2.userFactory.createUserWithBalance.bind(user_factory_2.userFactory),
    refreshUserToken: user_factory_2.userFactory.refreshUserToken.bind(user_factory_2.userFactory),
    deleteUser: user_factory_2.userFactory.deleteUser.bind(user_factory_2.userFactory),
    cleanup: user_factory_2.userFactory.cleanup.bind(user_factory_2.userFactory),
    // API requests
    get: api_client_2.apiClient.get.bind(api_client_2.apiClient),
    post: api_client_2.apiClient.post.bind(api_client_2.apiClient),
    put: api_client_2.apiClient.put.bind(api_client_2.apiClient),
    delete: api_client_2.apiClient.delete.bind(api_client_2.apiClient),
    publicGet: api_client_2.apiClient.publicGet.bind(api_client_2.apiClient),
    testPerformance: api_client_2.apiClient.testPerformance.bind(api_client_2.apiClient),
    testConcurrency: api_client_2.apiClient.testConcurrency.bind(api_client_2.apiClient),
    testWithInvalidToken: api_client_2.apiClient.testWithInvalidToken.bind(api_client_2.apiClient),
    testWithExpiredToken: api_client_2.apiClient.testWithExpiredToken.bind(api_client_2.apiClient),
    // Assertions
    assertSuccessResponse: test_helpers_2.TestHelpers.assertSuccessResponse,
    assertErrorResponse: test_helpers_2.TestHelpers.assertErrorResponse,
    assertResponseTime: test_helpers_2.TestHelpers.assertResponseTime,
    assertValidUserData: test_helpers_2.TestHelpers.assertValidUserData,
    assertValidWalletBalance: test_helpers_2.TestHelpers.assertValidWalletBalance,
    assertValidTransfer: test_helpers_2.TestHelpers.assertValidTransfer,
    assertValidOrder: test_helpers_2.TestHelpers.assertValidOrder,
    assertValidMarketData: test_helpers_2.TestHelpers.assertValidMarketData,
    assertValidOrderBook: test_helpers_2.TestHelpers.assertValidOrderBook,
    // Data generation
    generateTransferData: test_helpers_2.TestHelpers.generateTransferData,
    generateLimitOrderData: test_helpers_2.TestHelpers.generateLimitOrderData,
    generateMarketOrderData: test_helpers_2.TestHelpers.generateMarketOrderData,
    generateTestPin: test_helpers_2.TestHelpers.generateTestPin,
    // Utilities
    waitFor: test_helpers_2.TestHelpers.waitFor,
    assertDecimalPrecision: test_helpers_2.TestHelpers.assertDecimalPrecision,
    assertSortedByDate: test_helpers_2.TestHelpers.assertSortedByDate
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXEdpdEh1YlxcZW1hXFx0ZXN0c1xcdXRpbHNcXGluZGV4LnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7O0dBR0c7OztBQUVILCtDQUF1RjtBQUE5RSwyR0FBQSxXQUFXLE9BQUE7QUFBRSwyR0FBQSxXQUFXLE9BQUE7QUFBRSx3R0FBQSxRQUFRLE9BQUE7QUFBRSxpSEFBQSxpQkFBaUIsT0FBQTtBQUM5RCwyQ0FBb0Y7QUFBM0UsdUdBQUEsU0FBUyxPQUFBO0FBQUUsdUdBQUEsU0FBUyxPQUFBO0FBQUUseUdBQUEsV0FBVyxPQUFBO0FBQUUsK0dBQUEsaUJBQWlCLE9BQUE7QUFDN0QsK0NBT3dCO0FBTnRCLDJHQUFBLFdBQVcsT0FBQTtBQUNYLHVHQUFBLE9BQU8sT0FBQTtBQUNQLG1IQUFBLG1CQUFtQixPQUFBO0FBQ25CLDZHQUFBLGFBQWEsT0FBQTtBQUNiLHdHQUFBLFFBQVEsT0FBQTtBQUNSLHFHQUFBLEtBQUssT0FBQTtBQUdQLHVCQUF1QjtBQUN2QixpREFBNkM7QUFDN0MsNkNBQXlDO0FBQ3pDLGlEQUE2QztBQUU3QyxrQ0FBa0M7QUFDckIsUUFBQSxTQUFTLEdBQUc7SUFDdkIsa0JBQWtCO0lBQ2xCLFVBQVUsRUFBRSwwQkFBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsMEJBQVcsQ0FBQztJQUNwRCxXQUFXLEVBQUUsMEJBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLDBCQUFXLENBQUM7SUFDdEQscUJBQXFCLEVBQUUsMEJBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsMEJBQVcsQ0FBQztJQUMxRSxnQkFBZ0IsRUFBRSwwQkFBVyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQywwQkFBVyxDQUFDO0lBQ2hFLFVBQVUsRUFBRSwwQkFBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsMEJBQVcsQ0FBQztJQUNwRCxPQUFPLEVBQUUsMEJBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLDBCQUFXLENBQUM7SUFFOUMsZUFBZTtJQUNmLEdBQUcsRUFBRSxzQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsc0JBQVMsQ0FBQztJQUNsQyxJQUFJLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFTLENBQUM7SUFDcEMsR0FBRyxFQUFFLHNCQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxzQkFBUyxDQUFDO0lBQ2xDLE1BQU0sRUFBRSxzQkFBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsc0JBQVMsQ0FBQztJQUN4QyxTQUFTLEVBQUUsc0JBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLHNCQUFTLENBQUM7SUFDOUMsZUFBZSxFQUFFLHNCQUFTLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxzQkFBUyxDQUFDO0lBQzFELGVBQWUsRUFBRSxzQkFBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsc0JBQVMsQ0FBQztJQUMxRCxvQkFBb0IsRUFBRSxzQkFBUyxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxzQkFBUyxDQUFDO0lBQ3BFLG9CQUFvQixFQUFFLHNCQUFTLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLHNCQUFTLENBQUM7SUFFcEUsYUFBYTtJQUNiLHFCQUFxQixFQUFFLDBCQUFXLENBQUMscUJBQXFCO0lBQ3hELG1CQUFtQixFQUFFLDBCQUFXLENBQUMsbUJBQW1CO0lBQ3BELGtCQUFrQixFQUFFLDBCQUFXLENBQUMsa0JBQWtCO0lBQ2xELG1CQUFtQixFQUFFLDBCQUFXLENBQUMsbUJBQW1CO0lBQ3BELHdCQUF3QixFQUFFLDBCQUFXLENBQUMsd0JBQXdCO0lBQzlELG1CQUFtQixFQUFFLDBCQUFXLENBQUMsbUJBQW1CO0lBQ3BELGdCQUFnQixFQUFFLDBCQUFXLENBQUMsZ0JBQWdCO0lBQzlDLHFCQUFxQixFQUFFLDBCQUFXLENBQUMscUJBQXFCO0lBQ3hELG9CQUFvQixFQUFFLDBCQUFXLENBQUMsb0JBQW9CO0lBRXRELGtCQUFrQjtJQUNsQixvQkFBb0IsRUFBRSwwQkFBVyxDQUFDLG9CQUFvQjtJQUN0RCxzQkFBc0IsRUFBRSwwQkFBVyxDQUFDLHNCQUFzQjtJQUMxRCx1QkFBdUIsRUFBRSwwQkFBVyxDQUFDLHVCQUF1QjtJQUM1RCxlQUFlLEVBQUUsMEJBQVcsQ0FBQyxlQUFlO0lBRTVDLFlBQVk7SUFDWixPQUFPLEVBQUUsMEJBQVcsQ0FBQyxPQUFPO0lBQzVCLHNCQUFzQixFQUFFLDBCQUFXLENBQUMsc0JBQXNCO0lBQzFELGtCQUFrQixFQUFFLDBCQUFXLENBQUMsa0JBQWtCO0NBQ25ELENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXEdpdEh1YlxcZW1hXFx0ZXN0c1xcdXRpbHNcXGluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGVzdCBVdGlsaXRpZXMgSW5kZXhcbiAqIEV4cG9ydHMgYWxsIHRlc3QgdXRpbGl0aWVzIGZvciBlYXN5IGltcG9ydGluZ1xuICovXG5cbmV4cG9ydCB7IFVzZXJGYWN0b3J5LCB1c2VyRmFjdG9yeSwgVGVzdFVzZXIsIENyZWF0ZVVzZXJPcHRpb25zIH0gZnJvbSAnLi91c2VyLWZhY3RvcnknO1xuZXhwb3J0IHsgQXBpQ2xpZW50LCBhcGlDbGllbnQsIEFwaVJlc3BvbnNlLCBBcGlSZXF1ZXN0T3B0aW9ucyB9IGZyb20gJy4vYXBpLWNsaWVudCc7XG5leHBvcnQge1xuICBUZXN0SGVscGVycyxcbiAgaGVscGVycyxcbiAgU3RhbmRhcmRBcGlSZXNwb25zZSxcbiAgV2FsbGV0QmFsYW5jZSxcbiAgVHJhbnNmZXIsXG4gIE9yZGVyXG59IGZyb20gJy4vdGVzdC1oZWxwZXJzJztcblxuLy8gSW1wb3J0IHRoZSBpbnN0YW5jZXNcbmltcG9ydCB7IHVzZXJGYWN0b3J5IH0gZnJvbSAnLi91c2VyLWZhY3RvcnknO1xuaW1wb3J0IHsgYXBpQ2xpZW50IH0gZnJvbSAnLi9hcGktY2xpZW50JztcbmltcG9ydCB7IFRlc3RIZWxwZXJzIH0gZnJvbSAnLi90ZXN0LWhlbHBlcnMnO1xuXG4vLyBSZS1leHBvcnQgY29tbW9uIHRlc3QgdXRpbGl0aWVzXG5leHBvcnQgY29uc3QgdGVzdFV0aWxzID0ge1xuICAvLyBVc2VyIG1hbmFnZW1lbnRcbiAgY3JlYXRlVXNlcjogdXNlckZhY3RvcnkuY3JlYXRlVXNlci5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgY3JlYXRlVXNlcnM6IHVzZXJGYWN0b3J5LmNyZWF0ZVVzZXJzLmJpbmQodXNlckZhY3RvcnkpLFxuICBjcmVhdGVVc2VyV2l0aEJhbGFuY2U6IHVzZXJGYWN0b3J5LmNyZWF0ZVVzZXJXaXRoQmFsYW5jZS5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgcmVmcmVzaFVzZXJUb2tlbjogdXNlckZhY3RvcnkucmVmcmVzaFVzZXJUb2tlbi5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgZGVsZXRlVXNlcjogdXNlckZhY3RvcnkuZGVsZXRlVXNlci5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgY2xlYW51cDogdXNlckZhY3RvcnkuY2xlYW51cC5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgXG4gIC8vIEFQSSByZXF1ZXN0c1xuICBnZXQ6IGFwaUNsaWVudC5nZXQuYmluZChhcGlDbGllbnQpLFxuICBwb3N0OiBhcGlDbGllbnQucG9zdC5iaW5kKGFwaUNsaWVudCksXG4gIHB1dDogYXBpQ2xpZW50LnB1dC5iaW5kKGFwaUNsaWVudCksXG4gIGRlbGV0ZTogYXBpQ2xpZW50LmRlbGV0ZS5iaW5kKGFwaUNsaWVudCksXG4gIHB1YmxpY0dldDogYXBpQ2xpZW50LnB1YmxpY0dldC5iaW5kKGFwaUNsaWVudCksXG4gIHRlc3RQZXJmb3JtYW5jZTogYXBpQ2xpZW50LnRlc3RQZXJmb3JtYW5jZS5iaW5kKGFwaUNsaWVudCksXG4gIHRlc3RDb25jdXJyZW5jeTogYXBpQ2xpZW50LnRlc3RDb25jdXJyZW5jeS5iaW5kKGFwaUNsaWVudCksXG4gIHRlc3RXaXRoSW52YWxpZFRva2VuOiBhcGlDbGllbnQudGVzdFdpdGhJbnZhbGlkVG9rZW4uYmluZChhcGlDbGllbnQpLFxuICB0ZXN0V2l0aEV4cGlyZWRUb2tlbjogYXBpQ2xpZW50LnRlc3RXaXRoRXhwaXJlZFRva2VuLmJpbmQoYXBpQ2xpZW50KSxcbiAgXG4gIC8vIEFzc2VydGlvbnNcbiAgYXNzZXJ0U3VjY2Vzc1Jlc3BvbnNlOiBUZXN0SGVscGVycy5hc3NlcnRTdWNjZXNzUmVzcG9uc2UsXG4gIGFzc2VydEVycm9yUmVzcG9uc2U6IFRlc3RIZWxwZXJzLmFzc2VydEVycm9yUmVzcG9uc2UsXG4gIGFzc2VydFJlc3BvbnNlVGltZTogVGVzdEhlbHBlcnMuYXNzZXJ0UmVzcG9uc2VUaW1lLFxuICBhc3NlcnRWYWxpZFVzZXJEYXRhOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZFVzZXJEYXRhLFxuICBhc3NlcnRWYWxpZFdhbGxldEJhbGFuY2U6IFRlc3RIZWxwZXJzLmFzc2VydFZhbGlkV2FsbGV0QmFsYW5jZSxcbiAgYXNzZXJ0VmFsaWRUcmFuc2ZlcjogVGVzdEhlbHBlcnMuYXNzZXJ0VmFsaWRUcmFuc2ZlcixcbiAgYXNzZXJ0VmFsaWRPcmRlcjogVGVzdEhlbHBlcnMuYXNzZXJ0VmFsaWRPcmRlcixcbiAgYXNzZXJ0VmFsaWRNYXJrZXREYXRhOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZE1hcmtldERhdGEsXG4gIGFzc2VydFZhbGlkT3JkZXJCb29rOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZE9yZGVyQm9vayxcbiAgXG4gIC8vIERhdGEgZ2VuZXJhdGlvblxuICBnZW5lcmF0ZVRyYW5zZmVyRGF0YTogVGVzdEhlbHBlcnMuZ2VuZXJhdGVUcmFuc2ZlckRhdGEsXG4gIGdlbmVyYXRlTGltaXRPcmRlckRhdGE6IFRlc3RIZWxwZXJzLmdlbmVyYXRlTGltaXRPcmRlckRhdGEsXG4gIGdlbmVyYXRlTWFya2V0T3JkZXJEYXRhOiBUZXN0SGVscGVycy5nZW5lcmF0ZU1hcmtldE9yZGVyRGF0YSxcbiAgZ2VuZXJhdGVUZXN0UGluOiBUZXN0SGVscGVycy5nZW5lcmF0ZVRlc3RQaW4sXG4gIFxuICAvLyBVdGlsaXRpZXNcbiAgd2FpdEZvcjogVGVzdEhlbHBlcnMud2FpdEZvcixcbiAgYXNzZXJ0RGVjaW1hbFByZWNpc2lvbjogVGVzdEhlbHBlcnMuYXNzZXJ0RGVjaW1hbFByZWNpc2lvbixcbiAgYXNzZXJ0U29ydGVkQnlEYXRlOiBUZXN0SGVscGVycy5hc3NlcnRTb3J0ZWRCeURhdGVcbn07XG4iXSwidmVyc2lvbiI6M30=