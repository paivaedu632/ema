4ae022a944fe96ea99437d82921a55d2
"use strict";
/**
 * Test Utilities Index
 * Exports all test utilities for easy importing
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.testUtils = exports.Order = exports.Transfer = exports.WalletBalance = exports.StandardApiResponse = exports.helpers = exports.TestHelpers = exports.ApiRequestOptions = exports.ApiResponse = exports.apiClient = exports.ApiClient = exports.CreateUserOptions = exports.TestUser = exports.userFactory = exports.UserFactory = void 0;
var user_factory_1 = require("./user-factory");
Object.defineProperty(exports, "UserFactory", { enumerable: true, get: function () { return user_factory_1.UserFactory; } });
Object.defineProperty(exports, "userFactory", { enumerable: true, get: function () { return user_factory_1.userFactory; } });
Object.defineProperty(exports, "TestUser", { enumerable: true, get: function () { return user_factory_1.TestUser; } });
Object.defineProperty(exports, "CreateUserOptions", { enumerable: true, get: function () { return user_factory_1.CreateUserOptions; } });
var api_client_1 = require("./api-client");
Object.defineProperty(exports, "ApiClient", { enumerable: true, get: function () { return api_client_1.ApiClient; } });
Object.defineProperty(exports, "apiClient", { enumerable: true, get: function () { return api_client_1.apiClient; } });
Object.defineProperty(exports, "ApiResponse", { enumerable: true, get: function () { return api_client_1.ApiResponse; } });
Object.defineProperty(exports, "ApiRequestOptions", { enumerable: true, get: function () { return api_client_1.ApiRequestOptions; } });
var test_helpers_1 = require("./test-helpers");
Object.defineProperty(exports, "TestHelpers", { enumerable: true, get: function () { return test_helpers_1.TestHelpers; } });
Object.defineProperty(exports, "helpers", { enumerable: true, get: function () { return test_helpers_1.helpers; } });
Object.defineProperty(exports, "StandardApiResponse", { enumerable: true, get: function () { return test_helpers_1.StandardApiResponse; } });
Object.defineProperty(exports, "WalletBalance", { enumerable: true, get: function () { return test_helpers_1.WalletBalance; } });
Object.defineProperty(exports, "Transfer", { enumerable: true, get: function () { return test_helpers_1.Transfer; } });
Object.defineProperty(exports, "Order", { enumerable: true, get: function () { return test_helpers_1.Order; } });
// Re-export common test utilities
exports.testUtils = {
    // User management
    createUser: userFactory.createUser.bind(userFactory),
    createUsers: userFactory.createUsers.bind(userFactory),
    createUserWithBalance: userFactory.createUserWithBalance.bind(userFactory),
    refreshUserToken: userFactory.refreshUserToken.bind(userFactory),
    deleteUser: userFactory.deleteUser.bind(userFactory),
    cleanup: userFactory.cleanup.bind(userFactory),
    // API requests
    get: apiClient.get.bind(apiClient),
    post: apiClient.post.bind(apiClient),
    put: apiClient.put.bind(apiClient),
    delete: apiClient.delete.bind(apiClient),
    publicGet: apiClient.publicGet.bind(apiClient),
    testPerformance: apiClient.testPerformance.bind(apiClient),
    testConcurrency: apiClient.testConcurrency.bind(apiClient),
    testWithInvalidToken: apiClient.testWithInvalidToken.bind(apiClient),
    testWithExpiredToken: apiClient.testWithExpiredToken.bind(apiClient),
    // Assertions
    assertSuccessResponse: TestHelpers.assertSuccessResponse,
    assertErrorResponse: TestHelpers.assertErrorResponse,
    assertResponseTime: TestHelpers.assertResponseTime,
    assertValidUserData: TestHelpers.assertValidUserData,
    assertValidWalletBalance: TestHelpers.assertValidWalletBalance,
    assertValidTransfer: TestHelpers.assertValidTransfer,
    assertValidOrder: TestHelpers.assertValidOrder,
    assertValidMarketData: TestHelpers.assertValidMarketData,
    assertValidOrderBook: TestHelpers.assertValidOrderBook,
    // Data generation
    generateTransferData: TestHelpers.generateTransferData,
    generateLimitOrderData: TestHelpers.generateLimitOrderData,
    generateMarketOrderData: TestHelpers.generateMarketOrderData,
    generateTestPin: TestHelpers.generateTestPin,
    // Utilities
    waitFor: TestHelpers.waitFor,
    assertDecimalPrecision: TestHelpers.assertDecimalPrecision,
    assertSortedByDate: TestHelpers.assertSortedByDate
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXEdpdEh1YlxcZW1hXFx0ZXN0c1xcdXRpbHNcXGluZGV4LnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7O0dBR0c7OztBQUVILCtDQUF1RjtBQUE5RSwyR0FBQSxXQUFXLE9BQUE7QUFBRSwyR0FBQSxXQUFXLE9BQUE7QUFBRSx3R0FBQSxRQUFRLE9BQUE7QUFBRSxpSEFBQSxpQkFBaUIsT0FBQTtBQUM5RCwyQ0FBb0Y7QUFBM0UsdUdBQUEsU0FBUyxPQUFBO0FBQUUsdUdBQUEsU0FBUyxPQUFBO0FBQUUseUdBQUEsV0FBVyxPQUFBO0FBQUUsK0dBQUEsaUJBQWlCLE9BQUE7QUFDN0QsK0NBT3dCO0FBTnRCLDJHQUFBLFdBQVcsT0FBQTtBQUNYLHVHQUFBLE9BQU8sT0FBQTtBQUNQLG1IQUFBLG1CQUFtQixPQUFBO0FBQ25CLDZHQUFBLGFBQWEsT0FBQTtBQUNiLHdHQUFBLFFBQVEsT0FBQTtBQUNSLHFHQUFBLEtBQUssT0FBQTtBQUdQLGtDQUFrQztBQUNyQixRQUFBLFNBQVMsR0FBRztJQUN2QixrQkFBa0I7SUFDbEIsVUFBVSxFQUFFLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUNwRCxXQUFXLEVBQUUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQ3RELHFCQUFxQixFQUFFLFdBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFFLGdCQUFnQixFQUFFLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQ2hFLFVBQVUsRUFBRSxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDcEQsT0FBTyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUU5QyxlQUFlO0lBQ2YsR0FBRyxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNsQyxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3BDLEdBQUcsRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDbEMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QyxTQUFTLEVBQUUsU0FBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzlDLGVBQWUsRUFBRSxTQUFTLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDMUQsZUFBZSxFQUFFLFNBQVMsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxRCxvQkFBb0IsRUFBRSxTQUFTLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNwRSxvQkFBb0IsRUFBRSxTQUFTLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUVwRSxhQUFhO0lBQ2IscUJBQXFCLEVBQUUsV0FBVyxDQUFDLHFCQUFxQjtJQUN4RCxtQkFBbUIsRUFBRSxXQUFXLENBQUMsbUJBQW1CO0lBQ3BELGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxrQkFBa0I7SUFDbEQsbUJBQW1CLEVBQUUsV0FBVyxDQUFDLG1CQUFtQjtJQUNwRCx3QkFBd0IsRUFBRSxXQUFXLENBQUMsd0JBQXdCO0lBQzlELG1CQUFtQixFQUFFLFdBQVcsQ0FBQyxtQkFBbUI7SUFDcEQsZ0JBQWdCLEVBQUUsV0FBVyxDQUFDLGdCQUFnQjtJQUM5QyxxQkFBcUIsRUFBRSxXQUFXLENBQUMscUJBQXFCO0lBQ3hELG9CQUFvQixFQUFFLFdBQVcsQ0FBQyxvQkFBb0I7SUFFdEQsa0JBQWtCO0lBQ2xCLG9CQUFvQixFQUFFLFdBQVcsQ0FBQyxvQkFBb0I7SUFDdEQsc0JBQXNCLEVBQUUsV0FBVyxDQUFDLHNCQUFzQjtJQUMxRCx1QkFBdUIsRUFBRSxXQUFXLENBQUMsdUJBQXVCO0lBQzVELGVBQWUsRUFBRSxXQUFXLENBQUMsZUFBZTtJQUU1QyxZQUFZO0lBQ1osT0FBTyxFQUFFLFdBQVcsQ0FBQyxPQUFPO0lBQzVCLHNCQUFzQixFQUFFLFdBQVcsQ0FBQyxzQkFBc0I7SUFDMUQsa0JBQWtCLEVBQUUsV0FBVyxDQUFDLGtCQUFrQjtDQUNuRCxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVXNlclxcRG9jdW1lbnRzXFxHaXRIdWJcXGVtYVxcdGVzdHNcXHV0aWxzXFxpbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRlc3QgVXRpbGl0aWVzIEluZGV4XG4gKiBFeHBvcnRzIGFsbCB0ZXN0IHV0aWxpdGllcyBmb3IgZWFzeSBpbXBvcnRpbmdcbiAqL1xuXG5leHBvcnQgeyBVc2VyRmFjdG9yeSwgdXNlckZhY3RvcnksIFRlc3RVc2VyLCBDcmVhdGVVc2VyT3B0aW9ucyB9IGZyb20gJy4vdXNlci1mYWN0b3J5JztcbmV4cG9ydCB7IEFwaUNsaWVudCwgYXBpQ2xpZW50LCBBcGlSZXNwb25zZSwgQXBpUmVxdWVzdE9wdGlvbnMgfSBmcm9tICcuL2FwaS1jbGllbnQnO1xuZXhwb3J0IHsgXG4gIFRlc3RIZWxwZXJzLCBcbiAgaGVscGVycywgXG4gIFN0YW5kYXJkQXBpUmVzcG9uc2UsIFxuICBXYWxsZXRCYWxhbmNlLCBcbiAgVHJhbnNmZXIsIFxuICBPcmRlciBcbn0gZnJvbSAnLi90ZXN0LWhlbHBlcnMnO1xuXG4vLyBSZS1leHBvcnQgY29tbW9uIHRlc3QgdXRpbGl0aWVzXG5leHBvcnQgY29uc3QgdGVzdFV0aWxzID0ge1xuICAvLyBVc2VyIG1hbmFnZW1lbnRcbiAgY3JlYXRlVXNlcjogdXNlckZhY3RvcnkuY3JlYXRlVXNlci5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgY3JlYXRlVXNlcnM6IHVzZXJGYWN0b3J5LmNyZWF0ZVVzZXJzLmJpbmQodXNlckZhY3RvcnkpLFxuICBjcmVhdGVVc2VyV2l0aEJhbGFuY2U6IHVzZXJGYWN0b3J5LmNyZWF0ZVVzZXJXaXRoQmFsYW5jZS5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgcmVmcmVzaFVzZXJUb2tlbjogdXNlckZhY3RvcnkucmVmcmVzaFVzZXJUb2tlbi5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgZGVsZXRlVXNlcjogdXNlckZhY3RvcnkuZGVsZXRlVXNlci5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgY2xlYW51cDogdXNlckZhY3RvcnkuY2xlYW51cC5iaW5kKHVzZXJGYWN0b3J5KSxcbiAgXG4gIC8vIEFQSSByZXF1ZXN0c1xuICBnZXQ6IGFwaUNsaWVudC5nZXQuYmluZChhcGlDbGllbnQpLFxuICBwb3N0OiBhcGlDbGllbnQucG9zdC5iaW5kKGFwaUNsaWVudCksXG4gIHB1dDogYXBpQ2xpZW50LnB1dC5iaW5kKGFwaUNsaWVudCksXG4gIGRlbGV0ZTogYXBpQ2xpZW50LmRlbGV0ZS5iaW5kKGFwaUNsaWVudCksXG4gIHB1YmxpY0dldDogYXBpQ2xpZW50LnB1YmxpY0dldC5iaW5kKGFwaUNsaWVudCksXG4gIHRlc3RQZXJmb3JtYW5jZTogYXBpQ2xpZW50LnRlc3RQZXJmb3JtYW5jZS5iaW5kKGFwaUNsaWVudCksXG4gIHRlc3RDb25jdXJyZW5jeTogYXBpQ2xpZW50LnRlc3RDb25jdXJyZW5jeS5iaW5kKGFwaUNsaWVudCksXG4gIHRlc3RXaXRoSW52YWxpZFRva2VuOiBhcGlDbGllbnQudGVzdFdpdGhJbnZhbGlkVG9rZW4uYmluZChhcGlDbGllbnQpLFxuICB0ZXN0V2l0aEV4cGlyZWRUb2tlbjogYXBpQ2xpZW50LnRlc3RXaXRoRXhwaXJlZFRva2VuLmJpbmQoYXBpQ2xpZW50KSxcbiAgXG4gIC8vIEFzc2VydGlvbnNcbiAgYXNzZXJ0U3VjY2Vzc1Jlc3BvbnNlOiBUZXN0SGVscGVycy5hc3NlcnRTdWNjZXNzUmVzcG9uc2UsXG4gIGFzc2VydEVycm9yUmVzcG9uc2U6IFRlc3RIZWxwZXJzLmFzc2VydEVycm9yUmVzcG9uc2UsXG4gIGFzc2VydFJlc3BvbnNlVGltZTogVGVzdEhlbHBlcnMuYXNzZXJ0UmVzcG9uc2VUaW1lLFxuICBhc3NlcnRWYWxpZFVzZXJEYXRhOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZFVzZXJEYXRhLFxuICBhc3NlcnRWYWxpZFdhbGxldEJhbGFuY2U6IFRlc3RIZWxwZXJzLmFzc2VydFZhbGlkV2FsbGV0QmFsYW5jZSxcbiAgYXNzZXJ0VmFsaWRUcmFuc2ZlcjogVGVzdEhlbHBlcnMuYXNzZXJ0VmFsaWRUcmFuc2ZlcixcbiAgYXNzZXJ0VmFsaWRPcmRlcjogVGVzdEhlbHBlcnMuYXNzZXJ0VmFsaWRPcmRlcixcbiAgYXNzZXJ0VmFsaWRNYXJrZXREYXRhOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZE1hcmtldERhdGEsXG4gIGFzc2VydFZhbGlkT3JkZXJCb29rOiBUZXN0SGVscGVycy5hc3NlcnRWYWxpZE9yZGVyQm9vayxcbiAgXG4gIC8vIERhdGEgZ2VuZXJhdGlvblxuICBnZW5lcmF0ZVRyYW5zZmVyRGF0YTogVGVzdEhlbHBlcnMuZ2VuZXJhdGVUcmFuc2ZlckRhdGEsXG4gIGdlbmVyYXRlTGltaXRPcmRlckRhdGE6IFRlc3RIZWxwZXJzLmdlbmVyYXRlTGltaXRPcmRlckRhdGEsXG4gIGdlbmVyYXRlTWFya2V0T3JkZXJEYXRhOiBUZXN0SGVscGVycy5nZW5lcmF0ZU1hcmtldE9yZGVyRGF0YSxcbiAgZ2VuZXJhdGVUZXN0UGluOiBUZXN0SGVscGVycy5nZW5lcmF0ZVRlc3RQaW4sXG4gIFxuICAvLyBVdGlsaXRpZXNcbiAgd2FpdEZvcjogVGVzdEhlbHBlcnMud2FpdEZvcixcbiAgYXNzZXJ0RGVjaW1hbFByZWNpc2lvbjogVGVzdEhlbHBlcnMuYXNzZXJ0RGVjaW1hbFByZWNpc2lvbixcbiAgYXNzZXJ0U29ydGVkQnlEYXRlOiBUZXN0SGVscGVycy5hc3NlcnRTb3J0ZWRCeURhdGVcbn07XG4iXSwidmVyc2lvbiI6M30=