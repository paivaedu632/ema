{"version":3,"names":["cov_2dkrs11hor","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","useState","useCallback","useAsyncOperation","onSuccess","onError","defaultErrorMessage","isLoading","setIsLoading","error","setError","execute","operation","result","err","errorMessage","Error","message","clearError","setErrorMessage","useFormSubmission","asyncOperation","submitForm","formData","submitOperation","Object","assign","useFileUpload","uploadFile","uploadOperation"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\hooks\\use-async-operation.ts"],"sourcesContent":["'use client'\n\nimport { useState, useCallback } from 'react'\n\ninterface UseAsyncOperationOptions {\n  onSuccess?: (result?: unknown) => void\n  onError?: (error: Error) => void\n  defaultErrorMessage?: string\n}\n\ninterface UseAsyncOperationReturn {\n  isLoading: boolean\n  error: string | null\n  execute: (operation: () => Promise<unknown>) => Promise<void>\n  clearError: () => void\n  setError: (error: string) => void\n}\n\n/**\n * Reusable hook for handling async operations with loading and error states\n * Eliminates duplicate try-catch-loading patterns across components\n */\nexport function useAsyncOperation({\n  onSuccess,\n  onError,\n  defaultErrorMessage = 'Ocorreu um erro. Tente novamente.'\n}: UseAsyncOperationOptions = {}): UseAsyncOperationReturn {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const execute = useCallback(async (operation: () => Promise<unknown>) => {\n    setIsLoading(true)\n    setError(null)\n    \n    try {\n      const result = await operation()\n      onSuccess?.(result)\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : defaultErrorMessage\n      setError(errorMessage)\n      onError?.(err as Error)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [onSuccess, onError, defaultErrorMessage])\n\n  const clearError = useCallback(() => {\n    setError(null)\n  }, [])\n\n  const setErrorMessage = useCallback((errorMessage: string) => {\n    setError(errorMessage)\n  }, [])\n\n  return {\n    isLoading,\n    error,\n    execute,\n    clearError,\n    setError: setErrorMessage\n  }\n}\n\n/**\n * Specialized hook for form submission operations\n * Includes form-specific error handling and validation\n */\nexport function useFormSubmission({\n  onSuccess,\n  onError,\n  defaultErrorMessage = 'Erro ao enviar formul√°rio. Tente novamente.'\n}: UseAsyncOperationOptions = {}) {\n  const asyncOperation = useAsyncOperation({\n    onSuccess,\n    onError,\n    defaultErrorMessage\n  })\n\n  const submitForm = useCallback(async (\n    formData: Record<string, unknown>,\n    submitOperation: (data: Record<string, unknown>) => Promise<unknown>\n  ) => {\n    await asyncOperation.execute(() => submitOperation(formData))\n  }, [asyncOperation])\n\n  return {\n    ...asyncOperation,\n    submitForm\n  }\n}\n\n/**\n * Specialized hook for file upload operations\n * Includes file-specific error handling and progress tracking\n */\nexport function useFileUpload({\n  onSuccess,\n  onError,\n  defaultErrorMessage = 'Erro ao enviar arquivo. Tente novamente.'\n}: UseAsyncOperationOptions = {}) {\n  const asyncOperation = useAsyncOperation({\n    onSuccess,\n    onError,\n    defaultErrorMessage\n  })\n\n  const uploadFile = useCallback(async (\n    file: File,\n    uploadOperation: (file: File) => Promise<unknown>\n  ) => {\n    await asyncOperation.execute(() => uploadOperation(file))\n  }, [asyncOperation])\n\n  return {\n    ...asyncOperation,\n    uploadFile\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAA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","ignoreList":[]}