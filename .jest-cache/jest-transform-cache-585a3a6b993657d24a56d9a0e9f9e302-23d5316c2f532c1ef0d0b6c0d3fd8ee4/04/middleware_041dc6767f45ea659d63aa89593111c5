918bfa91a173c0967a629f64a4c37e46
/* istanbul ignore next */
function cov_1fkkko12rt() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\auth\\middleware.ts";
  var hash = "e743a58ff6645a6ec380308d387448c662131451";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\auth\\middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 9,
          column: 2
        }
      },
      "1": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "2": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "3": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 19,
          column: 14
        }
      },
      "4": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "6": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 26,
          column: 14
        }
      },
      "7": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "9": {
        start: {
          line: 31,
          column: 46
        },
        end: {
          line: 31,
          column: 80
        }
      },
      "10": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "11": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 61
        }
      },
      "12": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 37,
          column: 18
        }
      },
      "13": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 96
        }
      },
      "14": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 91
        }
      },
      "15": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 48,
          column: 14
        }
      },
      "16": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 64
        }
      },
      "17": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "18": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 54
        }
      },
      "19": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "20": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "21": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 86,
          column: 6
        }
      },
      "22": {
        start: {
          line: 81,
          column: 27
        },
        end: {
          line: 81,
          column: 61
        }
      },
      "23": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "24": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 61
        }
      },
      "25": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "authenticateRequest",
        decl: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 41
          }
        },
        loc: {
          start: {
            line: 13,
            column: 51
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "createAuthErrorResponse",
        decl: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 39
          }
        },
        loc: {
          start: {
            line: 69,
            column: 77
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 69
      },
      "2": {
        name: "withAuth",
        decl: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 24
          }
        },
        loc: {
          start: {
            line: 79,
            column: 34
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 79
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 11
          },
          end: {
            line: 80,
            column: 12
          }
        },
        loc: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 80
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 23
          }
        }, {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 60
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 21
          }
        }, {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 30
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 41,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 41,
            column: 48
          }
        }, {
          start: {
            line: 41,
            column: 52
          },
          end: {
            line: 41,
            column: 63
          }
        }, {
          start: {
            line: 41,
            column: 67
          },
          end: {
            line: 41,
            column: 91
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 40
          },
          end: {
            line: 69,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 69,
            column: 50
          },
          end: {
            line: 69,
            column: 75
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 31
          }
        }, {
          start: {
            line: 82,
            column: 35
          },
          end: {
            line: 82,
            column: 51
          }
        }],
        line: 82
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\auth\\middleware.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\auth\\middleware.ts"],
      sourcesContent: ["import { createClient } from '@supabase/supabase-js';\nimport { NextRequest, NextResponse } from 'next/server';\n\nexport interface AuthenticatedUser {\n  userId: string;\n  sessionId: string;\n}\n\nexport interface AuthResult {\n  success: boolean;\n  user?: AuthenticatedUser;\n  error?: string;\n}\n\n// Initialize Supabase client for server-side auth\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\n/**\n * Authenticate a request using Supabase Auth JWT validation\n */\nexport async function authenticateRequest(request?: NextRequest): Promise<AuthResult> {\n  try {\n    if (!request) {\n      return {\n        success: false,\n        error: 'Request object required for authentication'\n      };\n    }\n\n    const authHeader = request.headers.get('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return {\n        success: false,\n        error: 'Authorization header missing or invalid'\n      };\n    }\n\n    const token = authHeader.substring(7);\n\n    try {\n      // Verify JWT using Supabase Auth\n      const { data: { user }, error } = await supabase.auth.getUser(token);\n\n      if (error || !user) {\n        console.error('Supabase auth error:', error);\n        return {\n          success: false,\n          error: 'Invalid or expired token'\n        };\n      }\n\n      // Decode the JWT to extract session information\n      const payload = JSON.parse(Buffer.from(token.split('.')[1], 'base64url').toString());\n      const sessionId = payload.session_id || payload.sid || `session_${payload.jti}`;\n\n      return {\n        success: true,\n        user: {\n          userId: user.id,\n          sessionId: sessionId\n        }\n      };\n    } catch (tokenError) {\n      console.error('JWT validation failed:', tokenError);\n      return {\n        success: false,\n        error: 'Token validation failed'\n      };\n    }\n  } catch (error) {\n    console.error('Authentication error:', error);\n    return {\n      success: false,\n      error: 'Authentication service error'\n    };\n  }\n}\n\n/**\n * Create an authentication error response\n */\nexport function createAuthErrorResponse(message: string = 'Authentication required') {\n  return NextResponse.json(\n    {\n      success: false,\n      error: message,\n      code: 'AUTH_REQUIRED'\n    },\n    { status: 401 }\n  );\n}\n\n/**\n * Middleware wrapper for protected API routes\n */\nexport function withAuth<T extends unknown[]>(\n  handler: (request: NextRequest, user: AuthenticatedUser, ...args: T) => Promise<NextResponse>\n) {\n  return async (request: NextRequest, ...args: T): Promise<NextResponse> => {\n    const authResult = await authenticateRequest(request);\n\n    if (!authResult.success || !authResult.user) {\n      return createAuthErrorResponse(authResult.error);\n    }\n\n    return handler(request, authResult.user, ...args);\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e743a58ff6645a6ec380308d387448c662131451"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fkkko12rt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fkkko12rt();
import { createClient } from '@supabase/supabase-js';
import { NextResponse } from 'next/server';
// Initialize Supabase client for server-side auth
const supabase =
/* istanbul ignore next */
(cov_1fkkko12rt().s[0]++, createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
}));
/**
 * Authenticate a request using Supabase Auth JWT validation
 */
export async function authenticateRequest(request) {
  /* istanbul ignore next */
  cov_1fkkko12rt().f[0]++;
  cov_1fkkko12rt().s[1]++;
  try {
    /* istanbul ignore next */
    cov_1fkkko12rt().s[2]++;
    if (!request) {
      /* istanbul ignore next */
      cov_1fkkko12rt().b[0][0]++;
      cov_1fkkko12rt().s[3]++;
      return {
        success: false,
        error: 'Request object required for authentication'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fkkko12rt().b[0][1]++;
    }
    const authHeader =
    /* istanbul ignore next */
    (cov_1fkkko12rt().s[4]++, request.headers.get('authorization'));
    /* istanbul ignore next */
    cov_1fkkko12rt().s[5]++;
    if (
    /* istanbul ignore next */
    (cov_1fkkko12rt().b[2][0]++, !authHeader) ||
    /* istanbul ignore next */
    (cov_1fkkko12rt().b[2][1]++, !authHeader.startsWith('Bearer '))) {
      /* istanbul ignore next */
      cov_1fkkko12rt().b[1][0]++;
      cov_1fkkko12rt().s[6]++;
      return {
        success: false,
        error: 'Authorization header missing or invalid'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fkkko12rt().b[1][1]++;
    }
    const token =
    /* istanbul ignore next */
    (cov_1fkkko12rt().s[7]++, authHeader.substring(7));
    /* istanbul ignore next */
    cov_1fkkko12rt().s[8]++;
    try {
      // Verify JWT using Supabase Auth
      const {
        data: {
          user
        },
        error
      } =
      /* istanbul ignore next */
      (cov_1fkkko12rt().s[9]++, await supabase.auth.getUser(token));
      /* istanbul ignore next */
      cov_1fkkko12rt().s[10]++;
      if (
      /* istanbul ignore next */
      (cov_1fkkko12rt().b[4][0]++, error) ||
      /* istanbul ignore next */
      (cov_1fkkko12rt().b[4][1]++, !user)) {
        /* istanbul ignore next */
        cov_1fkkko12rt().b[3][0]++;
        cov_1fkkko12rt().s[11]++;
        console.error('Supabase auth error:', error);
        /* istanbul ignore next */
        cov_1fkkko12rt().s[12]++;
        return {
          success: false,
          error: 'Invalid or expired token'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1fkkko12rt().b[3][1]++;
      }
      // Decode the JWT to extract session information
      const payload =
      /* istanbul ignore next */
      (cov_1fkkko12rt().s[13]++, JSON.parse(Buffer.from(token.split('.')[1], 'base64url').toString()));
      const sessionId =
      /* istanbul ignore next */
      (cov_1fkkko12rt().s[14]++,
      /* istanbul ignore next */
      (cov_1fkkko12rt().b[5][0]++, payload.session_id) ||
      /* istanbul ignore next */
      (cov_1fkkko12rt().b[5][1]++, payload.sid) ||
      /* istanbul ignore next */
      (cov_1fkkko12rt().b[5][2]++, `session_${payload.jti}`));
      /* istanbul ignore next */
      cov_1fkkko12rt().s[15]++;
      return {
        success: true,
        user: {
          userId: user.id,
          sessionId: sessionId
        }
      };
    } catch (tokenError) {
      /* istanbul ignore next */
      cov_1fkkko12rt().s[16]++;
      console.error('JWT validation failed:', tokenError);
      /* istanbul ignore next */
      cov_1fkkko12rt().s[17]++;
      return {
        success: false,
        error: 'Token validation failed'
      };
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1fkkko12rt().s[18]++;
    console.error('Authentication error:', error);
    /* istanbul ignore next */
    cov_1fkkko12rt().s[19]++;
    return {
      success: false,
      error: 'Authentication service error'
    };
  }
}
/**
 * Create an authentication error response
 */
export function createAuthErrorResponse(message =
/* istanbul ignore next */
(cov_1fkkko12rt().b[6][0]++, 'Authentication required')) {
  /* istanbul ignore next */
  cov_1fkkko12rt().f[1]++;
  cov_1fkkko12rt().s[20]++;
  return NextResponse.json({
    success: false,
    error: message,
    code: 'AUTH_REQUIRED'
  }, {
    status: 401
  });
}
/**
 * Middleware wrapper for protected API routes
 */
export function withAuth(handler) {
  /* istanbul ignore next */
  cov_1fkkko12rt().f[2]++;
  cov_1fkkko12rt().s[21]++;
  return async (request, ...args) => {
    /* istanbul ignore next */
    cov_1fkkko12rt().f[3]++;
    const authResult =
    /* istanbul ignore next */
    (cov_1fkkko12rt().s[22]++, await authenticateRequest(request));
    /* istanbul ignore next */
    cov_1fkkko12rt().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1fkkko12rt().b[8][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_1fkkko12rt().b[8][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_1fkkko12rt().b[7][0]++;
      cov_1fkkko12rt().s[24]++;
      return createAuthErrorResponse(authResult.error);
    } else
    /* istanbul ignore next */
    {
      cov_1fkkko12rt().b[7][1]++;
    }
    cov_1fkkko12rt().s[25]++;
    return handler(request, authResult.user, ...args);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,