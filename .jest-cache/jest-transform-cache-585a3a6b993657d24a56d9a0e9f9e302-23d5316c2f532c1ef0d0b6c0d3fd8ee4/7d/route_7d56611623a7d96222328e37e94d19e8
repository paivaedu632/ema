cb4b736864021fef4d17e73b19efdfd1
/* istanbul ignore next */
function cov_ks04goaoc() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\send\\route.ts";
  var hash = "ff84e936e52a84dceb3af3b619edaff853372d4f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\send\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 77
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "3": {
        start: {
          line: 14,
          column: 64
        },
        end: {
          line: 14,
          column: 79
        }
      },
      "4": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 18,
          column: 49
        }
      },
      "5": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "7": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 68
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "9": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "11": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "13": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 32,
          column: 36
        }
      },
      "14": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "15": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 82
        }
      },
      "16": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 78
        }
      }
    },
    fnMap: {
      "0": {
        name: "transferSendHandler",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 34
          }
        },
        loc: {
          start: {
            line: 7,
            column: 50
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 27
          }
        }, {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 18,
            column: 46
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 60
          },
          end: {
            line: 21,
            column: 66
          }
        }, {
          start: {
            line: 21,
            column: 69
          },
          end: {
            line: 21,
            column: 96
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 40
          }
        }, {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 57
          }
        }],
        line: 21
      },
      "6": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "7": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 60
          },
          end: {
            line: 24,
            column: 66
          }
        }, {
          start: {
            line: 24,
            column: 69
          },
          end: {
            line: 24,
            column: 87
          }
        }],
        line: 24
      },
      "8": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 40
          }
        }, {
          start: {
            line: 24,
            column: 44
          },
          end: {
            line: 24,
            column: 57
          }
        }],
        line: 24
      },
      "9": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "10": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 60
          },
          end: {
            line: 27,
            column: 66
          }
        }, {
          start: {
            line: 27,
            column: 69
          },
          end: {
            line: 27,
            column: 93
          }
        }],
        line: 27
      },
      "11": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 40
          }
        }, {
          start: {
            line: 27,
            column: 44
          },
          end: {
            line: 27,
            column: 57
          }
        }],
        line: 27
      },
      "12": {
        loc: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 188
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 106
          }
        }, {
          start: {
            line: 34,
            column: 112
          },
          end: {
            line: 34,
            column: 187
          }
        }],
        line: 34
      },
      "13": {
        loc: {
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 72
          },
          end: {
            line: 34,
            column: 78
          }
        }, {
          start: {
            line: 34,
            column: 81
          },
          end: {
            line: 34,
            column: 106
          }
        }],
        line: 34
      },
      "14": {
        loc: {
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 42
          }
        }, {
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 34,
            column: 69
          }
        }],
        line: 34
      },
      "15": {
        loc: {
          start: {
            line: 34,
            column: 112
          },
          end: {
            line: 34,
            column: 187
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 163
          },
          end: {
            line: 34,
            column: 169
          }
        }, {
          start: {
            line: 34,
            column: 172
          },
          end: {
            line: 34,
            column: 187
          }
        }],
        line: 34
      },
      "16": {
        loc: {
          start: {
            line: 34,
            column: 112
          },
          end: {
            line: 34,
            column: 160
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 112
          },
          end: {
            line: 34,
            column: 133
          }
        }, {
          start: {
            line: 34,
            column: 137
          },
          end: {
            line: 34,
            column: 160
          }
        }],
        line: 34
      },
      "17": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 96
          }
        }, {
          start: {
            line: 40,
            column: 101
          },
          end: {
            line: 40,
            column: 112
          }
        }],
        line: 40
      },
      "18": {
        loc: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 68
          },
          end: {
            line: 40,
            column: 74
          }
        }, {
          start: {
            line: 40,
            column: 77
          },
          end: {
            line: 40,
            column: 96
          }
        }],
        line: 40
      },
      "19": {
        loc: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 38
          }
        }, {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 40,
            column: 65
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\send\\route.ts",
      mappings: "AACA,OAAO,EAAE,QAAQ,EAAqB,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAE3D,KAAK,UAAU,mBAAmB,CAAC,OAAoB,EAAE,IAAuB;;IAC9E,wBAAwB;IACxB,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IAC1E,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,UAAU,CAAC,IAAK,CAAC;IAE7E,oBAAoB;IACpB,MAAM,MAAM,GAAG,MAAM,eAAe,iBAClC,SAAS,EAAE,IAAI,CAAC,MAAM,EACtB,oBAAoB,EAAE,WAAW,EACjC,QAAQ;QACR,MAAM;QACN,GAAG,IACA,CAAC,WAAW,IAAI,EAAE,WAAW,EAAE,CAAC,EACnC,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,8BAA8B;QAC9B,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAE,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;YAC3C,OAAO,cAAc,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAClC,OAAO,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC;QACD,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAE,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;YACxC,OAAO,cAAc,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,YAAY,GAAG,MAAM,CAAC,IAA2E,CAAC;IAExG,MAAM,YAAY,GAAG;QACnB,UAAU,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,YAAY,MAAI,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,EAAE,CAAA;QAC1D,QAAQ,EAAE,IAAI,CAAC,MAAM;QACrB,WAAW;QACX,MAAM;QACN,QAAQ;QACR,WAAW;QACX,MAAM,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,KAAI,WAAW;QAC3C,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACnC,kBAAkB,EAAE,YAAY;KACjC,CAAC;IAEF,OAAO,qBAAqB,CAAC,YAAY,EAAE,iCAAiC,CAAC,CAAC;AAChF,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\transfers\\send\\route.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateRequestBody } from '@/lib/validation/helpers';\nimport { transferSendSchema } from '@/lib/validation/schemas';\nimport { sendP2PTransfer } from '@/lib/database/functions';\n\nasync function transferSendHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate request body\n  const validation = await validateRequestBody(request, transferSendSchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { recipientId, amount, currency, pin, description } = validation.data!;\n\n  // Send P2P transfer\n  const result = await sendP2PTransfer({\n    sender_id: user.userId,\n    recipient_identifier: recipientId,\n    currency,\n    amount,\n    pin,\n    ...(description && { description })\n  });\n\n  if (!result.success) {\n    // Handle specific error cases\n    if (result.error?.includes('insufficient')) {\n      return ErrorResponses.insufficientBalance(result.error);\n    }\n    if (result.error?.includes('PIN')) {\n      return ErrorResponses.invalidPin(result.error);\n    }\n    if (result.error?.includes('not found')) {\n      return ErrorResponses.userNotFound('Recipient not found');\n    }\n\n    return ErrorResponses.transferFailed(result.error);\n  }\n\n  const transferData = result.data as { reference_id?: string; id?: string; status?: string } | undefined;\n\n  const responseData = {\n    transferId: transferData?.reference_id || transferData?.id,\n    senderId: user.userId,\n    recipientId,\n    amount,\n    currency,\n    description,\n    status: transferData?.status || 'completed',\n    timestamp: new Date().toISOString(),\n    transactionDetails: transferData\n  };\n\n  return createSuccessResponse(responseData, 'Transfer completed successfully');\n}\n\nexport const POST = withCors(withErrorHandling(withAuth(transferSendHandler)));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ff84e936e52a84dceb3af3b619edaff853372d4f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ks04goaoc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ks04goaoc();
import { withAuth } from '@/lib/auth/middleware';
import { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';
import { withCors } from '@/lib/api/cors';
import { validateRequestBody } from '@/lib/validation/helpers';
import { transferSendSchema } from '@/lib/validation/schemas';
import { sendP2PTransfer } from '@/lib/database/functions';
async function transferSendHandler(request, user) {
  /* istanbul ignore next */
  cov_ks04goaoc().f[0]++;
  var _a, _b, _c;
  // Validate request body
  const validation =
  /* istanbul ignore next */
  (cov_ks04goaoc().s[0]++, await validateRequestBody(request, transferSendSchema));
  /* istanbul ignore next */
  cov_ks04goaoc().s[1]++;
  if (!validation.success) {
    /* istanbul ignore next */
    cov_ks04goaoc().b[0][0]++;
    cov_ks04goaoc().s[2]++;
    return ErrorResponses.validationError(validation.error);
  } else
  /* istanbul ignore next */
  {
    cov_ks04goaoc().b[0][1]++;
  }
  const {
    recipientId,
    amount,
    currency,
    pin,
    description
  } =
  /* istanbul ignore next */
  (cov_ks04goaoc().s[3]++, validation.data);
  // Send P2P transfer
  const result =
  /* istanbul ignore next */
  (cov_ks04goaoc().s[4]++, await sendP2PTransfer(Object.assign({
    sender_id: user.userId,
    recipient_identifier: recipientId,
    currency,
    amount,
    pin
  },
  /* istanbul ignore next */
  (cov_ks04goaoc().b[1][0]++, description) &&
  /* istanbul ignore next */
  (cov_ks04goaoc().b[1][1]++, {
    description
  }))));
  /* istanbul ignore next */
  cov_ks04goaoc().s[5]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_ks04goaoc().b[2][0]++;
    cov_ks04goaoc().s[6]++;
    // Handle specific error cases
    if (
    /* istanbul ignore next */
    (cov_ks04goaoc().b[5][0]++, (_a = result.error) === null) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[5][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_ks04goaoc().b[4][0]++, void 0) :
    /* istanbul ignore next */
    (cov_ks04goaoc().b[4][1]++, _a.includes('insufficient'))) {
      /* istanbul ignore next */
      cov_ks04goaoc().b[3][0]++;
      cov_ks04goaoc().s[7]++;
      return ErrorResponses.insufficientBalance(result.error);
    } else
    /* istanbul ignore next */
    {
      cov_ks04goaoc().b[3][1]++;
    }
    cov_ks04goaoc().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_ks04goaoc().b[8][0]++, (_b = result.error) === null) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[8][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_ks04goaoc().b[7][0]++, void 0) :
    /* istanbul ignore next */
    (cov_ks04goaoc().b[7][1]++, _b.includes('PIN'))) {
      /* istanbul ignore next */
      cov_ks04goaoc().b[6][0]++;
      cov_ks04goaoc().s[9]++;
      return ErrorResponses.invalidPin(result.error);
    } else
    /* istanbul ignore next */
    {
      cov_ks04goaoc().b[6][1]++;
    }
    cov_ks04goaoc().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_ks04goaoc().b[11][0]++, (_c = result.error) === null) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[11][1]++, _c === void 0) ?
    /* istanbul ignore next */
    (cov_ks04goaoc().b[10][0]++, void 0) :
    /* istanbul ignore next */
    (cov_ks04goaoc().b[10][1]++, _c.includes('not found'))) {
      /* istanbul ignore next */
      cov_ks04goaoc().b[9][0]++;
      cov_ks04goaoc().s[11]++;
      return ErrorResponses.userNotFound('Recipient not found');
    } else
    /* istanbul ignore next */
    {
      cov_ks04goaoc().b[9][1]++;
    }
    cov_ks04goaoc().s[12]++;
    return ErrorResponses.transferFailed(result.error);
  } else
  /* istanbul ignore next */
  {
    cov_ks04goaoc().b[2][1]++;
  }
  const transferData =
  /* istanbul ignore next */
  (cov_ks04goaoc().s[13]++, result.data);
  const responseData =
  /* istanbul ignore next */
  (cov_ks04goaoc().s[14]++, {
    transferId:
    /* istanbul ignore next */
    (cov_ks04goaoc().b[12][0]++,
    /* istanbul ignore next */
    (cov_ks04goaoc().b[14][0]++, transferData === null) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[14][1]++, transferData === void 0) ?
    /* istanbul ignore next */
    (cov_ks04goaoc().b[13][0]++, void 0) :
    /* istanbul ignore next */
    (cov_ks04goaoc().b[13][1]++, transferData.reference_id)) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[12][1]++,
    /* istanbul ignore next */
    (cov_ks04goaoc().b[16][0]++, transferData === null) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[16][1]++, transferData === void 0) ?
    /* istanbul ignore next */
    (cov_ks04goaoc().b[15][0]++, void 0) :
    /* istanbul ignore next */
    (cov_ks04goaoc().b[15][1]++, transferData.id)),
    senderId: user.userId,
    recipientId,
    amount,
    currency,
    description,
    status:
    /* istanbul ignore next */
    (cov_ks04goaoc().b[17][0]++,
    /* istanbul ignore next */
    (cov_ks04goaoc().b[19][0]++, transferData === null) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[19][1]++, transferData === void 0) ?
    /* istanbul ignore next */
    (cov_ks04goaoc().b[18][0]++, void 0) :
    /* istanbul ignore next */
    (cov_ks04goaoc().b[18][1]++, transferData.status)) ||
    /* istanbul ignore next */
    (cov_ks04goaoc().b[17][1]++, 'completed'),
    timestamp: new Date().toISOString(),
    transactionDetails: transferData
  });
  /* istanbul ignore next */
  cov_ks04goaoc().s[15]++;
  return createSuccessResponse(responseData, 'Transfer completed successfully');
}
export const POST =
/* istanbul ignore next */
(cov_ks04goaoc().s[16]++, withCors(withErrorHandling(withAuth(transferSendHandler))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,