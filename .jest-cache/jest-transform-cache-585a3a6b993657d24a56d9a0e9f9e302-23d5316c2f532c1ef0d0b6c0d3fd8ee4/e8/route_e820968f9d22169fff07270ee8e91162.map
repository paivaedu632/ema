{"version":3,"names":["cov_ubcomigwl","actualCoverage","createSuccessResponse","ErrorResponses","withErrorHandling","withCors","validateSearchParams","z","marketDepthSchema","s","object","baseCurrency","string","default","quoteCurrency","levels","number","int","min","max","marketDepthHandler","request","f","validation","success","b","validationError","error","data","generateMockOrders","side","basePrice","count","orders","i","priceOffset","price","amount","Math","random","push","parseFloat","toFixed","total","mockDepthData","pair","bids","asks","spread","absolute","percentage","lastUpdated","Date","toISOString","console","databaseError","GET"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\market\\depth\\route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateSearchParams } from '@/lib/validation/helpers';\nimport { z } from 'zod';\n\n// Schema for market depth parameters\nconst marketDepthSchema = z.object({\n  baseCurrency: z.string().default('EUR'),\n  quoteCurrency: z.string().default('AOA'),\n  levels: z.number().int().min(1).max(50).default(10)\n});\n\nasync function marketDepthHandler(request: NextRequest) {\n  // Validate search parameters\n  const validation = validateSearchParams(request, marketDepthSchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { baseCurrency, quoteCurrency, levels } = validation.data!;\n\n  try {\n    // For now, return mock order book data\n    // In a real implementation, this would query the order_book table\n\n    const generateMockOrders = (side: 'buy' | 'sell', basePrice: number, count: number) => {\n      const orders = [];\n      for (let i = 0; i < count; i++) {\n        const priceOffset = side === 'buy' ? -i * 0.5 : i * 0.5;\n        const price = basePrice + priceOffset;\n        const amount = Math.random() * 1000 + 100;\n        orders.push({\n          price: parseFloat(price.toFixed(2)),\n          amount: parseFloat(amount.toFixed(2)),\n          total: parseFloat((price * amount).toFixed(2))\n        });\n      }\n      return orders;\n    };\n\n    const basePrice = baseCurrency === 'EUR' && quoteCurrency === 'AOA' ? 655.50 : 0.00152;\n\n    const mockDepthData = {\n      pair: `${baseCurrency}/${quoteCurrency}`,\n      baseCurrency,\n      quoteCurrency,\n      bids: generateMockOrders('buy', basePrice, levels),\n      asks: generateMockOrders('sell', basePrice, levels),\n      spread: {\n        absolute: 1.00,\n        percentage: 0.15\n      },\n      lastUpdated: new Date().toISOString(),\n      levels\n    };\n\n    return createSuccessResponse(mockDepthData, 'Market depth retrieved successfully');\n\n  } catch (error) {\n    console.error('Market depth error:', error);\n    return ErrorResponses.databaseError('Failed to retrieve market depth');\n  }\n}\n\nexport const GET = withCors(withErrorHandling(marketDepthHandler));\n"],"mappings":"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","ignoreList":[]}