69847b912decbf2ce407488b7c68469a
/* istanbul ignore next */
function cov_29mwo5v0al() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\users\\search\\route.ts";
  var hash = "4f96011b5829ab07578b2073781440240e77ea44";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\users\\search\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 70
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "3": {
        start: {
          line: 13,
          column: 38
        },
        end: {
          line: 13,
          column: 53
        }
      },
      "4": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "5": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 58
        }
      },
      "7": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 63
        }
      },
      "8": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "9": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "10": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "11": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 76
        }
      },
      "12": {
        start: {
          line: 35,
          column: 19
        },
        end: {
          line: 35,
          column: 75
        }
      }
    },
    fnMap: {
      "0": {
        name: "userSearchHandler",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 32
          }
        },
        loc: {
          start: {
            line: 7,
            column: 48
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 17
          }
        },
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 59
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 26,
            column: 14
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 33
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 23,
            column: 58
          }
        }, {
          start: {
            line: 23,
            column: 61
          },
          end: {
            line: 23,
            column: 63
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\users\\search\\route.ts",
      mappings: "AACA,OAAO,EAAE,QAAQ,EAAqB,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,KAAK,UAAU,iBAAiB,CAAC,OAAoB,EAAE,IAAuB;IAC5E,6BAA6B;IAC7B,MAAM,UAAU,GAAG,oBAAoB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;IACnE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,EAAE,KAAK,EAAE,IAAI,GAAG,OAAO,EAAE,GAAG,UAAU,CAAC,IAAK,CAAC;IAEnD,mBAAmB;IACnB,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC;QACvC,YAAY,EAAE,KAAK;QACnB,WAAW,EAAE,IAAI;KAClB,CAAC,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,OAAO,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,oDAAoD;IACpD,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5D,MAAM,aAAa,GAAG,KAAK;SACxB,MAAM,CAAC,CAAC,SAAyB,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC;SACnE,GAAG,CAAC,CAAC,SAAqG,EAAE,EAAE,CAAC,CAAC;QAC/G,EAAE,EAAE,SAAS,CAAC,EAAE;QAChB,KAAK,EAAE,SAAS,CAAC,KAAK;QACtB,SAAS,EAAE,SAAS,CAAC,UAAU;QAC/B,QAAQ,EAAE,SAAS,CAAC,SAAS;QAC7B,QAAQ,EAAE,SAAS,CAAC,SAAS;KAC9B,CAAC,CAAC,CAAC;IAEN,OAAO,qBAAqB,CAAC,aAAa,EAAE,0BAA0B,CAAC,CAAC;AAC1E,CAAC;AAED,MAAM,CAAC,MAAM,GAAG,GAAG,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\users\\search\\route.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateSearchParams } from '@/lib/validation/helpers';\nimport { userSearchSchema } from '@/lib/validation/schemas';\nimport { findUserForTransfer } from '@/lib/database/functions';\n\nasync function userSearchHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate search parameters\n  const validation = validateSearchParams(request, userSearchSchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { query, type = 'email' } = validation.data!;\n\n  // Search for users\n  const result = await findUserForTransfer({\n    search_query: query,\n    search_type: type\n  });\n\n  if (!result.success) {\n    return ErrorResponses.databaseError(result.error);\n  }\n\n  // Filter out sensitive information and current user\n  const users = Array.isArray(result.data) ? result.data : [];\n  const filteredUsers = users\n    .filter((foundUser: { id: string }) => foundUser.id !== user.userId)\n    .map((foundUser: { id: string; email: string; first_name?: string; last_name?: string; full_name?: string }) => ({\n      id: foundUser.id,\n      email: foundUser.email,\n      firstName: foundUser.first_name,\n      lastName: foundUser.last_name,\n      fullName: foundUser.full_name\n    }));\n\n  return createSuccessResponse(filteredUsers, 'Users found successfully');\n}\n\nexport const GET = withCors(withErrorHandling(withAuth(userSearchHandler)));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f96011b5829ab07578b2073781440240e77ea44"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29mwo5v0al = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29mwo5v0al();
import { withAuth } from '@/lib/auth/middleware';
import { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';
import { withCors } from '@/lib/api/cors';
import { validateSearchParams } from '@/lib/validation/helpers';
import { userSearchSchema } from '@/lib/validation/schemas';
import { findUserForTransfer } from '@/lib/database/functions';
async function userSearchHandler(request, user) {
  /* istanbul ignore next */
  cov_29mwo5v0al().f[0]++;
  // Validate search parameters
  const validation =
  /* istanbul ignore next */
  (cov_29mwo5v0al().s[0]++, validateSearchParams(request, userSearchSchema));
  /* istanbul ignore next */
  cov_29mwo5v0al().s[1]++;
  if (!validation.success) {
    /* istanbul ignore next */
    cov_29mwo5v0al().b[0][0]++;
    cov_29mwo5v0al().s[2]++;
    return ErrorResponses.validationError(validation.error);
  } else
  /* istanbul ignore next */
  {
    cov_29mwo5v0al().b[0][1]++;
  }
  const {
    query,
    type =
    /* istanbul ignore next */
    (cov_29mwo5v0al().b[1][0]++, 'email')
  } =
  /* istanbul ignore next */
  (cov_29mwo5v0al().s[3]++, validation.data);
  // Search for users
  const result =
  /* istanbul ignore next */
  (cov_29mwo5v0al().s[4]++, await findUserForTransfer({
    search_query: query,
    search_type: type
  }));
  /* istanbul ignore next */
  cov_29mwo5v0al().s[5]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_29mwo5v0al().b[2][0]++;
    cov_29mwo5v0al().s[6]++;
    return ErrorResponses.databaseError(result.error);
  } else
  /* istanbul ignore next */
  {
    cov_29mwo5v0al().b[2][1]++;
  }
  // Filter out sensitive information and current user
  const users =
  /* istanbul ignore next */
  (cov_29mwo5v0al().s[7]++, Array.isArray(result.data) ?
  /* istanbul ignore next */
  (cov_29mwo5v0al().b[3][0]++, result.data) :
  /* istanbul ignore next */
  (cov_29mwo5v0al().b[3][1]++, []));
  const filteredUsers =
  /* istanbul ignore next */
  (cov_29mwo5v0al().s[8]++, users.filter(foundUser => {
    /* istanbul ignore next */
    cov_29mwo5v0al().f[1]++;
    cov_29mwo5v0al().s[9]++;
    return foundUser.id !== user.userId;
  }).map(foundUser => {
    /* istanbul ignore next */
    cov_29mwo5v0al().f[2]++;
    cov_29mwo5v0al().s[10]++;
    return {
      id: foundUser.id,
      email: foundUser.email,
      firstName: foundUser.first_name,
      lastName: foundUser.last_name,
      fullName: foundUser.full_name
    };
  }));
  /* istanbul ignore next */
  cov_29mwo5v0al().s[11]++;
  return createSuccessResponse(filteredUsers, 'Users found successfully');
}
export const GET =
/* istanbul ignore next */
(cov_29mwo5v0al().s[12]++, withCors(withErrorHandling(withAuth(userSearchHandler))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjltd281djBhbCIsImFjdHVhbENvdmVyYWdlIiwid2l0aEF1dGgiLCJjcmVhdGVTdWNjZXNzUmVzcG9uc2UiLCJFcnJvclJlc3BvbnNlcyIsIndpdGhFcnJvckhhbmRsaW5nIiwid2l0aENvcnMiLCJ2YWxpZGF0ZVNlYXJjaFBhcmFtcyIsInVzZXJTZWFyY2hTY2hlbWEiLCJmaW5kVXNlckZvclRyYW5zZmVyIiwidXNlclNlYXJjaEhhbmRsZXIiLCJyZXF1ZXN0IiwidXNlciIsImYiLCJ2YWxpZGF0aW9uIiwicyIsInN1Y2Nlc3MiLCJiIiwidmFsaWRhdGlvbkVycm9yIiwiZXJyb3IiLCJxdWVyeSIsInR5cGUiLCJkYXRhIiwicmVzdWx0Iiwic2VhcmNoX3F1ZXJ5Iiwic2VhcmNoX3R5cGUiLCJkYXRhYmFzZUVycm9yIiwidXNlcnMiLCJBcnJheSIsImlzQXJyYXkiLCJmaWx0ZXJlZFVzZXJzIiwiZmlsdGVyIiwiZm91bmRVc2VyIiwiaWQiLCJ1c2VySWQiLCJtYXAiLCJlbWFpbCIsImZpcnN0TmFtZSIsImZpcnN0X25hbWUiLCJsYXN0TmFtZSIsImxhc3RfbmFtZSIsImZ1bGxOYW1lIiwiZnVsbF9uYW1lIiwiR0VUIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXEdpdEh1YlxcZW1hXFxzcmNcXGFwcFxcYXBpXFx2MVxcdXNlcnNcXHNlYXJjaFxccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyB3aXRoQXV0aCwgQXV0aGVudGljYXRlZFVzZXIgfSBmcm9tICdAL2xpYi9hdXRoL21pZGRsZXdhcmUnO1xuaW1wb3J0IHsgY3JlYXRlU3VjY2Vzc1Jlc3BvbnNlLCBFcnJvclJlc3BvbnNlcywgd2l0aEVycm9ySGFuZGxpbmcgfSBmcm9tICdAL2xpYi9hcGkvcmVzcG9uc2VzJztcbmltcG9ydCB7IHdpdGhDb3JzIH0gZnJvbSAnQC9saWIvYXBpL2NvcnMnO1xuaW1wb3J0IHsgdmFsaWRhdGVTZWFyY2hQYXJhbXMgfSBmcm9tICdAL2xpYi92YWxpZGF0aW9uL2hlbHBlcnMnO1xuaW1wb3J0IHsgdXNlclNlYXJjaFNjaGVtYSB9IGZyb20gJ0AvbGliL3ZhbGlkYXRpb24vc2NoZW1hcyc7XG5pbXBvcnQgeyBmaW5kVXNlckZvclRyYW5zZmVyIH0gZnJvbSAnQC9saWIvZGF0YWJhc2UvZnVuY3Rpb25zJztcblxuYXN5bmMgZnVuY3Rpb24gdXNlclNlYXJjaEhhbmRsZXIocmVxdWVzdDogTmV4dFJlcXVlc3QsIHVzZXI6IEF1dGhlbnRpY2F0ZWRVc2VyKSB7XG4gIC8vIFZhbGlkYXRlIHNlYXJjaCBwYXJhbWV0ZXJzXG4gIGNvbnN0IHZhbGlkYXRpb24gPSB2YWxpZGF0ZVNlYXJjaFBhcmFtcyhyZXF1ZXN0LCB1c2VyU2VhcmNoU2NoZW1hKTtcbiAgaWYgKCF2YWxpZGF0aW9uLnN1Y2Nlc3MpIHtcbiAgICByZXR1cm4gRXJyb3JSZXNwb25zZXMudmFsaWRhdGlvbkVycm9yKHZhbGlkYXRpb24uZXJyb3IhKTtcbiAgfVxuXG4gIGNvbnN0IHsgcXVlcnksIHR5cGUgPSAnZW1haWwnIH0gPSB2YWxpZGF0aW9uLmRhdGEhO1xuXG4gIC8vIFNlYXJjaCBmb3IgdXNlcnNcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmluZFVzZXJGb3JUcmFuc2Zlcih7XG4gICAgc2VhcmNoX3F1ZXJ5OiBxdWVyeSxcbiAgICBzZWFyY2hfdHlwZTogdHlwZVxuICB9KTtcblxuICBpZiAoIXJlc3VsdC5zdWNjZXNzKSB7XG4gICAgcmV0dXJuIEVycm9yUmVzcG9uc2VzLmRhdGFiYXNlRXJyb3IocmVzdWx0LmVycm9yKTtcbiAgfVxuXG4gIC8vIEZpbHRlciBvdXQgc2Vuc2l0aXZlIGluZm9ybWF0aW9uIGFuZCBjdXJyZW50IHVzZXJcbiAgY29uc3QgdXNlcnMgPSBBcnJheS5pc0FycmF5KHJlc3VsdC5kYXRhKSA/IHJlc3VsdC5kYXRhIDogW107XG4gIGNvbnN0IGZpbHRlcmVkVXNlcnMgPSB1c2Vyc1xuICAgIC5maWx0ZXIoKGZvdW5kVXNlcjogeyBpZDogc3RyaW5nIH0pID0+IGZvdW5kVXNlci5pZCAhPT0gdXNlci51c2VySWQpXG4gICAgLm1hcCgoZm91bmRVc2VyOiB7IGlkOiBzdHJpbmc7IGVtYWlsOiBzdHJpbmc7IGZpcnN0X25hbWU/OiBzdHJpbmc7IGxhc3RfbmFtZT86IHN0cmluZzsgZnVsbF9uYW1lPzogc3RyaW5nIH0pID0+ICh7XG4gICAgICBpZDogZm91bmRVc2VyLmlkLFxuICAgICAgZW1haWw6IGZvdW5kVXNlci5lbWFpbCxcbiAgICAgIGZpcnN0TmFtZTogZm91bmRVc2VyLmZpcnN0X25hbWUsXG4gICAgICBsYXN0TmFtZTogZm91bmRVc2VyLmxhc3RfbmFtZSxcbiAgICAgIGZ1bGxOYW1lOiBmb3VuZFVzZXIuZnVsbF9uYW1lXG4gICAgfSkpO1xuXG4gIHJldHVybiBjcmVhdGVTdWNjZXNzUmVzcG9uc2UoZmlsdGVyZWRVc2VycywgJ1VzZXJzIGZvdW5kIHN1Y2Nlc3NmdWxseScpO1xufVxuXG5leHBvcnQgY29uc3QgR0VUID0gd2l0aENvcnMod2l0aEVycm9ySGFuZGxpbmcod2l0aEF1dGgodXNlclNlYXJjaEhhbmRsZXIpKSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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