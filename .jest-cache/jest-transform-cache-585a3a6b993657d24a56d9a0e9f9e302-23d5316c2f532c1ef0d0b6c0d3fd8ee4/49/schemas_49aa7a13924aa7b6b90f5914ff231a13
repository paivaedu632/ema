5c7a465085476c6468744ed386d941cd
/* istanbul ignore next */
function cov_25oovnbjba() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\validation\\schemas.ts";
  var hash = "0bae81b4527d37d87d030207ec32387fc519fa08";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\validation\\schemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 52
        }
      },
      "1": {
        start: {
          line: 4,
          column: 26
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "2": {
        start: {
          line: 5,
          column: 27
        },
        end: {
          line: 5,
          column: 45
        }
      },
      "3": {
        start: {
          line: 6,
          column: 27
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 84
        }
      },
      "5": {
        start: {
          line: 8,
          column: 28
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "6": {
        start: {
          line: 10,
          column: 32
        },
        end: {
          line: 13,
          column: 2
        }
      },
      "7": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "8": {
        start: {
          line: 22,
          column: 37
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "9": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "10": {
        start: {
          line: 35,
          column: 33
        },
        end: {
          line: 41,
          column: 2
        }
      },
      "11": {
        start: {
          line: 42,
          column: 34
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "12": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "13": {
        start: {
          line: 51,
          column: 18
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "14": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "15": {
        start: {
          line: 59,
          column: 33
        },
        end: {
          line: 61,
          column: 2
        }
      },
      "16": {
        start: {
          line: 63,
          column: 36
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "17": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 70,
          column: 2
        }
      },
      "18": {
        start: {
          line: 72,
          column: 37
        },
        end: {
          line: 76,
          column: 2
        }
      },
      "19": {
        start: {
          line: 77,
          column: 35
        },
        end: {
          line: 81,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 51,
            column: 10
          },
          end: {
            line: 51,
            column: 11
          }
        },
        loc: {
          start: {
            line: 51,
            column: 18
          },
          end: {
            line: 51,
            column: 46
          }
        },
        line: 51
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\validation\\schemas.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\lib\\validation\\schemas.ts"],
      sourcesContent: ["import { z } from 'zod';\n\n// Common validation patterns\nexport const currencySchema = z.enum(['EUR', 'AOA']);\nexport const uuidSchema = z.string().uuid();\nexport const emailSchema = z.string().email();\nexport const phoneSchema = z.string().min(10).max(15);\nexport const pinSchema = z.string().regex(/^\\d{6}$/, 'PIN must be exactly 6 digits');\nexport const amountSchema = z.number().positive().max(1000000);\n\n// User search schema\nexport const userSearchSchema = z.object({\n  query: z.string().min(1).max(100),\n  type: z.enum(['email', 'phone', 'name']).optional()\n});\n\n// Transfer schemas\nexport const transferSendSchema = z.object({\n  recipientId: uuidSchema,\n  amount: amountSchema,\n  currency: currencySchema,\n  pin: pinSchema,\n  description: z.string().max(200).optional()\n});\n\nexport const transferHistorySchema = z.object({\n  page: z.number().int().positive().default(1),\n  limit: z.number().int().min(1).max(100).default(20),\n  currency: currencySchema.optional()\n});\n\n// Order schemas\nexport const limitOrderSchema = z.object({\n  side: z.enum(['buy', 'sell']),\n  amount: amountSchema,\n  price: z.number().positive(),\n  baseCurrency: currencySchema,\n  quoteCurrency: currencySchema\n});\n\nexport const marketOrderSchema = z.object({\n  side: z.enum(['buy', 'sell']),\n  amount: amountSchema,\n  baseCurrency: currencySchema,\n  quoteCurrency: currencySchema,\n  slippageLimit: z.number().min(0).max(0.1).default(0.05) // 5% default slippage\n});\n\nexport const orderHistorySchema = z.object({\n  page: z.number().int().positive().default(1),\n  limit: z.number().int().min(1).max(100).default(20),\n  status: z.enum(['pending', 'filled', 'cancelled', 'partial']).optional()\n});\n\n// Security schemas\nexport const pinSetSchema = z.object({\n  pin: pinSchema,\n  confirmPin: pinSchema\n}).refine(data => data.pin === data.confirmPin, {\n  message: \"PINs don't match\",\n  path: [\"confirmPin\"]\n});\n\nexport const pinVerifySchema = z.object({\n  pin: pinSchema\n});\n\n// Market data schemas\nexport const marketDepthSchema = z.object({\n  levels: z.number().int().min(1).max(50).default(10)\n});\n\n// Wallet schemas\nexport const walletCurrencySchema = z.object({\n  currency: currencySchema\n});\n\n// Pagination helper\nexport const paginationSchema = z.object({\n  page: z.number().int().positive().default(1),\n  limit: z.number().int().min(1).max(100).default(20)\n});\n\n// Response schemas\nexport const successResponseSchema = z.object({\n  success: z.literal(true),\n  data: z.any(),\n  message: z.string().optional()\n});\n\nexport const errorResponseSchema = z.object({\n  success: z.literal(false),\n  error: z.string(),\n  code: z.string().optional()\n});\n\nexport type UserSearchInput = z.infer<typeof userSearchSchema>;\nexport type TransferSendInput = z.infer<typeof transferSendSchema>;\nexport type TransferHistoryInput = z.infer<typeof transferHistorySchema>;\nexport type LimitOrderInput = z.infer<typeof limitOrderSchema>;\nexport type MarketOrderInput = z.infer<typeof marketOrderSchema>;\nexport type OrderHistoryInput = z.infer<typeof orderHistorySchema>;\nexport type PinSetInput = z.infer<typeof pinSetSchema>;\nexport type PinVerifyInput = z.infer<typeof pinVerifySchema>;\nexport type MarketDepthInput = z.infer<typeof marketDepthSchema>;\nexport type WalletCurrencyInput = z.infer<typeof walletCurrencySchema>;\nexport type PaginationInput = z.infer<typeof paginationSchema>;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0bae81b4527d37d87d030207ec32387fc519fa08"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25oovnbjba = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25oovnbjba();
import { z } from 'zod';
// Common validation patterns
export const currencySchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[0]++, z.enum(['EUR', 'AOA']));
export const uuidSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[1]++, z.string().uuid());
export const emailSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[2]++, z.string().email());
export const phoneSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[3]++, z.string().min(10).max(15));
export const pinSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[4]++, z.string().regex(/^\d{6}$/, 'PIN must be exactly 6 digits'));
export const amountSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[5]++, z.number().positive().max(1000000));
// User search schema
export const userSearchSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[6]++, z.object({
  query: z.string().min(1).max(100),
  type: z.enum(['email', 'phone', 'name']).optional()
}));
// Transfer schemas
export const transferSendSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[7]++, z.object({
  recipientId: uuidSchema,
  amount: amountSchema,
  currency: currencySchema,
  pin: pinSchema,
  description: z.string().max(200).optional()
}));
export const transferHistorySchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[8]++, z.object({
  page: z.number().int().positive().default(1),
  limit: z.number().int().min(1).max(100).default(20),
  currency: currencySchema.optional()
}));
// Order schemas
export const limitOrderSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[9]++, z.object({
  side: z.enum(['buy', 'sell']),
  amount: amountSchema,
  price: z.number().positive(),
  baseCurrency: currencySchema,
  quoteCurrency: currencySchema
}));
export const marketOrderSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[10]++, z.object({
  side: z.enum(['buy', 'sell']),
  amount: amountSchema,
  baseCurrency: currencySchema,
  quoteCurrency: currencySchema,
  slippageLimit: z.number().min(0).max(0.1).default(0.05) // 5% default slippage
}));
export const orderHistorySchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[11]++, z.object({
  page: z.number().int().positive().default(1),
  limit: z.number().int().min(1).max(100).default(20),
  status: z.enum(['pending', 'filled', 'cancelled', 'partial']).optional()
}));
// Security schemas
export const pinSetSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[12]++, z.object({
  pin: pinSchema,
  confirmPin: pinSchema
}).refine(data => {
  /* istanbul ignore next */
  cov_25oovnbjba().f[0]++;
  cov_25oovnbjba().s[13]++;
  return data.pin === data.confirmPin;
}, {
  message: "PINs don't match",
  path: ["confirmPin"]
}));
export const pinVerifySchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[14]++, z.object({
  pin: pinSchema
}));
// Market data schemas
export const marketDepthSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[15]++, z.object({
  levels: z.number().int().min(1).max(50).default(10)
}));
// Wallet schemas
export const walletCurrencySchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[16]++, z.object({
  currency: currencySchema
}));
// Pagination helper
export const paginationSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[17]++, z.object({
  page: z.number().int().positive().default(1),
  limit: z.number().int().min(1).max(100).default(20)
}));
// Response schemas
export const successResponseSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[18]++, z.object({
  success: z.literal(true),
  data: z.any(),
  message: z.string().optional()
}));
export const errorResponseSchema =
/* istanbul ignore next */
(cov_25oovnbjba().s[19]++, z.object({
  success: z.literal(false),
  error: z.string(),
  code: z.string().optional()
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,