{"version":3,"names":["cov_13c7p4nkgx","actualCoverage","UserRepository","WalletRepository","TransactionRepository","RepositoryError","Error","constructor","message","operation","entity","cause","f","s","name","EntityNotFoundError","id","ConcurrencyError","ConstraintViolationError","constraint"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\domain\\repositories\\index.ts"],"sourcesContent":["/**\n * Repository Interfaces Export\n * \n * Central export point for all repository interfaces.\n */\n\nexport { UserRepository } from './UserRepository'\nexport { WalletRepository } from './WalletRepository'\nexport { TransactionRepository, type TransactionSearchCriteria } from './TransactionRepository'\n\n/**\n * Unit of Work interface for managing transactions across repositories\n */\nexport interface UnitOfWork {\n  /**\n   * Begin a database transaction\n   */\n  begin(): Promise<void>\n\n  /**\n   * Commit the current transaction\n   */\n  commit(): Promise<void>\n\n  /**\n   * Rollback the current transaction\n   */\n  rollback(): Promise<void>\n\n  /**\n   * Execute a function within a transaction\n   */\n  execute<T>(operation: () => Promise<T>): Promise<T>\n\n  /**\n   * Check if currently in a transaction\n   */\n  isInTransaction(): boolean\n}\n\n/**\n * Repository factory interface for dependency injection\n */\nexport interface RepositoryFactory {\n  /**\n   * Create user repository\n   */\n  createUserRepository(): UserRepository\n\n  /**\n   * Create wallet repository\n   */\n  createWalletRepository(): WalletRepository\n\n  /**\n   * Create transaction repository\n   */\n  createTransactionRepository(): TransactionRepository\n\n  /**\n   * Create unit of work\n   */\n  createUnitOfWork(): UnitOfWork\n}\n\n/**\n * Repository error types\n */\nexport class RepositoryError extends Error {\n  constructor(\n    message: string,\n    public readonly operation: string,\n    public readonly entity: string,\n    public readonly cause?: Error\n  ) {\n    super(message)\n    this.name = 'RepositoryError'\n  }\n}\n\nexport class EntityNotFoundError extends RepositoryError {\n  constructor(entity: string, id: string, cause?: Error) {\n    super(`${entity} with ID ${id} not found`, 'find', entity, cause)\n    this.name = 'EntityNotFoundError'\n  }\n}\n\nexport class ConcurrencyError extends RepositoryError {\n  constructor(entity: string, id: string, cause?: Error) {\n    super(`Concurrency conflict for ${entity} with ID ${id}`, 'save', entity, cause)\n    this.name = 'ConcurrencyError'\n  }\n}\n\nexport class ConstraintViolationError extends RepositoryError {\n  constructor(entity: string, constraint: string, cause?: Error) {\n    super(`Constraint violation for ${entity}: ${constraint}`, 'save', entity, cause)\n    this.name = 'ConstraintViolationError'\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwEoB;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAxEpB;;;;;AAMA,SAASE,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,qBAAqB,QAAwC,yBAAyB;AAyD/F;;;AAGA,OAAM,MAAOC,eAAgB,SAAQC,KAAK;EACxCC,YACEC,OAAe,EACCC,SAAiB,EACjBC,MAAc,EACdC,KAAa;IAAA;IAAAX,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAa,CAAA;IAE7B,KAAK,CAACL,OAAO,CAAC;IAAA;IAAAR,cAAA,GAAAa,CAAA;IAJE,KAAAJ,SAAS,GAATA,SAAS;IAAQ;IAAAT,cAAA,GAAAa,CAAA;IACjB,KAAAH,MAAM,GAANA,MAAM;IAAQ;IAAAV,cAAA,GAAAa,CAAA;IACd,KAAAF,KAAK,GAALA,KAAK;IAAQ;IAAAX,cAAA,GAAAa,CAAA;IAG7B,IAAI,CAACC,IAAI,GAAG,iBAAiB;EAC/B;;AAGF,OAAM,MAAOC,mBAAoB,SAAQV,eAAe;EACtDE,YAAYG,MAAc,EAAEM,EAAU,EAAEL,KAAa;IAAA;IAAAX,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAa,CAAA;IACnD,KAAK,CAAC,GAAGH,MAAM,YAAYM,EAAE,YAAY,EAAE,MAAM,EAAEN,MAAM,EAAEC,KAAK,CAAC;IAAA;IAAAX,cAAA,GAAAa,CAAA;IACjE,IAAI,CAACC,IAAI,GAAG,qBAAqB;EACnC;;AAGF,OAAM,MAAOG,gBAAiB,SAAQZ,eAAe;EACnDE,YAAYG,MAAc,EAAEM,EAAU,EAAEL,KAAa;IAAA;IAAAX,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAa,CAAA;IACnD,KAAK,CAAC,4BAA4BH,MAAM,YAAYM,EAAE,EAAE,EAAE,MAAM,EAAEN,MAAM,EAAEC,KAAK,CAAC;IAAA;IAAAX,cAAA,GAAAa,CAAA;IAChF,IAAI,CAACC,IAAI,GAAG,kBAAkB;EAChC;;AAGF,OAAM,MAAOI,wBAAyB,SAAQb,eAAe;EAC3DE,YAAYG,MAAc,EAAES,UAAkB,EAAER,KAAa;IAAA;IAAAX,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAa,CAAA;IAC3D,KAAK,CAAC,4BAA4BH,MAAM,KAAKS,UAAU,EAAE,EAAE,MAAM,EAAET,MAAM,EAAEC,KAAK,CAAC;IAAA;IAAAX,cAAA,GAAAa,CAAA;IACjF,IAAI,CAACC,IAAI,GAAG,0BAA0B;EACxC","ignoreList":[]}