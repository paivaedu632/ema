{"version":3,"names":["cov_1a99if1k3","actualCoverage","withAuth","createSuccessResponse","ErrorResponses","withErrorHandling","withCors","validateRequestBody","limitOrderSchema","placeLimitOrder","limitOrderHandler","request","user","f","validation","s","success","b","validationError","error","side","amount","price","baseCurrency","quoteCurrency","data","result","user_id","userId","order_type","base_currency","quote_currency","_a","includes","insufficientBalance","orderFailed","orderData","responseData","orderId","id","orderType","status","createdAt","created_at","Date","toISOString","orderDetails","POST"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\limit\\route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateRequestBody } from '@/lib/validation/helpers';\nimport { limitOrderSchema } from '@/lib/validation/schemas';\nimport { placeLimitOrder } from '@/lib/database/functions';\n\nasync function limitOrderHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate request body\n  const validation = await validateRequestBody(request, limitOrderSchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { side, amount, price, baseCurrency, quoteCurrency } = validation.data!;\n\n  // Place limit order\n  const result = await placeLimitOrder({\n    user_id: user.userId,\n    order_type: 'limit',\n    side,\n    base_currency: baseCurrency,\n    quote_currency: quoteCurrency,\n    amount,\n    price\n  });\n\n  if (!result.success) {\n    // Handle specific error cases\n    if (result.error?.includes('insufficient')) {\n      return ErrorResponses.insufficientBalance(result.error);\n    }\n\n    return ErrorResponses.orderFailed(result.error);\n  }\n\n  const orderData = result.data as { id?: string; status?: string; created_at?: string } | undefined;\n\n  const responseData = {\n    orderId: orderData?.id,\n    userId: user.userId,\n    orderType: 'limit' as const,\n    side,\n    baseCurrency,\n    quoteCurrency,\n    amount,\n    price,\n    status: orderData?.status || 'pending',\n    createdAt: orderData?.created_at || new Date().toISOString(),\n    orderDetails: orderData\n  };\n\n  return createSuccessResponse(responseData, 'Limit order placed successfully');\n}\n\nexport const POST = withCors(withErrorHandling(withAuth(limitOrderHandler)));\n"],"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","ignoreList":[]}