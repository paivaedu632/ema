4b1a0f388b3bb225fa251176c30e9208
/* istanbul ignore next */
function cov_1a99if1k3() {
  var path = "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\limit\\route.ts";
  var hash = "fe888f83dac0c4d08b4321f090c230e75971d76a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\limit\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 75
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "3": {
        start: {
          line: 14,
          column: 65
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "4": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "5": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "7": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "9": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "10": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "11": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 82
        }
      },
      "12": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "limitOrderHandler",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 32
          }
        },
        loc: {
          start: {
            line: 7,
            column: 48
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 60
          },
          end: {
            line: 27,
            column: 66
          }
        }, {
          start: {
            line: 27,
            column: 69
          },
          end: {
            line: 27,
            column: 96
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 40
          }
        }, {
          start: {
            line: 27,
            column: 44
          },
          end: {
            line: 27,
            column: 57
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 62
          },
          end: {
            line: 34,
            column: 68
          }
        }, {
          start: {
            line: 34,
            column: 71
          },
          end: {
            line: 34,
            column: 83
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 35
          }
        }, {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 59
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 87
          }
        }, {
          start: {
            line: 42,
            column: 92
          },
          end: {
            line: 42,
            column: 101
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 62
          },
          end: {
            line: 42,
            column: 68
          }
        }, {
          start: {
            line: 42,
            column: 71
          },
          end: {
            line: 42,
            column: 87
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 35
          }
        }, {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 42,
            column: 59
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 43,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 94
          }
        }, {
          start: {
            line: 43,
            column: 99
          },
          end: {
            line: 43,
            column: 123
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 65
          },
          end: {
            line: 43,
            column: 71
          }
        }, {
          start: {
            line: 43,
            column: 74
          },
          end: {
            line: 43,
            column: 94
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 38
          }
        }, {
          start: {
            line: 43,
            column: 42
          },
          end: {
            line: 43,
            column: 62
          }
        }],
        line: 43
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\limit\\route.ts",
      mappings: "AACA,OAAO,EAAE,QAAQ,EAAqB,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAE3D,KAAK,UAAU,iBAAiB,CAAC,OAAoB,EAAE,IAAuB;;IAC5E,wBAAwB;IACxB,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;IACxE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,UAAU,CAAC,IAAK,CAAC;IAE9E,oBAAoB;IACpB,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC;QACnC,OAAO,EAAE,IAAI,CAAC,MAAM;QACpB,UAAU,EAAE,OAAO;QACnB,IAAI;QACJ,aAAa,EAAE,YAAY;QAC3B,cAAc,EAAE,aAAa;QAC7B,MAAM;QACN,KAAK;KACN,CAAC,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,8BAA8B;QAC9B,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAE,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;YAC3C,OAAO,cAAc,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1D,CAAC;QAED,OAAO,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,SAAS,GAAG,MAAM,CAAC,IAAyE,CAAC;IAEnG,MAAM,YAAY,GAAG;QACnB,OAAO,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,EAAE;QACtB,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,SAAS,EAAE,OAAgB;QAC3B,IAAI;QACJ,YAAY;QACZ,aAAa;QACb,MAAM;QACN,KAAK;QACL,MAAM,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,KAAI,SAAS;QACtC,SAAS,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,UAAU,KAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QAC5D,YAAY,EAAE,SAAS;KACxB,CAAC;IAEF,OAAO,qBAAqB,CAAC,YAAY,EAAE,iCAAiC,CAAC,CAAC;AAChF,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\orders\\limit\\route.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateRequestBody } from '@/lib/validation/helpers';\nimport { limitOrderSchema } from '@/lib/validation/schemas';\nimport { placeLimitOrder } from '@/lib/database/functions';\n\nasync function limitOrderHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate request body\n  const validation = await validateRequestBody(request, limitOrderSchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { side, amount, price, baseCurrency, quoteCurrency } = validation.data!;\n\n  // Place limit order\n  const result = await placeLimitOrder({\n    user_id: user.userId,\n    order_type: 'limit',\n    side,\n    base_currency: baseCurrency,\n    quote_currency: quoteCurrency,\n    amount,\n    price\n  });\n\n  if (!result.success) {\n    // Handle specific error cases\n    if (result.error?.includes('insufficient')) {\n      return ErrorResponses.insufficientBalance(result.error);\n    }\n\n    return ErrorResponses.orderFailed(result.error);\n  }\n\n  const orderData = result.data as { id?: string; status?: string; created_at?: string } | undefined;\n\n  const responseData = {\n    orderId: orderData?.id,\n    userId: user.userId,\n    orderType: 'limit' as const,\n    side,\n    baseCurrency,\n    quoteCurrency,\n    amount,\n    price,\n    status: orderData?.status || 'pending',\n    createdAt: orderData?.created_at || new Date().toISOString(),\n    orderDetails: orderData\n  };\n\n  return createSuccessResponse(responseData, 'Limit order placed successfully');\n}\n\nexport const POST = withCors(withErrorHandling(withAuth(limitOrderHandler)));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fe888f83dac0c4d08b4321f090c230e75971d76a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a99if1k3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1a99if1k3();
import { withAuth } from '@/lib/auth/middleware';
import { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';
import { withCors } from '@/lib/api/cors';
import { validateRequestBody } from '@/lib/validation/helpers';
import { limitOrderSchema } from '@/lib/validation/schemas';
import { placeLimitOrder } from '@/lib/database/functions';
async function limitOrderHandler(request, user) {
  /* istanbul ignore next */
  cov_1a99if1k3().f[0]++;
  var _a;
  // Validate request body
  const validation =
  /* istanbul ignore next */
  (cov_1a99if1k3().s[0]++, await validateRequestBody(request, limitOrderSchema));
  /* istanbul ignore next */
  cov_1a99if1k3().s[1]++;
  if (!validation.success) {
    /* istanbul ignore next */
    cov_1a99if1k3().b[0][0]++;
    cov_1a99if1k3().s[2]++;
    return ErrorResponses.validationError(validation.error);
  } else
  /* istanbul ignore next */
  {
    cov_1a99if1k3().b[0][1]++;
  }
  const {
    side,
    amount,
    price,
    baseCurrency,
    quoteCurrency
  } =
  /* istanbul ignore next */
  (cov_1a99if1k3().s[3]++, validation.data);
  // Place limit order
  const result =
  /* istanbul ignore next */
  (cov_1a99if1k3().s[4]++, await placeLimitOrder({
    user_id: user.userId,
    order_type: 'limit',
    side,
    base_currency: baseCurrency,
    quote_currency: quoteCurrency,
    amount,
    price
  }));
  /* istanbul ignore next */
  cov_1a99if1k3().s[5]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_1a99if1k3().b[1][0]++;
    cov_1a99if1k3().s[6]++;
    // Handle specific error cases
    if (
    /* istanbul ignore next */
    (cov_1a99if1k3().b[4][0]++, (_a = result.error) === null) ||
    /* istanbul ignore next */
    (cov_1a99if1k3().b[4][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1a99if1k3().b[3][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1a99if1k3().b[3][1]++, _a.includes('insufficient'))) {
      /* istanbul ignore next */
      cov_1a99if1k3().b[2][0]++;
      cov_1a99if1k3().s[7]++;
      return ErrorResponses.insufficientBalance(result.error);
    } else
    /* istanbul ignore next */
    {
      cov_1a99if1k3().b[2][1]++;
    }
    cov_1a99if1k3().s[8]++;
    return ErrorResponses.orderFailed(result.error);
  } else
  /* istanbul ignore next */
  {
    cov_1a99if1k3().b[1][1]++;
  }
  const orderData =
  /* istanbul ignore next */
  (cov_1a99if1k3().s[9]++, result.data);
  const responseData =
  /* istanbul ignore next */
  (cov_1a99if1k3().s[10]++, {
    orderId:
    /* istanbul ignore next */
    (cov_1a99if1k3().b[6][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_1a99if1k3().b[6][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_1a99if1k3().b[5][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1a99if1k3().b[5][1]++, orderData.id),
    userId: user.userId,
    orderType: 'limit',
    side,
    baseCurrency,
    quoteCurrency,
    amount,
    price,
    status:
    /* istanbul ignore next */
    (cov_1a99if1k3().b[7][0]++,
    /* istanbul ignore next */
    (cov_1a99if1k3().b[9][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_1a99if1k3().b[9][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_1a99if1k3().b[8][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1a99if1k3().b[8][1]++, orderData.status)) ||
    /* istanbul ignore next */
    (cov_1a99if1k3().b[7][1]++, 'pending'),
    createdAt:
    /* istanbul ignore next */
    (cov_1a99if1k3().b[10][0]++,
    /* istanbul ignore next */
    (cov_1a99if1k3().b[12][0]++, orderData === null) ||
    /* istanbul ignore next */
    (cov_1a99if1k3().b[12][1]++, orderData === void 0) ?
    /* istanbul ignore next */
    (cov_1a99if1k3().b[11][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1a99if1k3().b[11][1]++, orderData.created_at)) ||
    /* istanbul ignore next */
    (cov_1a99if1k3().b[10][1]++, new Date().toISOString()),
    orderDetails: orderData
  });
  /* istanbul ignore next */
  cov_1a99if1k3().s[11]++;
  return createSuccessResponse(responseData, 'Limit order placed successfully');
}
export const POST =
/* istanbul ignore next */
(cov_1a99if1k3().s[12]++, withCors(withErrorHandling(withAuth(limitOrderHandler))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,