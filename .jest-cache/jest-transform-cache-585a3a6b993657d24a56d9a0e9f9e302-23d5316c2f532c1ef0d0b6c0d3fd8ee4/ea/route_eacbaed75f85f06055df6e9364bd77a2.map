{"version":3,"names":["cov_lisey6963","actualCoverage","withAuth","createSuccessResponse","ErrorResponses","withErrorHandling","withCors","validateRequestBody","pinVerifySchema","verifyUserPin","pinVerifyHandler","request","user","f","validation","s","success","b","validationError","error","pin","data","result","user_id","userId","_a","includes","_b","invalidPin","databaseError","pinData","isValid","valid","responseData","pinValid","timestamp","Date","toISOString","console","internalError","POST"],"sources":["C:\\Users\\User\\Documents\\GitHub\\ema\\src\\app\\api\\v1\\security\\pin\\verify\\route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { withAuth, AuthenticatedUser } from '@/lib/auth/middleware';\nimport { createSuccessResponse, ErrorResponses, withErrorHandling } from '@/lib/api/responses';\nimport { withCors } from '@/lib/api/cors';\nimport { validateRequestBody } from '@/lib/validation/helpers';\nimport { pinVerifySchema } from '@/lib/validation/schemas';\nimport { verifyUserPin } from '@/lib/database/functions';\n\nasync function pinVerifyHandler(request: NextRequest, user: AuthenticatedUser) {\n  // Validate request body\n  const validation = await validateRequestBody(request, pinVerifySchema);\n  if (!validation.success) {\n    return ErrorResponses.validationError(validation.error!);\n  }\n\n  const { pin } = validation.data!;\n\n  try {\n    // Verify user PIN\n    const result = await verifyUserPin({\n      user_id: user.userId,\n      pin\n    });\n\n    if (!result.success) {\n      // Check if it's a PIN verification failure vs system error\n      if (result.error?.includes('Invalid PIN') || result.error?.includes('incorrect')) {\n        return ErrorResponses.invalidPin('Invalid PIN');\n      }\n      return ErrorResponses.databaseError(result.error);\n    }\n\n    const pinData = result.data as { valid?: boolean } | boolean | undefined;\n    const isValid = result.data === true || (typeof pinData === 'object' && pinData?.valid === true);\n\n    if (!isValid) {\n      return ErrorResponses.invalidPin('Invalid PIN');\n    }\n\n    const responseData = {\n      userId: user.userId,\n      pinValid: true,\n      timestamp: new Date().toISOString()\n    };\n\n    return createSuccessResponse(responseData, 'PIN verified successfully');\n\n  } catch (error) {\n    console.error('PIN verify error:', error);\n    return ErrorResponses.internalError('Failed to verify PIN');\n  }\n}\n\nexport const POST = withCors(withErrorHandling(withAuth(pinVerifyHandler)));\n"],"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","ignoreList":[]}